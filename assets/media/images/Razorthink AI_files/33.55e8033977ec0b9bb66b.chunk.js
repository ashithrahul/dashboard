(this["webpackJsonp"] = this["webpackJsonp"] || []).push([[33],{

/***/ "./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/BaseClass.js":
/*!**************************************************************************************!*\
  !*** ./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/BaseClass.js ***!
  \**************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../../commons/src/index.constants */ \"./commons/src/index.constants.js\");\n/* harmony import */ var _commons_src_index_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../../commons/src/index.utils */ \"./commons/src/index.utils.js\");\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! immutable */ \"./node_modules/immutable/dist/immutable.js\");\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _ModelPage_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../ModelPage.actions */ \"./apps/Model/src/pages/ModelPage/ModelPage.actions.js\");\n/* harmony import */ var _ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ModelDesigner.actions */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.actions.js\");\n/* harmony import */ var _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ModelDesigner.constants */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.constants.js\");\n/* harmony import */ var _ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ModelDesigner.utils */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.utils.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\n\n\n\n\n\nvar BaseClass = function BaseClass() {\n  var inhertClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : react__WEBPACK_IMPORTED_MODULE_3___default.a.Component;\n  return (\n    /*#__PURE__*/\n    function (_inhertClass) {\n      _inherits(Base, _inhertClass);\n\n      function Base() {\n        _classCallCheck(this, Base);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(Base).apply(this, arguments));\n      }\n\n      _createClass(Base, [{\n        key: \"onChildSelect\",\n        value: function onChildSelect(activeChild) {\n          var _this = this;\n\n          var postState = function postState() {\n            return _this.builderRef.getRefs().then(function (refs) {\n              _this.setState({\n                refs: refs\n              });\n            });\n          };\n\n          var isActiveChildHorizontalStackItem = false;\n          var borderHighlightChildren = Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([]);\n          var stackListActiveIndex = 0;\n          var stackListIterations = 1;\n          var createComplexBlockType = undefined;\n          var selectedChild = undefined;\n          var selectedConnections = undefined;\n          var newStackPosition = undefined;\n          var infoTabInstanceNameError = '';\n\n          if (activeChild.type === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].GROUP && activeChild.shared) {\n            borderHighlightChildren = Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(activeChild.sharesWith);\n          }\n\n          if (activeChild.stackID) {\n            isActiveChildHorizontalStackItem = this.builderRef.state.reducer.getIn(['stacks', activeChild.stackID, 'orientationType']) === _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"stackTypes\"].HORIZONTAL;\n\n            if (isActiveChildHorizontalStackItem) {\n              stackListIterations = this.builderRef.state.reducer.getIn(['stacks', activeChild.stackID, 'parameters', 'iteration']);\n              this.getStackIterationBlock(stackListActiveIndex, Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(activeChild), isActiveChildHorizontalStackItem, stackListIterations, postState, borderHighlightChildren);\n              return;\n            }\n          }\n\n          if (activeChild.type === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].STACK) {\n            this.setState({\n              activeChild: Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(activeChild),\n              // rightPaneActiveUid: '1',\n              isActiveChildHorizontalStackItem: isActiveChildHorizontalStackItem,\n              stackListActiveIndex: stackListActiveIndex,\n              stackListIterations: stackListIterations,\n              createComplexBlockType: createComplexBlockType,\n              selectedChild: selectedChild,\n              selectedConnections: selectedConnections,\n              newStackPosition: newStackPosition,\n              borderHighlightChildren: borderHighlightChildren,\n              infoTabInstanceNameError: infoTabInstanceNameError\n            }, postState);\n            return;\n          }\n\n          var inputs = this.getInputOutput(Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(activeChild), 'inputs');\n          var outputs = this.getInputOutput(Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(activeChild), 'outputs');\n          var parameters = this.getParameters(Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(activeChild));\n          this.setState({\n            activeChild: Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(_objectSpread({}, activeChild, {\n              inputs: inputs,\n              outputs: outputs,\n              parameters: parameters\n            })),\n            isActiveChildHorizontalStackItem: isActiveChildHorizontalStackItem,\n            stackListActiveIndex: stackListActiveIndex,\n            stackListIterations: stackListIterations,\n            createComplexBlockType: createComplexBlockType,\n            selectedChild: selectedChild,\n            selectedConnections: selectedConnections,\n            newStackPosition: newStackPosition,\n            borderHighlightChildren: borderHighlightChildren,\n            infoTabInstanceNameError: infoTabInstanceNameError\n          }, postState);\n        }\n      }, {\n        key: \"getNewPositionOnIOChange\",\n        value: function getNewPositionOnIOChange(type, added) {\n          var oldPosition = this.state.activeChild.get('position').toJS();\n          var reducerItemType = this.state.activeChild.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].OPERATOR ? 'operators' : 'blocks';\n          var activeChildID = this.state.activeChild.get('id');\n          var inputCount = this.builderRef.state.reducer.getIn([reducerItemType, activeChildID, 'inputs']).count();\n          var outputCount = this.builderRef.state.reducer.getIn([reducerItemType, activeChildID, 'outputs']).count();\n          return _objectSpread({}, oldPosition, {\n            y1: Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getItemY1\"])(added ? inputCount + (type === 'inputs' ? 1 : 0) : inputCount - (type === 'inputs' ? 1 : 0), added ? outputCount + (type === 'outputs' ? 1 : 0) : outputCount - (type === 'outputs' ? 1 : 0), oldPosition.y0)\n          });\n        }\n      }, {\n        key: \"updateBlocksInBE\",\n        value: function updateBlocksInBE(_ref) {\n          var _this2 = this;\n\n          var blocks = _ref.blocks,\n              operators = _ref.operators,\n              stacks = _ref.stacks,\n              allBlocksUpdated = _ref.allBlocksUpdated;\n          var blocksAndOperatorsToBeUpdated = {};\n          var stacksToBeUpdated = [];\n          var groupsToBeUpdated = [];\n          allBlocksUpdated.forEach(function (item) {\n            if (item.type === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].GROUP) {\n              groupsToBeUpdated.push(item);\n            } else if (blocks.get(item.id) || operators.get(item.id)) {\n              var dataObject = blocks.get(item.id) ? blocks.get(item.id) : operators.get(item.id);\n              blocksAndOperatorsToBeUpdated = _objectSpread({}, blocksAndOperatorsToBeUpdated, _defineProperty({}, item.id, {\n                position: dataObject.get('position').toJS(),\n                group_name: dataObject.get('group_name'),\n                description: dataObject.get('description'),\n                color: dataObject.get('color')\n              }));\n            } else if (stacks.get(item.id)) {\n              stacksToBeUpdated.push(item);\n            }\n          });\n\n          if (Object.keys(blocksAndOperatorsToBeUpdated).length) {\n            this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_MOVE_BLOCK\"],\n              body: blocksAndOperatorsToBeUpdated,\n              params: _objectSpread({}, this.props.routeProps.match.params, {\n                modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n              }),\n              dispatch: this.props.dispatch\n            }));\n          }\n\n          if (stacksToBeUpdated.length) {\n            stacksToBeUpdated.forEach(function (stackItem) {\n              var stack = stacks.get(stackItem.id);\n\n              _this2.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n                NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_MOVE_BLOCK\"],\n                body: {\n                  position: stack.get('position').toJS(),\n                  group_name: stack.get('group_name'),\n                  description: stack.get('description'),\n                  color: stack.get('color')\n                },\n                params: _objectSpread({}, _this2.props.routeProps.match.params, {\n                  modelId: _this2.props.subBlockView.get('componentID') && !_this2.props.subBlockView.get('readOnly') ? _this2.props.subBlockView.get('componentID') : _this2.props.routeProps.match.params.modelId,\n                  stackId: stackItem.id\n                }),\n                dispatch: _this2.props.dispatch\n              }));\n            });\n          }\n\n          if (groupsToBeUpdated.length) {\n            groupsToBeUpdated.forEach(function (groupItem) {\n              var group = blocks.get(groupItem.id);\n              var item = {\n                position: group.get('position').toJS(),\n                group_name: group.get('group_name'),\n                description: group.get('description'),\n                color: group.get('color')\n              };\n              var isGroupShared = group.get('shared');\n\n              _this2.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n                NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_MOVE_BLOCK\"],\n                body: item,\n                params: _objectSpread({}, _this2.props.routeProps.match.params, {\n                  groupId: isGroupShared ? group.get('parentGroupID') : groupItem.id,\n                  sharedGroupId: isGroupShared ? groupItem.id : undefined,\n                  modelId: _this2.props.subBlockView.get('componentID') && !_this2.props.subBlockView.get('readOnly') ? _this2.props.subBlockView.get('componentID') : _this2.props.routeProps.match.params.modelId\n                }),\n                dispatch: _this2.props.dispatch\n              }));\n\n              _this2.builderRef.updateStateReducer(_this2.builderRef.state.reducer.set('unsaved', true));\n            });\n          }\n        }\n      }, {\n        key: \"moveOverlappingNodes\",\n        value: function moveOverlappingNodes() {\n          var _this3 = this;\n\n          var reducer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.builderRef.state.reducer;\n          var newPosition = arguments.length > 1 ? arguments[1] : undefined;\n          var newActiveChildId = arguments.length > 2 ? arguments[2] : undefined;\n          var cb = arguments.length > 3 ? arguments[3] : undefined;\n          var blocks = reducer.get('blocks');\n          var operators = reducer.get('operators');\n          var stacks = reducer.get('stacks');\n          var occupiedGrids = Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_1__[\"getOccupiedGrids\"])(blocks.merge(operators).merge(stacks));\n\n          if (Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_1__[\"isGridOccupied\"])(newPosition, occupiedGrids, newActiveChildId)) {\n            var moveBlocksInstance = new _commons_src_index_utils__WEBPACK_IMPORTED_MODULE_1__[\"IncreasedBlockDimensionAccomodator\"]();\n            moveBlocksInstance.addEventListener('message', function (moveBlockEvent) {\n              var _moveBlockEvent$data = moveBlockEvent.data,\n                  updatedBlocks = _moveBlockEvent$data.blocks,\n                  updatedOperators = _moveBlockEvent$data.operators,\n                  updatedStacks = _moveBlockEvent$data.stacks,\n                  allBlocksUpdated = _moveBlockEvent$data.allBlocksUpdated;\n              var immutableBlocks = Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(updatedBlocks);\n              var immutableOperators = Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(updatedOperators);\n              var immutableStacks = Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(updatedStacks);\n              var newReducer = reducer.merge(Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])({\n                blocks: immutableBlocks,\n                operators: immutableOperators,\n                stacks: immutableStacks\n              }));\n\n              _this3.updateBlocksInBE({\n                blocks: immutableBlocks,\n                operators: immutableOperators,\n                stacks: immutableStacks,\n                allBlocksUpdated: allBlocksUpdated\n              });\n\n              cb(newReducer, allBlocksUpdated);\n              moveBlocksInstance.terminate();\n            });\n            var parsedBlocks = JSON.parse(JSON.stringify(blocks.toJS()));\n            var parsedOperators = JSON.parse(JSON.stringify(operators.toJS()));\n            var parsedStacks = JSON.parse(JSON.stringify(stacks.toJS()));\n            moveBlocksInstance.postMessage({\n              position: _objectSpread({}, newPosition, {\n                id: newActiveChildId\n              }),\n              id: newActiveChildId,\n              blocks: parsedBlocks,\n              operators: parsedOperators,\n              stacks: parsedStacks\n            });\n          } else {\n            cb(reducer);\n          }\n        }\n      }, {\n        key: \"addIO\",\n        value: function addIO(data, type, activeItemProps) {\n          var newId = Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_1__[\"getUuId\"])();\n          var order = 0;\n          var activeItem = activeItemProps || this.state.activeChild;\n          var selectedNode = this.props.nodes.find(function (node) {\n            return node.get('type') === activeItem.get('type');\n          });\n          var blockBluePrint = selectedNode.getIn(['items', activeItem.get('component_id')]);\n          var typeIndex = blockBluePrint.get(type).findIndex(function (iType) {\n            return iType.get('internal_name') === data.get('internal_name');\n          });\n\n          if (data.get('repeatable')) {\n            if (data.get('value') && data.get('value').count()) {\n              var currentMaxOrder = data.get('value').maxBy(function (iItem) {\n                return iItem.get('order');\n              }).get('order');\n              order = currentMaxOrder + 1;\n            } else {\n              order = (typeIndex + 1) * _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"maxInputsAndOutputsSupportedOrderForRepeatable\"];\n            }\n          } else if (data.get('optional')) {\n            order = (typeIndex + 1) * _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"maxInputsAndOutputsSupportedOrderForRepeatable\"];\n          }\n\n          var activeChildID = activeItem.get('id');\n          var newPosition = this.getNewPositionOnIOChange(type, true);\n          var outputParameters = Object.values(data.get('properties') ? data.get('properties').toJS() : {}).reduce(function (accValue, property) {\n            return _objectSpread({}, accValue, _defineProperty({}, property.internal_name, Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getProperty\"])(property, Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getValueFromRepeatableBlueprint\"])(property), [data.get('internal_name'), 'value', newId, 'properties', property.internal_name])));\n          }, {});\n          var payloadOutputParameters = Object.keys(outputParameters).reduce(function (accum, param) {\n            return _objectSpread({}, accum, _defineProperty({}, param, Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getValueFromBlueprint\"])(outputParameters[param])));\n          }, {});\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_ADD_BLOCK_IO\"],\n            eaiId: this.eaiId,\n            modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId,\n            blockId: activeChildID,\n            label: data.get('label'),\n            newId: newId,\n            data: data,\n            type: type,\n            order: order,\n            dispatch: this.props.dispatch,\n            parameters: payloadOutputParameters\n          }));\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_MOVE_BLOCK\"],\n            body: _defineProperty({}, activeChildID, {\n              position: newPosition,\n              group_name: this.state.activeChild.get('group_name'),\n              description: this.state.activeChild.get('description'),\n              color: this.state.activeChild.get('color')\n            }),\n            params: _objectSpread({}, this.props.routeProps.match.params, {\n              modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n            }),\n            dispatch: this.props.dispatch\n          }));\n          this.onAddIOSuccess({\n            newId: newId,\n            data: data,\n            type: type,\n            order: order,\n            newPosition: newPosition,\n            activeItemProps: activeItemProps\n          });\n        }\n      }, {\n        key: \"onDeleteIOSuccess\",\n        value: function onDeleteIOSuccess(payload) {\n          var newActiveChild;\n          var data = payload.data,\n              type = payload.type,\n              newPosition = payload.newPosition,\n              activeItemProps = payload.activeItemProps;\n          var activeItem = activeItemProps || this.state.activeChild;\n\n          if (data.get('optional') && !data.get('repeatable')) {\n            newActiveChild = activeItem.setIn([type].concat(_toConsumableArray(data.get('reducerPath').toJS()), ['value']), false);\n          } else {\n            newActiveChild = activeItem.deleteIn([type].concat(_toConsumableArray(data.get('reducerPath').toJS())));\n          }\n\n          if (!activeItemProps) {\n            // Get the connections originating from/to the dent and delete the connections manually\n            this.setState({\n              activeChild: newActiveChild\n            });\n            var stateReducer = this.builderRef.state.reducer.set('unsaved', true);\n            var prevSelectedNode = stateReducer.get('selectedNode');\n            var connections = stateReducer.get('connectionList').filter(function (iItem) {\n              return iItem.getIn(['sources', '0', 'part', 'id']) === data.get('id') || iItem.getIn(['targets', '0', 'part', 'id']) === data.get('id');\n            }).keySeq();\n\n            for (var i = 0; i < connections.count(); i += 1) {\n              stateReducer = _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"builderReducerFunctions\"][_commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"ACTION_DELETE_CHILD\"]](stateReducer, {\n                dragType: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].CONNECTION,\n                id: connections.get(i)\n              });\n            }\n\n            newActiveChild = newActiveChild.set('position', Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(newPosition));\n            newActiveChild = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getTransformedIOChild\"])(newActiveChild);\n            stateReducer = stateReducer.setIn([newActiveChild.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].OPERATOR ? 'operators' : 'blocks', newActiveChild.get('id')], newActiveChild).set('selectedNode', prevSelectedNode);\n            this.builderRef.updateStateReducer(stateReducer);\n          } else {\n            var newActiveItem = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getTransformedIOChild\"])(newActiveChild);\n            this.props.dispatch(Object(_ModelPage_actions__WEBPACK_IMPORTED_MODULE_4__[\"updateNewVersionProperties\"])({\n              newVersionProperties: newActiveChild,\n              builderActiveChild: newActiveItem\n            }));\n          }\n        }\n      }, {\n        key: \"deleteIO\",\n        value: function deleteIO(data, type, activeItemProps) {\n          var activeItem = activeItemProps || this.state.activeChild;\n          var activeChildID = activeItem.get('id');\n          var newPosition = '';\n\n          if (!activeItemProps) {\n            var currentTypeCount = this.builderRef.state.reducer.getIn([_ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"reducerItemTypes\"][activeItem.get('type')] || 'blocks', activeChildID, type]).count();\n            var minTypeCount = data.get(\"minimum_\".concat(type));\n\n            if (currentTypeCount <= minTypeCount) {\n              return;\n            }\n\n            newPosition = this.getNewPositionOnIOChange(type);\n          }\n\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_DELETE_BLOCK_IO\"],\n            eaiId: this.eaiId,\n            modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId,\n            blockId: activeChildID,\n            data: data,\n            type: type,\n            dispatch: this.props.dispatch\n          }));\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_MOVE_BLOCK\"],\n            body: _defineProperty({}, activeChildID, {\n              position: newPosition,\n              group_name: this.state.activeChild.get('group_name'),\n              description: this.state.activeChild.get('description'),\n              color: this.state.activeChild.get('color')\n            }),\n            params: _objectSpread({}, this.props.routeProps.match.params, {\n              modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n            }),\n            dispatch: this.props.dispatch\n          }));\n          this.onDeleteIOSuccess({\n            data: data,\n            type: type,\n            newPosition: newPosition,\n            activeItemProps: activeItemProps\n          });\n        }\n      }, {\n        key: \"transformIOAndUpdate\",\n        value: function transformIOAndUpdate(activeChild) {\n          var newActiveChild = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getTransformedIOChild\"])(activeChild);\n          this.updateBlockOrOperator(newActiveChild);\n        }\n      }, {\n        key: \"getInputOutput\",\n        value: function getInputOutput(activeChild, IOtype, isNewVersion) {\n          var blockBlueprint = this.getBlockBluePrint({\n            type: activeChild.get('type'),\n            componentID: activeChild.get('component_id'),\n            isNewVersion: isNewVersion\n          });\n\n          if (!blockBlueprint) {\n            return {};\n          }\n\n          var blueprintIOs = Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_1__[\"normalizeItems\"])(blockBlueprint.get(IOtype).toJS(), 'internal_name');\n          var data = activeChild.get(IOtype).toJS();\n          blockBlueprint.get(IOtype).toJS().forEach(function (blueprintIO) {\n            var internal_name = blueprintIO.internal_name;\n\n            if (!blueprintIO.repeatable) {\n              var ioObject = Object.values(data).find(function (dataItem) {\n                return dataItem.internal_name === internal_name;\n              });\n              var properties = blueprintIO.properties;\n              properties = properties && properties.reduce(function (acc, property) {\n                var value;\n\n                if (ioObject && ioObject.io_transformed) {\n                  value = ioObject && ioObject.properties ? ioObject.properties[property.internal_name] : '';\n                } else {\n                  value = ioObject && ioObject.parameters ? ioObject.parameters[property.internal_name] : '';\n                }\n\n                return _objectSpread({}, acc, _defineProperty({}, property.internal_name, Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getProperty\"])(property, value, [internal_name, 'properties', property.internal_name], ioObject && ioObject.io_transformed)));\n              }, {});\n              blueprintIOs[internal_name] = _objectSpread({}, blueprintIOs[internal_name], ioObject, {\n                value: !!ioObject,\n                reducerPath: [internal_name],\n                properties: properties,\n                io_transformed: true\n              });\n            } else {\n              var repeatableIOs = Object.values(data).filter(function (dataItem) {\n                return dataItem.internal_name === internal_name;\n              });\n              var outerProperties = repeatableIOs.reduce(function (acc, repeatableIOItem) {\n                var properties = blueprintIO.properties || [];\n                properties = properties.reduce(function (innerAcc, property) {\n                  var value;\n\n                  if (repeatableIOItem && repeatableIOItem.io_transformed) {\n                    value = repeatableIOItem && repeatableIOItem.properties ? repeatableIOItem.properties[property.internal_name] : '';\n                  } else {\n                    value = repeatableIOItem && repeatableIOItem.parameters ? repeatableIOItem.parameters[property.internal_name] : '';\n                  }\n\n                  return _objectSpread({}, innerAcc, _defineProperty({}, property.internal_name, Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getProperty\"])(property, value, [internal_name, 'value', repeatableIOItem.id, 'properties', property.internal_name], repeatableIOItem.io_transformed)));\n                }, {});\n                return _objectSpread({}, acc, _defineProperty({}, repeatableIOItem.id, _objectSpread({}, blueprintIO, repeatableIOItem, {\n                  properties: properties,\n                  reducerPath: [internal_name, 'value', repeatableIOItem.id],\n                  io_transformed: true\n                })));\n              }, {});\n              blueprintIOs[internal_name] = _objectSpread({}, blueprintIOs[internal_name], {\n                reducerPath: [internal_name],\n                value: outerProperties\n              });\n            }\n          });\n          return blueprintIOs;\n        }\n      }]);\n\n      return Base;\n    }(inhertClass)\n  );\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BaseClass);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/BaseClass.js\n");

/***/ }),

/***/ "./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/BlockClass.js":
/*!***************************************************************************************!*\
  !*** ./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/BlockClass.js ***!
  \***************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../../commons/src/index.constants */ \"./commons/src/index.constants.js\");\n/* harmony import */ var _commons_src_index_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../../commons/src/index.utils */ \"./commons/src/index.utils.js\");\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! immutable */ \"./node_modules/immutable/dist/immutable.js\");\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ModelDesigner.actions */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.actions.js\");\n/* harmony import */ var _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ModelDesigner.constants */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.constants.js\");\n/* harmony import */ var _ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ModelDesigner.utils */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.utils.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\nvar getNewIOs = function getNewIOs(ios, min) {\n  return ios.reduce(function (prev, next, parentIndex) {\n    var newPrev = _objectSpread({}, prev);\n\n    if (next.get(min)) {\n      for (var i = 0; i < next.get(min); i += 1) {\n        var singleIO = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_6__[\"getSingleIOOnAddChild\"])({\n          next: next,\n          parentIndex: parentIndex\n        });\n        singleIO.order += i;\n        newPrev[singleIO.id] = singleIO;\n      }\n    } else if (!next.get('optional') || next.get('optional') && next.get('default_value')) {\n      var _singleIO = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_6__[\"getSingleIOOnAddChild\"])({\n        next: next,\n        parentIndex: parentIndex\n      });\n\n      newPrev[_singleIO.id] = _singleIO;\n    }\n\n    return newPrev;\n  }, {});\n};\n\nvar BlockClass = function BlockClass() {\n  var inhertClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : react__WEBPACK_IMPORTED_MODULE_3___default.a.Component;\n  return (\n    /*#__PURE__*/\n    function (_inhertClass) {\n      _inherits(Base, _inhertClass);\n\n      function Base() {\n        _classCallCheck(this, Base);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(Base).apply(this, arguments));\n      }\n\n      _createClass(Base, [{\n        key: \"addChild\",\n        value: function addChild(obj, newName) {\n          var _this = this;\n\n          var oldStateReducer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.builderRef.state.reducer;\n          var getFinalBuilderStateReducer = arguments.length > 3 ? arguments[3] : undefined;\n          var oldId = arguments.length > 4 ? arguments[4] : undefined;\n\n          if (this.props.subBlockView.get('readOnly')) {\n            return false;\n          }\n\n          var blockBluePrint = this.getBlockBluePrint({\n            type: obj.type,\n            componentID: obj.component_id\n          });\n\n          if (obj.type === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].STACK) {\n            this.addStack({\n              obj: obj,\n              blockBluePrint: blockBluePrint\n            });\n            return false;\n          }\n\n          if (obj.type === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].GROUP) {\n            this.addGroup({\n              obj: obj,\n              blockBluePrint: blockBluePrint\n            });\n            return false;\n          }\n\n          var name = newName || \"\".concat(blockBluePrint.get('internal_name'), \"_\").concat(Date.now());\n          var groupName = blockBluePrint.get('group_name');\n          var description = blockBluePrint.get('description');\n          var _this$props = this.props,\n              dispatch = _this$props.dispatch,\n              params = _this$props.routeProps.match.params;\n          var inputs = getNewIOs(blockBluePrint.get('inputs'), 'minimum_inputs');\n          var outputs = getNewIOs(blockBluePrint.get('outputs'), 'minimum_outputs');\n          var parameters = blockBluePrint.get('parameters').reduce(function (acc, param) {\n            return _objectSpread({}, acc, _defineProperty({}, param.get('internal_name'), Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_6__[\"getValueFromBlueprint\"])(param.toJS())));\n          }, {});\n\n          var data = _objectSpread({}, obj, {\n            position: _objectSpread({}, obj.position, {\n              y1: Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_6__[\"getItemY1\"])(Object.keys(inputs).length, Object.keys(outputs).length, obj.position.y0)\n            }),\n            inputs: inputs,\n            outputs: outputs,\n            parameters: parameters,\n            name: name,\n            description: description,\n            internal_name: blockBluePrint.get('internal_name')\n          });\n\n          var bodyItem = _objectSpread({}, data, {\n            groupName: groupName\n          });\n\n          var cb = function cb(newReducer) {\n            _this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_4__[\"makeOrderedNWCall\"])({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_5__[\"ACTION_ADD_BLOCK\"],\n              body: {\n                internal_name: bodyItem.internal_name,\n                label: bodyItem.label,\n                component_id: bodyItem.component_id,\n                type: bodyItem.type,\n                id: bodyItem.id,\n                name: bodyItem.name,\n                inputs: bodyItem.inputs,\n                outputs: bodyItem.outputs,\n                scopes: bodyItem.scopes,\n                parameters: bodyItem.parameters,\n                ui_param: {\n                  position: bodyItem.position,\n                  group_name: bodyItem.groupName,\n                  description: bodyItem.description,\n                  color: bodyItem.color\n                },\n                custom: !!blockBluePrint.get('customCreatedItem')\n              },\n              params: _objectSpread({}, params, {\n                modelId: _this.props.subBlockView.get('componentID') && !_this.props.subBlockView.get('readOnly') ? _this.props.subBlockView.get('componentID') : _this.props.routeProps.match.params.modelId\n              }),\n              dispatch: dispatch\n            }));\n\n            var reducerItemType;\n\n            if (data.type === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].OPERATOR) {\n              reducerItemType = 'operators';\n            } else {\n              reducerItemType = 'blocks';\n            }\n\n            var stateReducer = _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"builderReducerFunctions\"][_commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"ACTION_DROP_CHILD\"]](newReducer, _objectSpread({}, data, {\n              group_name: groupName\n            }));\n\n            if (getFinalBuilderStateReducer) {\n              getFinalBuilderStateReducer(stateReducer);\n              return false;\n            }\n\n            stateReducer = stateReducer.merge(Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])({\n              showRightPane: true,\n              selectedNode: _defineProperty({}, data.id, stateReducer.getIn([reducerItemType, data.id]))\n            }));\n\n            _this.builderRef.updateStateReducer(stateReducer, function () {\n              _this.onChildSelect(stateReducer.getIn([reducerItemType, data.id]).toJS());\n            });\n          };\n\n          this.moveOverlappingNodes(oldStateReducer, bodyItem.position, obj.oldId, cb);\n          return false;\n        }\n      }, {\n        key: \"duplicateChild\",\n        value: function duplicateChild(obj) {\n          var _this2 = this;\n\n          if (this.props.subBlockView.get('readOnly')) {\n            return false;\n          }\n\n          if ([_commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].GROUP, _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].STACK].includes(obj.item.type)) {\n            return false;\n          }\n\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_4__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_5__[\"ACTION_GET_BLOCK_BY_ID\"],\n            params: _objectSpread({}, this.props.routeProps.match.params, {\n              modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId,\n              blockId: obj.item.id\n            }),\n            dispatch: this.props.dispatch,\n            cb: function cb(_ref) {\n              var result = _ref.result;\n              var _obj$item$position = obj.item.position,\n                  x = _obj$item$position.x,\n                  y = _obj$item$position.y;\n\n              if (obj.x && obj.y) {\n                x = obj.x;\n                y = obj.y;\n              } else {\n                x += 25;\n                y += 25;\n              }\n\n              var y0 = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_6__[\"getItemY0\"])(y);\n              var newPosition = {\n                x: x,\n                y: y,\n                x0: Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_6__[\"getItemX1\"])(x),\n                y0: y0,\n                x1: Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_6__[\"getItemX1\"])(x),\n                y1: Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_6__[\"getItemY1\"])(Object.keys(result.inputs).length, Object.keys(result.outputs).length, y0)\n              };\n\n              var body = _objectSpread({}, result, {\n                id: obj.newId,\n                name: \"\".concat(result.internal_name, \"_\").concat(Date.now()),\n                ui_param: _objectSpread({}, result.ui_param, {\n                  position: newPosition\n                })\n              });\n\n              var _getTransformedModelT = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_6__[\"getTransformedModelTemplate\"])({\n                template: Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])({\n                  blocks: _defineProperty({}, body.id, body)\n                })\n              }),\n                  Blocks = _getTransformedModelT.Blocks,\n                  Operators = _getTransformedModelT.Operators;\n\n              var reducerItemType = _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_5__[\"reducerItemTypes\"][obj.item.type] || 'blocks';\n              var newBlock = (reducerItemType === 'blocks' ? Blocks : Operators).get(body.id);\n              var copiedChild = Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(_objectSpread({}, obj, {\n                newId: Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_1__[\"getUuId\"])(),\n                item: newBlock\n              }));\n\n              _this2.builderRef.updateStateReducer(_this2.builderRef.state.reducer.set('unsaved', true).set('copiedChild', copiedChild).setIn([reducerItemType, body.id], newBlock));\n\n              _this2.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_4__[\"makeOrderedNWCall\"])({\n                NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_5__[\"ACTION_ADD_BLOCK\"],\n                body: body,\n                params: _objectSpread({}, _this2.props.routeProps.match.params, {\n                  modelId: _this2.props.subBlockView.get('componentID') && !_this2.props.subBlockView.get('readOnly') ? _this2.props.subBlockView.get('componentID') : _this2.props.routeProps.match.params.modelId\n                }),\n                dispatch: _this2.props.dispatch\n              }));\n            }\n          }));\n          return false;\n        }\n      }, {\n        key: \"moveChild\",\n        value: function moveChild(obj) {\n          if (this.props.subBlockView.get('readOnly')) {\n            return false;\n          }\n\n          if (obj.type === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].STACK) {\n            this.moveStack(obj);\n            return false;\n          }\n\n          if (obj.id === this.state.activeChild.get('id')) {\n            this.setState({\n              activeChild: this.state.activeChild.set('position', Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(obj.newPosition))\n            });\n          }\n\n          var item = {\n            position: obj.newPosition,\n            group_name: obj.item.get('group_name'),\n            description: obj.item.get('description'),\n            color: obj.item.get('color')\n          };\n\n          if (obj.type === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].GROUP) {\n            var isGroupShared = obj.item.get('shared');\n            this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_4__[\"makeOrderedNWCall\"])({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_5__[\"ACTION_MOVE_BLOCK\"],\n              body: item,\n              params: _objectSpread({}, this.props.routeProps.match.params, {\n                groupId: isGroupShared ? obj.item.get('parentGroupID') : obj.id,\n                sharedGroupId: isGroupShared ? obj.id : undefined,\n                modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n              }),\n              dispatch: this.props.dispatch\n            }));\n            this.builderRef.updateStateReducer(this.builderRef.state.reducer.set('unsaved', true).setIn(['blocks', obj.id, 'position'], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(obj.newPosition)));\n            return false;\n          }\n\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_4__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_5__[\"ACTION_MOVE_BLOCK\"],\n            body: _defineProperty({}, obj.id, item),\n            params: _objectSpread({}, this.props.routeProps.match.params, {\n              modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n            }),\n            dispatch: this.props.dispatch\n          }));\n          return obj;\n        }\n      }, {\n        key: \"deleteChild\",\n        value: function deleteChild(obj, fromContextMenu, getFinalBuilderStateReducer) {\n          var _this3 = this;\n\n          if (this.props.subBlockView.get('readOnly')) {\n            return false;\n          }\n\n          if (obj.id) {\n            if (obj.dragType === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].STACK) {\n              this.deleteStack(obj.id);\n              return false;\n            }\n\n            if (obj.type === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].GROUP) {\n              this.deleteGroup(obj.id);\n              return false;\n            }\n\n            if (String(obj.dragType).toLowerCase() === 'connection') {\n              this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_4__[\"makeOrderedNWCall\"])({\n                NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_5__[\"ACTION_REMOVE_CONNECTION\"],\n                params: _objectSpread({}, this.props.routeProps.match.params, {\n                  connectionId: obj.id,\n                  modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n                }),\n                dispatch: this.props.dispatch\n              }));\n            } else {\n              this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_4__[\"makeOrderedNWCall\"])({\n                NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_5__[\"ACTION_DELETE_BLOCK\"],\n                params: _objectSpread({}, this.props.routeProps.match.params, {\n                  blockId: obj.id,\n                  modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n                }),\n                dispatch: this.props.dispatch\n              }));\n            }\n          } else {\n            var objKeys = Object.keys(obj);\n            objKeys.forEach(function (objKey) {\n              if (String(obj[objKey].dragType).toLowerCase() === 'connection') {\n                _this3.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_4__[\"makeOrderedNWCall\"])({\n                  NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_5__[\"ACTION_REMOVE_CONNECTION\"],\n                  params: _objectSpread({}, _this3.props.routeProps.match.params, {\n                    connectionId: obj[objKey].id,\n                    modelId: _this3.props.subBlockView.get('componentID') && !_this3.props.subBlockView.get('readOnly') ? _this3.props.subBlockView.get('componentID') : _this3.props.routeProps.match.params.modelId\n                  }),\n                  dispatch: _this3.props.dispatch\n                }));\n              } else {\n                _this3.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_4__[\"makeOrderedNWCall\"])({\n                  NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_5__[\"ACTION_DELETE_BLOCK\"],\n                  params: _objectSpread({}, _this3.props.routeProps.match.params, {\n                    blockId: obj[objKey].id,\n                    modelId: _this3.props.subBlockView.get('componentID') && !_this3.props.subBlockView.get('readOnly') ? _this3.props.subBlockView.get('componentID') : _this3.props.routeProps.match.params.modelId\n                  }),\n                  dispatch: _this3.props.dispatch\n                }));\n              }\n            });\n          }\n\n          var stateReducer = _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"builderReducerFunctions\"][_commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"ACTION_DELETE_CHILD\"]](this.builderRef.state.reducer, obj);\n\n          if (getFinalBuilderStateReducer) {\n            getFinalBuilderStateReducer(stateReducer);\n            return false;\n          }\n\n          if (fromContextMenu) {\n            this.builderRef.updateStateReducer(stateReducer);\n            return false;\n          }\n\n          return null;\n        }\n      }, {\n        key: \"isBlockErrored\",\n        value: function isBlockErrored(_ref2) {\n          var blockId = _ref2.id,\n              type = _ref2.type;\n          var validations = this.props.validations;\n\n          if (type === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].GROUP) {\n            return validations.getIn(['groups', blockId, 'error'], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([])).toJS();\n          }\n\n          var errs = validations.getIn(['blocks', blockId, 'error'], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([])).toJS();\n          if (errs.length > 0) return errs;\n          /** paramsError mean errors in parameter tab, * */\n\n          var paramsError = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_6__[\"checkError\"])(validations.getIn(['blocks', blockId, 'parameters']) || Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])({}));\n          /** slotsErrors mean errors in input or output tab error, * */\n\n          var slotsErrors = validations.getIn(['blocks', blockId, 'slots']);\n\n          var _checkSlotsErrors = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_6__[\"checkSlotsErrors\"])(slotsErrors, this.builderRef.state.reducer.getIn(['blocks', blockId]) || this.builderRef.state.reducer.getIn(['operators', blockId])),\n              outputHasError = _checkSlotsErrors.outputHasError,\n              inputHasError = _checkSlotsErrors.inputHasError;\n\n          return Array.prototype.concat.call([], paramsError ? ['Parameters has error'] : [], outputHasError ? ['Output parameters has error'] : [], inputHasError ? ['Input parameters has error'] : []);\n        }\n      }, {\n        key: \"onBlockDoubleClick\",\n        value: function onBlockDoubleClick(obj) {\n          var _this4 = this;\n\n          if (obj.type === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].GROUP) {\n            if (this.builderRef.state.reducer.get('showRightPane')) {\n              if (this.state.activeChild.count()) {\n                this.setState({\n                  activeChild: Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])({})\n                });\n              }\n\n              this.builderRef.updateStateReducer(this.builderRef.state.reducer.merge({\n                showRightPane: false,\n                selectedNode: Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])({}),\n                selectedConnection: Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])({})\n              }));\n            }\n\n            var block = this.builderRef.state.reducer.getIn(['blocks', obj.id]);\n            var blockBluePrint = this.getBlockBluePrint({\n              type: block.get('type'),\n              componentID: block.get('component_id')\n            });\n            var frameworkVersion;\n\n            if (blockBluePrint) {\n              frameworkVersion = blockBluePrint.get('frameworkVersion');\n            }\n\n            var builderDom = Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_1__[\"encode\"])({\n              dom: document.getElementById('builderPaper').outerHTML\n            });\n            this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_4__[\"makeOrderedNWCall\"])({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_5__[\"ACTION_EXPLORE_GROUP\"],\n              params: _objectSpread({}, this.props.routeProps.match.params, {\n                groupId: block.get('shared') ? block.get('parentGroupID') : obj.id\n              }),\n              name: obj.name,\n              readOnly: true,\n              componentID: this.builderRef.state.reducer.getIn(['blocks', obj.id, 'component_id']),\n              frameworkVersion: frameworkVersion,\n              modelFrameworkVersion: this.props.modelFrameworkVersion,\n              itemFrameworkVersion: frameworkVersion,\n              builderDom: builderDom,\n              cb: function cb() {\n                _this4.builderRef.updateStateReducer(_this4.builderRef.state.reducer.merge({\n                  showRightPane: false,\n                  unsaved: false,\n                  selectedNode: Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])({}),\n                  selectedConnection: Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])({})\n                }));\n              }\n            }));\n          }\n        }\n      }, {\n        key: \"updateBlockOrOperator\",\n        value: function updateBlockOrOperator(activeChild) {\n          var activeChildType = activeChild.get('type');\n\n          if (activeChildType !== _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].OPERATOR) {\n            this.builderRef.updateBlock({\n              id: activeChild.get('id'),\n              block: activeChild\n            });\n          } else {\n            this.builderRef.updateOperator({\n              id: activeChild.get('id'),\n              operator: activeChild\n            });\n          }\n        }\n      }, {\n        key: \"onRenameBlock\",\n        value: function onRenameBlock(name) {\n          if (this.state.isActiveChildHorizontalStackItem) {\n            this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_4__[\"makeOrderedNWCall\"])({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_5__[\"ACTION_UPDATE_STACK_ITERATION_INSTANCE_NAME\"],\n              params: _objectSpread({}, this.props.routeProps.match.params, {\n                stackId: this.state.activeChild.get('stackID'),\n                iteration: this.state.stackListActiveIndex + 1,\n                blockId: this.state.activeChild.get('id')\n              }),\n              name: name\n            }));\n            this.setState({\n              builderUnsaved: true,\n              infoTabInstanceNameError: ''\n            });\n          } else {\n            this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_4__[\"makeOrderedNWCall\"])({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_5__[\"ACTION_RENAME_BLOCK\"],\n              name: name,\n              blockId: this.state.activeChild.get('id'),\n              params: _objectSpread({}, this.props.routeProps.match.params, {\n                modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n              }),\n              dispatch: this.props.dispatch\n            }));\n            var newActiveChild = this.state.activeChild.setIn(['name'], name);\n            this.setState({\n              activeChild: newActiveChild,\n              infoTabInstanceNameError: ''\n            });\n            this.transformIOAndUpdate(newActiveChild);\n          }\n        }\n      }]);\n\n      return Base;\n    }(inhertClass)\n  );\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BlockClass);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/BlockClass.js\n");

/***/ }),

/***/ "./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/BlueprintClass.js":
/*!*******************************************************************************************!*\
  !*** ./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/BlueprintClass.js ***!
  \*******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\nvar BlueprintClass = function BlueprintClass() {\n  var inhertClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : react__WEBPACK_IMPORTED_MODULE_0___default.a.Component;\n  return (\n    /*#__PURE__*/\n    function (_inhertClass) {\n      _inherits(Base, _inhertClass);\n\n      function Base() {\n        _classCallCheck(this, Base);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(Base).apply(this, arguments));\n      }\n\n      _createClass(Base, [{\n        key: \"getBlockBluePrint\",\n        value: function getBlockBluePrint(_ref) {\n          var componentID = _ref.componentID,\n              isNewVersion = _ref.isNewVersion;\n          var nodePaths = this.props.nodePaths;\n          var nodes = this.props.nodes;\n\n          if (isNewVersion) {\n            nodePaths = this.props.newBluePrint.get('nodePaths');\n            nodes = this.props.newBluePrint.get('nodes');\n          }\n\n          var path = nodePaths.get(componentID);\n\n          if (!path) {\n            console.error(\"Blueprint not found for id: \".concat(componentID));\n            return undefined;\n          }\n\n          return nodes.getIn(path);\n        }\n      }]);\n\n      return Base;\n    }(inhertClass)\n  );\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BlueprintClass);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHBzL01vZGVsL3NyYy9wYWdlcy9Nb2RlbFBhZ2UvcGFnZXMvTW9kZWxEZXNpZ25lci9Nb2RlbENsYXNzZXMvQmx1ZXByaW50Q2xhc3MuanM/YTk4YyJdLCJuYW1lcyI6WyJCbHVlcHJpbnRDbGFzcyIsImluaGVydENsYXNzIiwiUmVhY3QiLCJDb21wb25lbnQiLCJjb21wb25lbnRJRCIsImlzTmV3VmVyc2lvbiIsIm5vZGVQYXRocyIsInByb3BzIiwibm9kZXMiLCJuZXdCbHVlUHJpbnQiLCJnZXQiLCJwYXRoIiwiY29uc29sZSIsImVycm9yIiwidW5kZWZpbmVkIiwiZ2V0SW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUVBLElBQU1BLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUI7QUFBQSxNQUFDQyxXQUFELHVFQUFlQyw0Q0FBSyxDQUFDQyxTQUFyQjtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7O0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUEsZ0RBQzRCO0FBQUEsY0FBN0JDLFdBQTZCLFFBQTdCQSxXQUE2QjtBQUFBLGNBQWhCQyxZQUFnQixRQUFoQkEsWUFBZ0I7QUFDL0MsY0FBSUMsU0FBUyxHQUFHLEtBQUtDLEtBQUwsQ0FBV0QsU0FBM0I7QUFDQSxjQUFJRSxLQUFLLEdBQUcsS0FBS0QsS0FBTCxDQUFXQyxLQUF2Qjs7QUFDQSxjQUFJSCxZQUFKLEVBQWtCO0FBQ2hCQyxxQkFBUyxHQUFHLEtBQUtDLEtBQUwsQ0FBV0UsWUFBWCxDQUF3QkMsR0FBeEIsQ0FBNEIsV0FBNUIsQ0FBWjtBQUNBRixpQkFBSyxHQUFHLEtBQUtELEtBQUwsQ0FBV0UsWUFBWCxDQUF3QkMsR0FBeEIsQ0FBNEIsT0FBNUIsQ0FBUjtBQUNEOztBQUNELGNBQU1DLElBQUksR0FBR0wsU0FBUyxDQUFDSSxHQUFWLENBQWNOLFdBQWQsQ0FBYjs7QUFDQSxjQUFJLENBQUNPLElBQUwsRUFBVztBQUNUQyxtQkFBTyxDQUFDQyxLQUFSLHVDQUE2Q1QsV0FBN0M7QUFDQSxtQkFBT1UsU0FBUDtBQUNEOztBQUNELGlCQUFPTixLQUFLLENBQUNPLEtBQU4sQ0FBWUosSUFBWixDQUFQO0FBQ0Q7QUFkb0I7O0FBQUE7QUFBQSxNQUFzRFYsV0FBdEQ7QUFBQTtBQUFBLENBQXZCOztBQWlCZUQsNkVBQWYiLCJmaWxlIjoiLi9hcHBzL01vZGVsL3NyYy9wYWdlcy9Nb2RlbFBhZ2UvcGFnZXMvTW9kZWxEZXNpZ25lci9Nb2RlbENsYXNzZXMvQmx1ZXByaW50Q2xhc3MuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5jb25zdCBCbHVlcHJpbnRDbGFzcyA9IChpbmhlcnRDbGFzcyA9IFJlYWN0LkNvbXBvbmVudCkgPT4gY2xhc3MgQmFzZSBleHRlbmRzIGluaGVydENsYXNzIHtcbiAgZ2V0QmxvY2tCbHVlUHJpbnQoeyBjb21wb25lbnRJRCwgaXNOZXdWZXJzaW9uIH0pIHtcbiAgICBsZXQgbm9kZVBhdGhzID0gdGhpcy5wcm9wcy5ub2RlUGF0aHM7XG4gICAgbGV0IG5vZGVzID0gdGhpcy5wcm9wcy5ub2RlcztcbiAgICBpZiAoaXNOZXdWZXJzaW9uKSB7XG4gICAgICBub2RlUGF0aHMgPSB0aGlzLnByb3BzLm5ld0JsdWVQcmludC5nZXQoJ25vZGVQYXRocycpO1xuICAgICAgbm9kZXMgPSB0aGlzLnByb3BzLm5ld0JsdWVQcmludC5nZXQoJ25vZGVzJyk7XG4gICAgfVxuICAgIGNvbnN0IHBhdGggPSBub2RlUGF0aHMuZ2V0KGNvbXBvbmVudElEKTtcbiAgICBpZiAoIXBhdGgpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYEJsdWVwcmludCBub3QgZm91bmQgZm9yIGlkOiAke2NvbXBvbmVudElEfWApO1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIG5vZGVzLmdldEluKHBhdGgpO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBCbHVlcHJpbnRDbGFzcztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/BlueprintClass.js\n");

/***/ }),

/***/ "./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/ConnectionClass.js":
/*!********************************************************************************************!*\
  !*** ./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/ConnectionClass.js ***!
  \********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../../commons/src/index.constants */ \"./commons/src/index.constants.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ModelDesigner.actions */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.actions.js\");\n/* harmony import */ var _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ModelDesigner.constants */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.constants.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\n\nvar ConnectionClass = function ConnectionClass() {\n  var inhertClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : react__WEBPACK_IMPORTED_MODULE_1___default.a.Component;\n  return (\n    /*#__PURE__*/\n    function (_inhertClass) {\n      _inherits(Base, _inhertClass);\n\n      function Base() {\n        _classCallCheck(this, Base);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(Base).apply(this, arguments));\n      }\n\n      _createClass(Base, [{\n        key: \"addConnectionToChild\",\n        value: function addConnectionToChild(obj) {\n          if (this.props.subBlockView.get('readOnly')) {\n            return false;\n          }\n\n          var body = {\n            source: {\n              id: {\n                block_id: obj.sourceId,\n                slot_id: obj.sourcePart.get('id')\n              }\n            },\n            target: {\n              id: {\n                block_id: obj.targetId,\n                slot_id: obj.targetPart.get('id')\n              }\n            },\n            id: obj.id\n          };\n          var isSourceGroup = this.builderRef.state.reducer.getIn(['blocks', obj.sourceId, 'type']) === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].GROUP;\n          var isTargetGroup = this.builderRef.state.reducer.getIn(['blocks', obj.targetId, 'type']) === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].GROUP;\n\n          if (isSourceGroup) {\n            body.source.id.block_id = obj.sourcePart.getIn(['otherProperties', 'blockId']);\n\n            if (this.builderRef.state.reducer.getIn(['blocks', obj.sourceId, 'shared'])) {\n              body.source.id.group_id = this.builderRef.state.reducer.getIn(['blocks', obj.sourceId, 'parentGroupID']);\n              body.source.id.shared_group_id = obj.sourceId;\n            }\n          }\n\n          if (isTargetGroup) {\n            body.target.id.block_id = obj.targetPart.getIn(['otherProperties', 'blockId']);\n\n            if (this.builderRef.state.reducer.getIn(['blocks', obj.targetId, 'shared'])) {\n              body.target.id.group_id = this.builderRef.state.reducer.getIn(['blocks', obj.targetId, 'parentGroupID']);\n              body.target.id.shared_group_id = obj.targetId;\n            }\n          }\n\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_2__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_3__[\"ACTION_ADD_CONNECTION\"],\n            body: body,\n            params: _objectSpread({}, this.props.routeProps.match.params, {\n              modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n            }),\n            dispatch: this.props.dispatch\n          }));\n          return obj;\n        }\n      }]);\n\n      return Base;\n    }(inhertClass)\n  );\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ConnectionClass);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHBzL01vZGVsL3NyYy9wYWdlcy9Nb2RlbFBhZ2UvcGFnZXMvTW9kZWxEZXNpZ25lci9Nb2RlbENsYXNzZXMvQ29ubmVjdGlvbkNsYXNzLmpzPzE1NGQiXSwibmFtZXMiOlsiQ29ubmVjdGlvbkNsYXNzIiwiaW5oZXJ0Q2xhc3MiLCJSZWFjdCIsIkNvbXBvbmVudCIsIm9iaiIsInByb3BzIiwic3ViQmxvY2tWaWV3IiwiZ2V0IiwiYm9keSIsInNvdXJjZSIsImlkIiwiYmxvY2tfaWQiLCJzb3VyY2VJZCIsInNsb3RfaWQiLCJzb3VyY2VQYXJ0IiwidGFyZ2V0IiwidGFyZ2V0SWQiLCJ0YXJnZXRQYXJ0IiwiaXNTb3VyY2VHcm91cCIsImJ1aWxkZXJSZWYiLCJzdGF0ZSIsInJlZHVjZXIiLCJnZXRJbiIsIlBhcGVyQ2hpbGRyZW5UeXBlcyIsIkdST1VQIiwiaXNUYXJnZXRHcm91cCIsImdyb3VwX2lkIiwic2hhcmVkX2dyb3VwX2lkIiwiZGlzcGF0Y2giLCJtYWtlT3JkZXJlZE5XQ2FsbCIsIk5XQ2FsbFR5cGUiLCJBQ1RJT05fQUREX0NPTk5FQ1RJT04iLCJwYXJhbXMiLCJyb3V0ZVByb3BzIiwibWF0Y2giLCJtb2RlbElkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBTUEsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQjtBQUFBLE1BQUNDLFdBQUQsdUVBQWVDLDRDQUFLLENBQUNDLFNBQXJCO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQSw2Q0FDREMsR0FEQyxFQUNJO0FBQ3hCLGNBQUksS0FBS0MsS0FBTCxDQUFXQyxZQUFYLENBQXdCQyxHQUF4QixDQUE0QixVQUE1QixDQUFKLEVBQTZDO0FBQzNDLG1CQUFPLEtBQVA7QUFDRDs7QUFDRCxjQUFNQyxJQUFJLEdBQUc7QUFDWEMsa0JBQU0sRUFBRTtBQUNOQyxnQkFBRSxFQUFFO0FBQ0ZDLHdCQUFRLEVBQUVQLEdBQUcsQ0FBQ1EsUUFEWjtBQUVGQyx1QkFBTyxFQUFFVCxHQUFHLENBQUNVLFVBQUosQ0FBZVAsR0FBZixDQUFtQixJQUFuQjtBQUZQO0FBREUsYUFERztBQU9YUSxrQkFBTSxFQUFFO0FBQ05MLGdCQUFFLEVBQUU7QUFDRkMsd0JBQVEsRUFBRVAsR0FBRyxDQUFDWSxRQURaO0FBRUZILHVCQUFPLEVBQUVULEdBQUcsQ0FBQ2EsVUFBSixDQUFlVixHQUFmLENBQW1CLElBQW5CO0FBRlA7QUFERSxhQVBHO0FBYVhHLGNBQUUsRUFBRU4sR0FBRyxDQUFDTTtBQWJHLFdBQWI7QUFlQSxjQUFNUSxhQUFhLEdBQUcsS0FBS0MsVUFBTCxDQUFnQkMsS0FBaEIsQ0FBc0JDLE9BQXRCLENBQThCQyxLQUE5QixDQUFvQyxDQUFDLFFBQUQsRUFBV2xCLEdBQUcsQ0FBQ1EsUUFBZixFQUF5QixNQUF6QixDQUFwQyxNQUEwRVcsK0VBQWtCLENBQUNDLEtBQW5IO0FBQ0EsY0FBTUMsYUFBYSxHQUFHLEtBQUtOLFVBQUwsQ0FBZ0JDLEtBQWhCLENBQXNCQyxPQUF0QixDQUE4QkMsS0FBOUIsQ0FBb0MsQ0FBQyxRQUFELEVBQVdsQixHQUFHLENBQUNZLFFBQWYsRUFBeUIsTUFBekIsQ0FBcEMsTUFBMEVPLCtFQUFrQixDQUFDQyxLQUFuSDs7QUFFQSxjQUFJTixhQUFKLEVBQW1CO0FBQ2pCVixnQkFBSSxDQUFDQyxNQUFMLENBQVlDLEVBQVosQ0FBZUMsUUFBZixHQUEwQlAsR0FBRyxDQUFDVSxVQUFKLENBQWVRLEtBQWYsQ0FBcUIsQ0FBQyxpQkFBRCxFQUFvQixTQUFwQixDQUFyQixDQUExQjs7QUFDQSxnQkFBSSxLQUFLSCxVQUFMLENBQWdCQyxLQUFoQixDQUFzQkMsT0FBdEIsQ0FBOEJDLEtBQTlCLENBQW9DLENBQUMsUUFBRCxFQUFXbEIsR0FBRyxDQUFDUSxRQUFmLEVBQXlCLFFBQXpCLENBQXBDLENBQUosRUFBNkU7QUFDM0VKLGtCQUFJLENBQUNDLE1BQUwsQ0FBWUMsRUFBWixDQUFlZ0IsUUFBZixHQUEwQixLQUFLUCxVQUFMLENBQWdCQyxLQUFoQixDQUFzQkMsT0FBdEIsQ0FBOEJDLEtBQTlCLENBQW9DLENBQUMsUUFBRCxFQUFXbEIsR0FBRyxDQUFDUSxRQUFmLEVBQXlCLGVBQXpCLENBQXBDLENBQTFCO0FBQ0FKLGtCQUFJLENBQUNDLE1BQUwsQ0FBWUMsRUFBWixDQUFlaUIsZUFBZixHQUFpQ3ZCLEdBQUcsQ0FBQ1EsUUFBckM7QUFDRDtBQUNGOztBQUNELGNBQUlhLGFBQUosRUFBbUI7QUFDakJqQixnQkFBSSxDQUFDTyxNQUFMLENBQVlMLEVBQVosQ0FBZUMsUUFBZixHQUEwQlAsR0FBRyxDQUFDYSxVQUFKLENBQWVLLEtBQWYsQ0FBcUIsQ0FBQyxpQkFBRCxFQUFvQixTQUFwQixDQUFyQixDQUExQjs7QUFDQSxnQkFBSSxLQUFLSCxVQUFMLENBQWdCQyxLQUFoQixDQUFzQkMsT0FBdEIsQ0FBOEJDLEtBQTlCLENBQW9DLENBQUMsUUFBRCxFQUFXbEIsR0FBRyxDQUFDWSxRQUFmLEVBQXlCLFFBQXpCLENBQXBDLENBQUosRUFBNkU7QUFDM0VSLGtCQUFJLENBQUNPLE1BQUwsQ0FBWUwsRUFBWixDQUFlZ0IsUUFBZixHQUEwQixLQUFLUCxVQUFMLENBQWdCQyxLQUFoQixDQUFzQkMsT0FBdEIsQ0FBOEJDLEtBQTlCLENBQW9DLENBQUMsUUFBRCxFQUFXbEIsR0FBRyxDQUFDWSxRQUFmLEVBQXlCLGVBQXpCLENBQXBDLENBQTFCO0FBQ0FSLGtCQUFJLENBQUNPLE1BQUwsQ0FBWUwsRUFBWixDQUFlaUIsZUFBZixHQUFpQ3ZCLEdBQUcsQ0FBQ1ksUUFBckM7QUFDRDtBQUNGOztBQUVELGVBQUtYLEtBQUwsQ0FBV3VCLFFBQVgsQ0FBb0JDLGdGQUFpQixDQUFDO0FBQ3BDQyxzQkFBVSxFQUFFQyw4RUFEd0I7QUFFcEN2QixnQkFBSSxFQUFKQSxJQUZvQztBQUdwQ3dCLGtCQUFNLG9CQUNELEtBQUszQixLQUFMLENBQVc0QixVQUFYLENBQXNCQyxLQUF0QixDQUE0QkYsTUFEM0I7QUFFSkcscUJBQU8sRUFBRyxLQUFLOUIsS0FBTCxDQUFXQyxZQUFYLENBQXdCQyxHQUF4QixDQUE0QixhQUE1QixLQUE4QyxDQUFDLEtBQUtGLEtBQUwsQ0FBV0MsWUFBWCxDQUF3QkMsR0FBeEIsQ0FBNEIsVUFBNUIsQ0FBaEQsR0FBMkYsS0FBS0YsS0FBTCxDQUFXQyxZQUFYLENBQXdCQyxHQUF4QixDQUE0QixhQUE1QixDQUEzRixHQUF3SSxLQUFLRixLQUFMLENBQVc0QixVQUFYLENBQXNCQyxLQUF0QixDQUE0QkYsTUFBNUIsQ0FBbUNHO0FBRmhMLGNBSDhCO0FBT3BDUCxvQkFBUSxFQUFFLEtBQUt2QixLQUFMLENBQVd1QjtBQVBlLFdBQUQsQ0FBckM7QUFTQSxpQkFBT3hCLEdBQVA7QUFDRDtBQWhEcUI7O0FBQUE7QUFBQSxNQUFzREgsV0FBdEQ7QUFBQTtBQUFBLENBQXhCOztBQW1EZUQsOEVBQWYiLCJmaWxlIjoiLi9hcHBzL01vZGVsL3NyYy9wYWdlcy9Nb2RlbFBhZ2UvcGFnZXMvTW9kZWxEZXNpZ25lci9Nb2RlbENsYXNzZXMvQ29ubmVjdGlvbkNsYXNzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFwZXJDaGlsZHJlblR5cGVzIH0gZnJvbSAnQkJDb25zdGFudHMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IG1ha2VPcmRlcmVkTldDYWxsIH0gZnJvbSAnLi4vTW9kZWxEZXNpZ25lci5hY3Rpb25zJztcbmltcG9ydCB7IEFDVElPTl9BRERfQ09OTkVDVElPTiB9IGZyb20gJy4uL01vZGVsRGVzaWduZXIuY29uc3RhbnRzJztcblxuY29uc3QgQ29ubmVjdGlvbkNsYXNzID0gKGluaGVydENsYXNzID0gUmVhY3QuQ29tcG9uZW50KSA9PiBjbGFzcyBCYXNlIGV4dGVuZHMgaW5oZXJ0Q2xhc3Mge1xuICBhZGRDb25uZWN0aW9uVG9DaGlsZChvYmopIHtcbiAgICBpZiAodGhpcy5wcm9wcy5zdWJCbG9ja1ZpZXcuZ2V0KCdyZWFkT25seScpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IGJvZHkgPSB7XG4gICAgICBzb3VyY2U6IHtcbiAgICAgICAgaWQ6IHtcbiAgICAgICAgICBibG9ja19pZDogb2JqLnNvdXJjZUlkLFxuICAgICAgICAgIHNsb3RfaWQ6IG9iai5zb3VyY2VQYXJ0LmdldCgnaWQnKSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICB0YXJnZXQ6IHtcbiAgICAgICAgaWQ6IHtcbiAgICAgICAgICBibG9ja19pZDogb2JqLnRhcmdldElkLFxuICAgICAgICAgIHNsb3RfaWQ6IG9iai50YXJnZXRQYXJ0LmdldCgnaWQnKSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICBpZDogb2JqLmlkLFxuICAgIH07XG4gICAgY29uc3QgaXNTb3VyY2VHcm91cCA9IHRoaXMuYnVpbGRlclJlZi5zdGF0ZS5yZWR1Y2VyLmdldEluKFsnYmxvY2tzJywgb2JqLnNvdXJjZUlkLCAndHlwZSddKSA9PT0gUGFwZXJDaGlsZHJlblR5cGVzLkdST1VQO1xuICAgIGNvbnN0IGlzVGFyZ2V0R3JvdXAgPSB0aGlzLmJ1aWxkZXJSZWYuc3RhdGUucmVkdWNlci5nZXRJbihbJ2Jsb2NrcycsIG9iai50YXJnZXRJZCwgJ3R5cGUnXSkgPT09IFBhcGVyQ2hpbGRyZW5UeXBlcy5HUk9VUDtcblxuICAgIGlmIChpc1NvdXJjZUdyb3VwKSB7XG4gICAgICBib2R5LnNvdXJjZS5pZC5ibG9ja19pZCA9IG9iai5zb3VyY2VQYXJ0LmdldEluKFsnb3RoZXJQcm9wZXJ0aWVzJywgJ2Jsb2NrSWQnXSk7XG4gICAgICBpZiAodGhpcy5idWlsZGVyUmVmLnN0YXRlLnJlZHVjZXIuZ2V0SW4oWydibG9ja3MnLCBvYmouc291cmNlSWQsICdzaGFyZWQnXSkpIHtcbiAgICAgICAgYm9keS5zb3VyY2UuaWQuZ3JvdXBfaWQgPSB0aGlzLmJ1aWxkZXJSZWYuc3RhdGUucmVkdWNlci5nZXRJbihbJ2Jsb2NrcycsIG9iai5zb3VyY2VJZCwgJ3BhcmVudEdyb3VwSUQnXSk7XG4gICAgICAgIGJvZHkuc291cmNlLmlkLnNoYXJlZF9ncm91cF9pZCA9IG9iai5zb3VyY2VJZDtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKGlzVGFyZ2V0R3JvdXApIHtcbiAgICAgIGJvZHkudGFyZ2V0LmlkLmJsb2NrX2lkID0gb2JqLnRhcmdldFBhcnQuZ2V0SW4oWydvdGhlclByb3BlcnRpZXMnLCAnYmxvY2tJZCddKTtcbiAgICAgIGlmICh0aGlzLmJ1aWxkZXJSZWYuc3RhdGUucmVkdWNlci5nZXRJbihbJ2Jsb2NrcycsIG9iai50YXJnZXRJZCwgJ3NoYXJlZCddKSkge1xuICAgICAgICBib2R5LnRhcmdldC5pZC5ncm91cF9pZCA9IHRoaXMuYnVpbGRlclJlZi5zdGF0ZS5yZWR1Y2VyLmdldEluKFsnYmxvY2tzJywgb2JqLnRhcmdldElkLCAncGFyZW50R3JvdXBJRCddKTtcbiAgICAgICAgYm9keS50YXJnZXQuaWQuc2hhcmVkX2dyb3VwX2lkID0gb2JqLnRhcmdldElkO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMucHJvcHMuZGlzcGF0Y2gobWFrZU9yZGVyZWROV0NhbGwoe1xuICAgICAgTldDYWxsVHlwZTogQUNUSU9OX0FERF9DT05ORUNUSU9OLFxuICAgICAgYm9keSxcbiAgICAgIHBhcmFtczoge1xuICAgICAgICAuLi50aGlzLnByb3BzLnJvdXRlUHJvcHMubWF0Y2gucGFyYW1zLFxuICAgICAgICBtb2RlbElkOiAodGhpcy5wcm9wcy5zdWJCbG9ja1ZpZXcuZ2V0KCdjb21wb25lbnRJRCcpICYmICF0aGlzLnByb3BzLnN1YkJsb2NrVmlldy5nZXQoJ3JlYWRPbmx5JykpID8gdGhpcy5wcm9wcy5zdWJCbG9ja1ZpZXcuZ2V0KCdjb21wb25lbnRJRCcpIDogdGhpcy5wcm9wcy5yb3V0ZVByb3BzLm1hdGNoLnBhcmFtcy5tb2RlbElkLFxuICAgICAgfSxcbiAgICAgIGRpc3BhdGNoOiB0aGlzLnByb3BzLmRpc3BhdGNoLFxuICAgIH0pKTtcbiAgICByZXR1cm4gb2JqO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb25uZWN0aW9uQ2xhc3M7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/ConnectionClass.js\n");

/***/ }),

/***/ "./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/GroupClass.js":
/*!***************************************************************************************!*\
  !*** ./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/GroupClass.js ***!
  \***************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _commons_src_index_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../../commons/src/index.actions */ \"./commons/src/index.actions.js\");\n/* harmony import */ var _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../../commons/src/index.constants */ \"./commons/src/index.constants.js\");\n/* harmony import */ var _commons_src_index_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../../commons/src/index.utils */ \"./commons/src/index.utils.js\");\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! immutable */ \"./node_modules/immutable/dist/immutable.js\");\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ModelDesigner.actions */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.actions.js\");\n/* harmony import */ var _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ModelDesigner.constants */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.constants.js\");\n/* harmony import */ var _ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ModelDesigner.utils */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.utils.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\n\n\n\n\n\nvar GroupClass = function GroupClass() {\n  var inhertClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : react__WEBPACK_IMPORTED_MODULE_4___default.a.Component;\n  return (\n    /*#__PURE__*/\n    function (_inhertClass) {\n      _inherits(Base, _inhertClass);\n\n      function Base() {\n        _classCallCheck(this, Base);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(Base).apply(this, arguments));\n      }\n\n      _createClass(Base, [{\n        key: \"addGroup\",\n        value: function addGroup(_ref) {\n          var _this = this;\n\n          var obj = _ref.obj,\n              blockBluePrint = _ref.blockBluePrint,\n              _ref$oldStateReducer = _ref.oldStateReducer,\n              oldStateReducer = _ref$oldStateReducer === void 0 ? this.builderRef.state.reducer : _ref$oldStateReducer,\n              getFinalBuilderStateReducer = _ref.getFinalBuilderStateReducer,\n              newName = _ref.newName,\n              oldId = _ref.oldId,\n              saveModel = _ref.saveModel;\n\n          if (this.props.subBlockView.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].GROUP) {\n            this.props.dispatch(Object(_commons_src_index_actions__WEBPACK_IMPORTED_MODULE_0__[\"showToast\"])({\n              message: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"BE_MESSAGE_GROUP_VALIDATION\"],\n              type: 'error'\n            }));\n            return;\n          }\n\n          var newGroupPosition = _objectSpread({}, obj.position, {\n            y1: Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getItemY1\"])(blockBluePrint.get('inputs').count(), blockBluePrint.get('outputs').count(), obj.position.y0)\n          });\n\n          var body = {\n            id: Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_2__[\"getUuId\"])(),\n            frameworkVersion: this.props.modelFrameworkVersion,\n            component_id: obj.component_id,\n            name: newName || \"group_\".concat(Date.now()),\n            description: blockBluePrint.get('description'),\n            ui_param: {\n              position: newGroupPosition\n            }\n          };\n\n          var cb = function cb(newReducer) {\n            _this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_ADD_GROUP\"],\n              body: body,\n              params: _objectSpread({}, _this.props.routeProps.match.params, {\n                modelId: _this.props.subBlockView.get('componentID') && !_this.props.subBlockView.get('readOnly') ? _this.props.subBlockView.get('componentID') : _this.props.routeProps.match.params.modelId\n              }),\n              dispatch: _this.props.dispatch,\n              cb: function cb(_ref2) {\n                var group = _ref2.group;\n\n                if (group) {\n                  // TODO remove fallback checks when BE is done\n                  var newGroupReducerItem = {\n                    inputs: group.inputs.reduce(function (prev, next) {\n                      // const blockDetails = group.blocks[next.blockId];\n                      var blockDetails = group.blocks && group.blocks[next.blockId];\n                      return _objectSpread({}, prev, _defineProperty({}, next.id, {\n                        id: next.id,\n                        otherProperties: _objectSpread({}, next, {\n                          type: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].GROUP\n                        }),\n                        // label: `${blockDetails.name}::${blockDetails.inputs[next.id].label}`,\n                        label: blockDetails ? \"\".concat(blockDetails.name, \"::\").concat(blockDetails.inputs[next.id].ui_param.label) : ''\n                      }));\n                    }, {}),\n                    outputs: group.outputs.reduce(function (prev, next) {\n                      // const blockDetails = group.blocks[next.blockId];\n                      var blockDetails = group.blocks && group.blocks[next.blockId];\n                      return _objectSpread({}, prev, _defineProperty({}, next.id, {\n                        id: next.id,\n                        otherProperties: _objectSpread({}, next, {\n                          type: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].GROUP\n                        }),\n                        // label: `${blockDetails.name}::${blockDetails.outputs[next.id].label}`,\n                        label: blockDetails ? \"\".concat(blockDetails.name, \"::\").concat(blockDetails.outputs[next.id].ui_param.label) : ''\n                      }));\n                    }, {}),\n                    frameworkVersion: _this.props.modelFrameworkVersion,\n                    component_id: body.component_id,\n                    type: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].GROUP,\n                    id: body.id,\n                    name: body.name,\n                    position: body.ui_param.position,\n                    color: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"GROUP_DRAGGABLE_ITEM_COLOR\"]\n                  };\n                  var stateReducer = newReducer.merge({\n                    unsaved: true,\n                    selectedNode: Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({}),\n                    selectedConnection: Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({}),\n                    showRightPane: false\n                  }).setIn(['blocks', body.id], Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])(newGroupReducerItem));\n\n                  if (getFinalBuilderStateReducer) {\n                    getFinalBuilderStateReducer(stateReducer, saveModel);\n                    return;\n                  }\n\n                  stateReducer = stateReducer.merge(Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({\n                    showRightPane: true,\n                    selectedNode: _defineProperty({}, newGroupReducerItem.id, newGroupReducerItem)\n                  }));\n\n                  _this.builderRef.updateStateReducer(stateReducer, function () {\n                    _this.onChildSelect(newGroupReducerItem);\n                  });\n                }\n              }\n            }));\n          };\n\n          this.moveOverlappingNodes(oldStateReducer, newGroupPosition, oldId, cb);\n        }\n      }, {\n        key: \"createGroup\",\n        value: function createGroup(_ref3) {\n          var _this2 = this;\n\n          var name = _ref3.name,\n              description = _ref3.description;\n          var stateReducer = this.builderRef.state.reducer.set('unsaved', true);\n          var children = this.state.selectedChild.filter(function (i) {\n            return !i.get('stackID');\n          });\n          /* Preparing list of connections for creation group and later deleteing from state */\n\n          var allAssociatedConnections = stateReducer.getIn(['connectionList']).filter(function (connection) {\n            return _this2.state.selectedChild.has(connection.getIn(['sources', '0', 'id'])) || _this2.state.selectedChild.has(connection.getIn(['targets', '0', 'id']));\n          });\n          /* retrive ids and classifying them to stacks and blocks */\n\n          var req = children.reduce(function (acc, child) {\n            var prop = 'block_ids';\n\n            if (child.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].STACK) {\n              prop = 'stack_ids';\n            } else if (child.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].GROUP) {\n              prop = 'group_ids';\n            }\n\n            return _objectSpread({}, acc, _defineProperty({}, prop, [].concat(_toConsumableArray(acc[prop]), [child.get('id')])));\n          }, {\n            block_ids: [],\n            stack_ids: [],\n            group_ids: []\n          });\n\n          var body = _objectSpread({\n            name: name,\n            id: Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_2__[\"getUuId\"])(),\n            category: null,\n            description: description\n          }, req, {\n            connection_ids: allAssociatedConnections.filter(function (connection) {\n              var sourceItem = _this2.state.selectedChild.get(connection.getIn(['sources', '0', 'id']));\n\n              var targetItem = _this2.state.selectedChild.get(connection.getIn(['targets', '0', 'id']));\n\n              return !!sourceItem && !!targetItem && (!sourceItem.get('stackID') && targetItem.get('stackID') || sourceItem.get('stackID') && !targetItem.get('stackID') || !sourceItem.get('stackID') && !targetItem.get('stackID'));\n            }).keySeq().toJS(),\n            ui_param: {\n              position: this.state.newStackPosition.position\n            },\n            frameworkVersion: this.props.modelFrameworkVersion\n          });\n\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_CREATE_GROUP\"],\n            body: body,\n            params: _objectSpread({}, this.props.routeProps.match.params, {\n              modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n            }),\n            dispatch: this.props.dispatch,\n            cb: function cb(_ref4) {\n              var group = _ref4.group;\n\n              if (group) {\n                var y1 = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getItemY1\"])(group.inputs.length, group.outputs.length, body.ui_param.position.y0);\n\n                var newGroupPosition = _objectSpread({}, body.ui_param.position, {\n                  y1: y1,\n                  height: (y1 - body.ui_param.position.y0 + 1) * _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"GridSize\"].height\n                });\n\n                var cb = function cb(newReducer, updatedGroupPosition) {\n                  var latestReducer = newReducer;\n\n                  _this2.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n                    NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_MOVE_BLOCK\"],\n                    body: {\n                      position: updatedGroupPosition\n                    },\n                    params: _objectSpread({}, _this2.props.routeProps.match.params, {\n                      groupId: body.id,\n                      modelId: _this2.props.subBlockView.get('componentID') && !_this2.props.subBlockView.get('readOnly') ? _this2.props.subBlockView.get('componentID') : _this2.props.routeProps.match.params.modelId\n                    }),\n                    dispatch: _this2.props.dispatch\n                  }));\n\n                  var newGroupReducerItem = Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({\n                    inputs: group.inputs.reduce(function (prev, next) {\n                      var blockDetails = _this2.state.selectedChild.get(next.blockId);\n\n                      return _objectSpread({}, prev, _defineProperty({}, next.id, {\n                        id: next.id,\n                        otherProperties: _objectSpread({}, next, {\n                          type: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].GROUP\n                        }),\n                        label: \"\".concat(blockDetails.get('name'), \"::\").concat(blockDetails.getIn(['inputs', next.id, 'label']))\n                      }));\n                    }, {}),\n                    outputs: group.outputs.reduce(function (prev, next) {\n                      var blockDetails = _this2.state.selectedChild.get(next.blockId);\n\n                      return _objectSpread({}, prev, _defineProperty({}, next.id, {\n                        id: next.id,\n                        otherProperties: _objectSpread({}, next, {\n                          type: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].GROUP\n                        }),\n                        label: \"\".concat(blockDetails.get('name'), \"::\").concat(blockDetails.getIn(['outputs', next.id, 'label']))\n                      }));\n                    }, {}),\n                    component_id: group.component_id,\n                    type: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].GROUP,\n                    id: body.id,\n                    name: body.name,\n                    position: updatedGroupPosition,\n                    color: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"GROUP_DRAGGABLE_ITEM_COLOR\"],\n                    frameworkVersion: body.frameworkVersion\n                  });\n                  /* removing connections */\n\n                  latestReducer = latestReducer.update('connectionList', function (connections) {\n                    return connections.filter(function (connection) {\n                      return !(_this2.state.selectedChild.has(connection.getIn(['sources', '0', 'id'])) && _this2.state.selectedChild.has(connection.getIn(['targets', '0', 'id'])));\n                    });\n                  });\n                  /* updating existing connections */\n\n                  var groupInputConnections = allAssociatedConnections.filter(function (connection) {\n                    return !_this2.state.selectedChild.has(connection.getIn(['sources', '0', 'id'])) && _this2.state.selectedChild.has(connection.getIn(['targets', '0', 'id']));\n                  });\n                  var groupOutputConnections = allAssociatedConnections.filter(function (connection) {\n                    return _this2.state.selectedChild.has(connection.getIn(['sources', '0', 'id'])) && !_this2.state.selectedChild.has(connection.getIn(['targets', '0', 'id']));\n                  });\n                  groupInputConnections.forEach(function (connection) {\n                    latestReducer = latestReducer.updateIn(['connectionList', connection.get('id'), 'targets', '0'], function (firstTarget) {\n                      newGroupReducerItem = newGroupReducerItem.setIn(['inputs', firstTarget.getIn(['part', 'id']), 'connected'], true);\n                      return Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({\n                        id: body.id,\n                        type: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].BLOCK,\n                        part: newGroupReducerItem.getIn(['inputs', firstTarget.getIn(['part', 'id'])])\n                      });\n                    });\n                  });\n                  groupOutputConnections.forEach(function (connection) {\n                    latestReducer = latestReducer.updateIn(['connectionList', connection.get('id'), 'sources', '0'], function (firstSource) {\n                      newGroupReducerItem = newGroupReducerItem.setIn(['outputs', firstSource.getIn(['part', 'id']), 'connected'], true);\n                      return Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({\n                        id: body.id,\n                        type: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].BLOCK,\n                        part: newGroupReducerItem.getIn(['outputs', firstSource.getIn(['part', 'id'])])\n                      });\n                    });\n                  });\n                  /* adding new group to state */\n\n                  latestReducer = latestReducer.setIn(['blocks', body.id], newGroupReducerItem).merge({\n                    unsaved: true,\n                    selectedNode: Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({}),\n                    selectedConnection: Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({}),\n                    showRightPane: false\n                  });\n\n                  _this2.paperRef.updateState({\n                    selectedChild: Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({})\n                  });\n\n                  _this2.builderRef.updateStateReducer(latestReducer);\n\n                  _this2.setState({\n                    createComplexBlockType: undefined,\n                    selectedChild: undefined,\n                    selectedConnections: undefined,\n                    newStackPosition: undefined\n                  });\n                };\n                /* removing child nodes of the new group */\n\n\n                _this2.state.selectedChild.forEach(function (child) {\n                  stateReducer = stateReducer.deleteIn([_ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"reducerItemTypes\"][child.get('type')] || 'blocks', child.get('id')]);\n                });\n\n                var _stateReducer$toJS = stateReducer.toJS(),\n                    blocks = _stateReducer$toJS.blocks,\n                    operators = _stateReducer$toJS.operators,\n                    stacks = _stateReducer$toJS.stacks;\n\n                var stagePositionFinderInstance = new _commons_src_index_utils__WEBPACK_IMPORTED_MODULE_2__[\"StagePositionFinder\"]();\n                stagePositionFinderInstance.addEventListener('message', function (event) {\n                  if (event.data.newPosition) {\n                    cb(stateReducer, event.data.newPosition);\n                    stagePositionFinderInstance.terminate();\n                  } else {\n                    _this2.moveOverlappingNodes(stateReducer, newGroupPosition, body.id, function (updatedReducer) {\n                      cb(updatedReducer, newGroupPosition);\n                    });\n                  }\n                });\n                var parsedBlocks = JSON.parse(JSON.stringify(blocks));\n                var parsedOperators = JSON.parse(JSON.stringify(operators));\n                var parsedStacks = JSON.parse(JSON.stringify(stacks));\n                stagePositionFinderInstance.postMessage({\n                  blocks: parsedBlocks,\n                  operators: parsedOperators,\n                  stacks: parsedStacks,\n                  newStageData: {\n                    span: _this2.state.newStackPosition.span,\n                    position: newGroupPosition,\n                    id: body.id\n                  }\n                });\n              }\n            }\n          }));\n        }\n      }, {\n        key: \"deleteGroup\",\n        value: function deleteGroup(id, getFinalBuilderStateReducer) {\n          var _this3 = this;\n\n          if (this.builderRef.state.reducer.getIn(['blocks', id, 'shared'])) {\n            var parentGroupID = this.builderRef.state.reducer.getIn(['blocks', id, 'parentGroupID']);\n            this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_REMOVE_SHARED_GROUP\"],\n              params: _objectSpread({}, this.props.routeProps.match.params, {\n                sharedGroupId: id,\n                groupId: parentGroupID,\n                modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n              }),\n              dispatch: this.props.dispatch,\n              cb: function cb(_ref5) {\n                var result = _ref5.result;\n\n                if (result) {\n                  var stateReducer = _this3.builderRef.state.reducer.set('unsaved', true);\n\n                  stateReducer = _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"builderReducerFunctions\"][_commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"ACTION_DELETE_CHILD\"]](stateReducer, {\n                    dragType: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].BLOCK,\n                    id: id\n                  });\n                  var sharedGroupBlocks = stateReducer.get('blocks').filter(function (iItem) {\n                    return iItem.get('parentGroupID') === parentGroupID && iItem.get('shared');\n                  });\n\n                  if (sharedGroupBlocks.count() === 1) {\n                    var firstSharedGroupBlock = sharedGroupBlocks.first();\n                    var firstSharedGroupBlockID = firstSharedGroupBlock.get('id');\n                    var firstSharedGroupBlockParentGroupID = firstSharedGroupBlock.get('parentGroupID');\n\n                    if (firstSharedGroupBlockID === firstSharedGroupBlockParentGroupID) {\n                      stateReducer = stateReducer.updateIn(['blocks', firstSharedGroupBlockID], function (sharedGroupBlock) {\n                        return sharedGroupBlock.delete('parentGroupID').delete('sharesWith').merge({\n                          shared: false,\n                          name: result.name\n                        });\n                      });\n                    } else {\n                      // changing block id to parentgroupid across the builder\n                      stateReducer = stateReducer.setIn(['blocks', firstSharedGroupBlockParentGroupID], stateReducer.getIn(['blocks', firstSharedGroupBlockID]).delete('parentGroupID').delete('sharesWith').merge({\n                        id: firstSharedGroupBlockParentGroupID,\n                        shared: false,\n                        name: result.name\n                      })).deleteIn(['blocks', firstSharedGroupBlockID]).update('connectionList', function (connections) {\n                        return connections.map(function (connection) {\n                          if (connection.getIn(['sources', '0', 'id']) === firstSharedGroupBlockID) {\n                            return connection.setIn(['sources', '0', 'id'], firstSharedGroupBlockParentGroupID);\n                          }\n\n                          if (connection.getIn(['targets', '0', 'id']) === firstSharedGroupBlockID) {\n                            return connection.setIn(['targets', '0', 'id'], firstSharedGroupBlockParentGroupID);\n                          }\n\n                          return connection;\n                        });\n                      });\n                    }\n                  } else {\n                    Object.keys(result.sharedComponentDetail.shareDetail).forEach(function (itemKey) {\n                      stateReducer = stateReducer.mergeIn(['blocks', itemKey], Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({\n                        name: result.sharedComponentDetail.shareDetail[itemKey].name,\n                        sharesWith: result.sharedComponentDetail.shareDetail[itemKey].sharesWith\n                      }));\n                    });\n                  }\n\n                  if (getFinalBuilderStateReducer) {\n                    getFinalBuilderStateReducer(stateReducer);\n                    return;\n                  }\n\n                  _this3.builderRef.updateStateReducer(stateReducer);\n                }\n              }\n            }));\n          } else {\n            this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_DELETE_BLOCK\"],\n              params: _objectSpread({}, this.props.routeProps.match.params, {\n                groupId: id,\n                modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n              }),\n              dispatch: this.props.dispatch\n            }));\n            var stateReducer = this.builderRef.state.reducer.set('unsaved', true);\n            stateReducer = _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"builderReducerFunctions\"][_commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"ACTION_DELETE_CHILD\"]](stateReducer, {\n              dragType: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].BLOCK,\n              id: id\n            });\n\n            if (getFinalBuilderStateReducer) {\n              getFinalBuilderStateReducer(stateReducer);\n              return;\n            }\n\n            this.builderRef.updateStateReducer(stateReducer);\n          }\n        }\n      }, {\n        key: \"onCreateGroupClick\",\n        value: function onCreateGroupClick(selectedChild) {\n          var _this4 = this;\n\n          if (this.props.subBlockView.get('readOnly')) {\n            return false;\n          }\n\n          var connections = this.builderRef.state.reducer.get('connectionList').filter(function (connection) {\n            return selectedChild.has(connection.getIn(['sources', 0, 'id'])) && selectedChild.has(connection.getIn(['targets', 0, 'id']));\n          });\n          this.setState({\n            selectedChild: selectedChild,\n            selectedConnections: connections,\n            newStackPosition: Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getNewGroupPosition\"])(selectedChild),\n            createComplexBlockType: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].GROUP\n          });\n          setTimeout(function () {\n            _this4.builderRef.toggleRightPane(true);\n          });\n        }\n      }, {\n        key: \"createSharedGroup\",\n        value: function createSharedGroup(_ref6) {\n          var _this5 = this;\n\n          var id = _ref6.id;\n          // TODO see if loader is necessary\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_CREATE_SHARED_GROUP\"],\n            params: _objectSpread({}, this.props.routeProps.match.params, {\n              groupId: id,\n              modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n            }),\n            dispatch: this.props.dispatch,\n            cb: function cb(_ref7) {\n              var result = _ref7.result;\n\n              if (result) {\n                var _getNewSharedGroupBlo = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getNewSharedGroupBlockStateReducer\"])({\n                  id: id,\n                  parentGroupID: id,\n                  shareDetail: result.sharedComponentDetail.shareDetail,\n                  stateReducer: _this5.builderRef.state.reducer\n                }),\n                    stateReducer = _getNewSharedGroupBlo.stateReducer,\n                    newPosition = _getNewSharedGroupBlo.newPosition,\n                    newID = _getNewSharedGroupBlo.newID;\n\n                _this5.builderRef.updateStateReducer(stateReducer);\n\n                _this5.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n                  NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_MOVE_BLOCK\"],\n                  body: {\n                    position: _this5.builderRef.state.reducer.getIn(['blocks', id, 'position']).toJS()\n                  },\n                  params: _objectSpread({}, _this5.props.routeProps.match.params, {\n                    groupId: id,\n                    sharedGroupId: id,\n                    modelId: _this5.props.subBlockView.get('componentID') && !_this5.props.subBlockView.get('readOnly') ? _this5.props.subBlockView.get('componentID') : _this5.props.routeProps.match.params.modelId\n                  }),\n                  dispatch: _this5.props.dispatch\n                }));\n\n                _this5.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n                  NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_MOVE_BLOCK\"],\n                  body: {\n                    position: newPosition\n                  },\n                  params: _objectSpread({}, _this5.props.routeProps.match.params, {\n                    groupId: id,\n                    sharedGroupId: newID,\n                    modelId: _this5.props.subBlockView.get('componentID') && !_this5.props.subBlockView.get('readOnly') ? _this5.props.subBlockView.get('componentID') : _this5.props.routeProps.match.params.modelId\n                  }),\n                  dispatch: _this5.props.dispatch\n                }));\n              }\n            }\n          }));\n        }\n      }, {\n        key: \"addToSharedGroup\",\n        value: function addToSharedGroup(_ref8) {\n          var _this6 = this;\n\n          var id = _ref8.id;\n          var parentGroupID = this.builderRef.state.reducer.getIn(['blocks', id, 'parentGroupID']); // TODO see if loader is necessary\n\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_ADD_TO_SHARED_GROUP\"],\n            params: _objectSpread({}, this.props.routeProps.match.params, {\n              groupId: parentGroupID,\n              modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n            }),\n            dispatch: this.props.dispatch,\n            cb: function cb(_ref9) {\n              var result = _ref9.result;\n\n              if (result) {\n                var _getNewSharedGroupBlo2 = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getNewSharedGroupBlockStateReducer\"])({\n                  id: id,\n                  parentGroupID: parentGroupID,\n                  shareDetail: result.sharedComponentDetail.shareDetail,\n                  stateReducer: _this6.builderRef.state.reducer\n                }),\n                    stateReducer = _getNewSharedGroupBlo2.stateReducer,\n                    newPosition = _getNewSharedGroupBlo2.newPosition,\n                    newID = _getNewSharedGroupBlo2.newID;\n\n                _this6.builderRef.updateStateReducer(stateReducer);\n\n                _this6.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n                  NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_MOVE_BLOCK\"],\n                  body: {\n                    position: newPosition\n                  },\n                  params: _objectSpread({}, _this6.props.routeProps.match.params, {\n                    groupId: parentGroupID,\n                    sharedGroupId: newID,\n                    modelId: _this6.props.subBlockView.get('componentID') && !_this6.props.subBlockView.get('readOnly') ? _this6.props.subBlockView.get('componentID') : _this6.props.routeProps.match.params.modelId\n                  }),\n                  dispatch: _this6.props.dispatch\n                }));\n              }\n            }\n          }));\n        }\n      }, {\n        key: \"onRenameGroup\",\n        value: function onRenameGroup(name) {\n          var activeChildID = this.state.activeChild.get('id');\n          var isShared = this.state.activeChild.get('shared');\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_RENAME_GROUP\"],\n            name: name,\n            params: _objectSpread({}, this.props.routeProps.match.params, {\n              groupId: isShared ? this.state.activeChild.get('parentGroupID') : activeChildID,\n              sharedGroupId: isShared ? activeChildID : undefined,\n              modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n            }),\n            dispatch: this.props.dispatch\n          }));\n          this.setState({\n            activeChild: this.state.activeChild.setIn(['name'], name),\n            infoTabInstanceNameError: ''\n          });\n          this.builderRef.updateStateReducer(this.builderRef.state.reducer.set('unsaved', true).setIn(['blocks', activeChildID, 'name'], name));\n        }\n      }]);\n\n      return Base;\n    }(inhertClass)\n  );\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (GroupClass);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/GroupClass.js\n");

/***/ }),

/***/ "./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/PropertiesClass.js":
/*!********************************************************************************************!*\
  !*** ./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/PropertiesClass.js ***!
  \********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../../commons/src/index.constants */ \"./commons/src/index.constants.js\");\n/* harmony import */ var _commons_src_index_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../../commons/src/index.utils */ \"./commons/src/index.utils.js\");\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! immutable */ \"./node_modules/immutable/dist/immutable.js\");\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _ModelPage_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../ModelPage.actions */ \"./apps/Model/src/pages/ModelPage/ModelPage.actions.js\");\n/* harmony import */ var _ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ModelDesigner.actions */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.actions.js\");\n/* harmony import */ var _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ModelDesigner.constants */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.constants.js\");\n/* harmony import */ var _ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ModelDesigner.utils */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.utils.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\n\n\n\n\n\nvar PropertiesClass = function PropertiesClass() {\n  var inhertClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : react__WEBPACK_IMPORTED_MODULE_3___default.a.Component;\n  return (\n    /*#__PURE__*/\n    function (_inhertClass) {\n      _inherits(Base, _inhertClass);\n\n      function Base() {\n        _classCallCheck(this, Base);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(Base).apply(this, arguments));\n      }\n\n      _createClass(Base, [{\n        key: \"updateBlockParameterSuccess\",\n        value: function updateBlockParameterSuccess(payload) {\n          var value = payload.value,\n              IOtype = payload.IOtype,\n              path = payload.path,\n              valueObject = payload.valueObject,\n              repeatable = payload.repeatable,\n              transformIOAndUpdate = payload.transformIOAndUpdate,\n              uniqueIDForValue = payload.uniqueIDForValue,\n              activeItemProps = payload.activeItemProps;\n          var activeItem = activeItemProps || this.state.activeChild;\n          var activeChild = activeItem.setIn([IOtype].concat(_toConsumableArray(path.toJS())), Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(value));\n\n          if (uniqueIDForValue) {\n            activeChild = activeChild.setIn([IOtype].concat(_toConsumableArray(path.pop().toJS()), ['uniqueIDForValue']), uniqueIDForValue);\n          }\n\n          if (repeatable) activeChild = activeChild.setIn([IOtype, path.toJS().shift(), 'valueObject'], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(valueObject));\n\n          if (!uniqueIDForValue && value && value.data_type === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"ModelDesigner_DATA_TYPES\"].COMPLEX) {\n            var subProperties = Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_1__[\"normalizeItems\"])(value.properties.map(function (iSubProperty) {\n              return _objectSpread({}, iSubProperty, {\n                reducerPath: path.concat(['properties', iSubProperty.internal_name])\n              });\n            }), 'internal_name');\n            activeChild = activeChild.setIn([IOtype].concat(_toConsumableArray(path.toJS()), ['properties']), Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(subProperties));\n          }\n\n          if (!activeItemProps) {\n            this.setState({\n              activeChild: activeChild\n            });\n\n            if (transformIOAndUpdate) {\n              this.transformIOAndUpdate(activeChild);\n            } else {\n              this.builderRef.updateStateReducer(this.builderRef.state.reducer.set('unsaved', true));\n            }\n          } else {\n            var newActiveItem = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getTransformedIOChild\"])(activeChild);\n            this.props.dispatch(Object(_ModelPage_actions__WEBPACK_IMPORTED_MODULE_4__[\"updateNewVersionProperties\"])({\n              newVersionProperties: activeChild,\n              builderActiveChild: newActiveItem\n            }));\n          }\n        }\n      }, {\n        key: \"updateBlockParameter\",\n        value: function updateBlockParameter(value, valueObject, propertyObject, valueType, key, uniqueIDForValue, activeItemProps) {\n          var activeItem = activeItemProps || this.state.activeChild;\n          var activeChildStackID = activeItem.get('stackID');\n\n          if ((propertyObject.get('data_type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"ModelDesigner_DATA_TYPES\"].INTEGER || propertyObject.get('data_type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"ModelDesigner_DATA_TYPES\"].FLOAT) && valueType === 'value_type') {\n            this.updateBlockParameterSuccess({\n              value: value,\n              IOtype: 'parameters',\n              path: propertyObject.get('reducerPath').concat('value_type'),\n              transformIOAndUpdate: !this.state.isActiveChildHorizontalStackItem,\n              activeItemProps: activeItemProps\n            });\n          } else {\n            var blockBlueprint = this.getBlockBluePrint({\n              type: activeItem.get('type'),\n              componentID: activeItem.get('component_id'),\n              isNewVersion: !!activeItemProps\n            });\n            var repeatable = false;\n\n            if (blockBlueprint.get('parameters')) {\n              var blueprintParameters = Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_1__[\"normalizeItems\"])(blockBlueprint.get('parameters').toJS(), 'internal_name');\n              repeatable = blueprintParameters[key].repeatable;\n            }\n\n            var finalValue = value;\n\n            if (propertyObject.get('render_type') === _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"RENDER_TYPES\"].JSON) {\n              finalValue = value;\n            } else if (value instanceof Object && !immutable__WEBPACK_IMPORTED_MODULE_2__[\"List\"].isList(value)) {\n              finalValue = _objectSpread({}, value, {\n                properties: value.properties ? value.properties.map(function (prop) {\n                  return _objectSpread({}, prop, {\n                    value: Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getValueFromRepeatableBlueprint\"])(prop)\n                  });\n                }) : undefined\n              });\n            }\n\n            var payload = {\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_UPDATE_BLOCK_PARAMETER\"],\n              eaiId: this.eaiId,\n              modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId,\n              blockId: activeItem.get('id'),\n              path: propertyObject.get('reducerPath').concat('value'),\n              key: key,\n              valueObject: repeatable ? valueObject.toJS() : valueObject.toJS().value,\n              value: finalValue,\n              IOtype: 'parameters',\n              dispatch: this.props.dispatch,\n              stackId: activeChildStackID,\n              iteration: this.state.stackListActiveIndex + 1,\n              transformIOAndUpdate: !this.state.isActiveChildHorizontalStackItem,\n              isActiveChildHorizontalStackItem: this.state.isActiveChildHorizontalStackItem,\n              uniqueIDForValue: uniqueIDForValue,\n              activeItemProps: activeItemProps\n            };\n            this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])(_objectSpread({}, payload, {\n              valueObject: valueObject.toJS().value\n            })));\n            this.updateBlockParameterSuccess(_objectSpread({}, payload, {\n              repeatable: repeatable\n            }));\n          }\n        }\n      }, {\n        key: \"addParameter\",\n        value: function addParameter(origin, valueObject, valuePath, activeItemProps) {\n          var activeItem = activeItemProps || this.state.activeChild;\n          var activeChildStackID = activeItem.get('stackID');\n          var oldValueObject = valueObject.toJS().value || {};\n          var newId = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"createNewRepeatableKey\"])(Object.keys(oldValueObject));\n          var dispatch = this.props.dispatch;\n          var blockBlueprint = this.getBlockBluePrint({\n            type: activeItem.get('type'),\n            componentID: activeItem.get('component_id'),\n            isNewVersion: !!activeItemProps\n          });\n          if (!blockBlueprint.get('parameters')) return;\n          var blueprintParameters = Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_1__[\"normalizeItems\"])(blockBlueprint.get('parameters').toJS(), 'internal_name');\n          var blueprintParam = blueprintParameters[origin.get('internal_name')];\n          var internalName = blueprintParam.internal_name;\n\n          var newRepeatedObject = _objectSpread({}, blueprintParam, {\n            repeatable: false,\n            id: newId,\n            reducerPath: [internalName, 'value', newId],\n            value: Object.values(blueprintParam.properties).reduce(function (accValue, property) {\n              return _objectSpread({}, accValue, _defineProperty({}, property.internal_name, Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getProperty\"])(property, Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getValueFromRepeatableBlueprint\"])(property), [internalName, 'value', newId, 'value', property.internal_name])));\n            }, {})\n          });\n\n          var defaultValue = Object.keys(newRepeatedObject.value).reduce(function (accum, param) {\n            return _objectSpread({}, accum, _defineProperty({}, param, Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getValueFromBlueprint\"])(newRepeatedObject.value[param])));\n          }, {});\n\n          var newValueObject = _objectSpread({}, oldValueObject, _defineProperty({}, newId, defaultValue));\n\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_UPDATE_BLOCK_PARAMETER\"],\n            key: origin.get('internal_name'),\n            valueObject: newValueObject,\n            dispatch: dispatch,\n            eaiId: this.eaiId,\n            modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId,\n            blockId: activeItem.get('id'),\n            stackId: activeChildStackID,\n            iteration: this.state.stackListActiveIndex + 1,\n            isActiveChildHorizontalStackItem: this.state.isActiveChildHorizontalStackItem,\n            isConflictItem: !!activeItemProps\n          }));\n          this.updateBlockParameterSuccess({\n            value: newRepeatedObject,\n            path: origin.get('reducerPath').concat(['value', newId]),\n            IOtype: 'parameters',\n            valueObject: {\n              value: newValueObject\n            },\n            valuePath: valuePath,\n            repeatable: true,\n            transformIOAndUpdate: !this.state.isActiveChildHorizontalStackItem,\n            activeItemProps: activeItemProps\n          });\n        }\n      }, {\n        key: \"deleteParameter\",\n        value: function deleteParameter(origin, id, valueObject, activeItemProps) {\n          var activeItem = activeItemProps || this.state.activeChild;\n          var activeChildStackID = activeItem.get('stackID');\n          var oldValue = origin.get('value') || Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([]);\n          var value = oldValue.delete(id);\n          var newValueObject;\n\n          if (valueObject.get('value').count() === 1) {\n            newValueObject = valueObject.set('value', null).toJS();\n          } else {\n            newValueObject = valueObject.deleteIn(['value', id]).toJS();\n          }\n\n          var payload = {\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_UPDATE_BLOCK_PARAMETER\"],\n            eaiId: this.eaiId,\n            modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId,\n            blockId: activeItem.get('id'),\n            path: origin.get('reducerPath').concat('value'),\n            key: origin.get('internal_name'),\n            value: value,\n            valueObject: newValueObject,\n            IOtype: 'parameters',\n            repeatable: true,\n            stackId: activeChildStackID,\n            iteration: this.state.stackListActiveIndex + 1,\n            transformIOAndUpdate: !this.state.isActiveChildHorizontalStackItem,\n            isActiveChildHorizontalStackItem: this.state.isActiveChildHorizontalStackItem\n          };\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])(_objectSpread({}, payload, {\n            valueObject: newValueObject.value\n          })));\n          this.updateBlockParameterSuccess(_objectSpread({}, payload, {\n            activeItemProps: activeItemProps\n          }));\n        }\n      }, {\n        key: \"onUpdateIOParameterSuccess\",\n        value: function onUpdateIOParameterSuccess(payload) {\n          var value = payload.value,\n              IOtype = payload.IOtype,\n              path = payload.path,\n              transformIOAndUpdate = payload.transformIOAndUpdate,\n              activeItemProps = payload.activeItemProps;\n          var activeItem = activeItemProps || this.state.activeChild;\n          var activeChild = activeItem.setIn([IOtype].concat(_toConsumableArray(path.toJS())), Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(value));\n\n          if (value && value.data_type === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"ModelDesigner_DATA_TYPES\"].COMPLEX) {\n            var subProperties = Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_1__[\"normalizeItems\"])(value.properties.map(function (iSubProperty) {\n              return _objectSpread({}, iSubProperty, {\n                reducerPath: path.concat(['properties', iSubProperty.internal_name])\n              });\n            }), 'internal_name');\n            activeChild = activeChild.setIn([IOtype].concat(_toConsumableArray(path.toJS()), ['properties']), Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(subProperties));\n          }\n\n          if (!activeItemProps) {\n            this.setState({\n              activeChild: activeChild\n            });\n\n            if (transformIOAndUpdate) {\n              this.transformIOAndUpdate(activeChild);\n            } else {\n              this.builderRef.updateStateReducer(this.builderRef.state.reducer.set('unsaved', true));\n            }\n          } else {\n            var newActiveItem = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getTransformedIOChild\"])(activeChild);\n            this.props.dispatch(Object(_ModelPage_actions__WEBPACK_IMPORTED_MODULE_4__[\"updateNewVersionProperties\"])({\n              newVersionProperties: activeChild,\n              builderActiveChild: newActiveItem\n            }));\n          }\n        }\n      }, {\n        key: \"updateIOParameter\",\n        value: function updateIOParameter(_ref, IOtype) {\n          var data = _ref.data,\n              propertyObject = _ref.propertyObject,\n              key = _ref.key,\n              valueObject = _ref.valueObject,\n              value = _ref.value,\n              valueType = _ref.valueType,\n              activeItemProps = _ref.activeItemProps;\n\n          if ((propertyObject.get('data_type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"ModelDesigner_DATA_TYPES\"].INTEGER || propertyObject.get('data_type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"ModelDesigner_DATA_TYPES\"].FLOAT) && valueType === 'value_type') {\n            this.onUpdateIOParameterSuccess({\n              value: value,\n              IOtype: IOtype,\n              path: propertyObject.get('reducerPath').concat('value_type'),\n              transformIOAndUpdate: !this.state.isActiveChildHorizontalStackItem,\n              activeItemProps: activeItemProps\n            });\n          } else {\n            var payload = {\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_UPDATE_BLOCK_IO_PARAMETER\"],\n              Aid: this.eaiId,\n              modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId,\n              blockId: activeItemProps ? activeItemProps.get('id') : this.state.activeChild.get('id'),\n              data: data,\n              path: propertyObject.get('reducerPath').concat('value'),\n              key: key,\n              valueObject: valueObject.toJS().value,\n              value: value,\n              IOtype: IOtype,\n              dispatch: this.props.dispatch,\n              isActiveChildHorizontalStackItem: this.state.isActiveChildHorizontalStackItem,\n              transformIOAndUpdate: !this.state.isActiveChildHorizontalStackItem,\n              iteration: this.state.stackListActiveIndex + 1,\n              stackId: this.state.activeChild.get('stackID')\n            };\n            this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])(payload));\n            this.onUpdateIOParameterSuccess(_objectSpread({}, payload, {\n              activeItemProps: activeItemProps\n            }));\n          }\n        }\n      }, {\n        key: \"onAddIOSuccess\",\n        value: function onAddIOSuccess(payload) {\n          var _this = this;\n\n          var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : payload.newId;\n          var data = payload.data,\n              newId = payload.newId,\n              type = payload.type,\n              order = payload.order,\n              newPosition = payload.newPosition,\n              activeItemProps = payload.activeItemProps;\n          var activeChild = activeItemProps || this.state.activeChild;\n          var newActiveChild;\n          var blockBlueprint = this.getBlockBluePrint({\n            type: activeChild.get('type'),\n            componentID: activeChild.get('component_id'),\n            isNewVersion: !!activeItemProps\n          });\n          var childIOTemplate = blockBlueprint.get(type);\n          var ioTemplate = Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_1__[\"normalizeItems\"])(childIOTemplate.toJS(), 'internal_name'));\n          var newInput = ioTemplate.get(data.get('internal_name'));\n          newInput = newInput.set('id', id);\n          newInput = newInput.set('order', order);\n          newInput = newInput.set('io_transformed', true);\n\n          if (!newInput.get('repeatable') && newInput.get('properties')) {\n            var properties = newInput.get('properties').toJS();\n            properties = properties.reduce(function (acc, property) {\n              return _objectSpread({}, acc, _defineProperty({}, property.internal_name, Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getProperty\"])(property, '', [data.get('internal_name'), 'properties', property.internal_name])));\n            }, {});\n            newInput = newInput.set('properties', Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(properties));\n            newInput = newInput.set('reducerPath', Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([newInput.get('internal_name')]));\n            newActiveChild = activeChild.setIn([type].concat(_toConsumableArray(data.get('reducerPath').toJS())), newInput);\n          }\n\n          newInput = newInput.set('id', newId);\n\n          if (!newInput.get('repeatable') && newInput.get('optional')) {\n            newInput = newInput.set('value', true);\n            newInput = newInput.set('reducerPath', Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([newInput.get('internal_name')]));\n            newActiveChild = activeChild.setIn([type].concat(_toConsumableArray(data.get('reducerPath').toJS())), newInput);\n          } else {\n            if (newInput.get('properties')) {\n              var _properties = newInput.get('properties').toJS();\n\n              _properties = _properties.reduce(function (acc, property) {\n                return _objectSpread({}, acc, _defineProperty({}, property.internal_name, Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getProperty\"])(property, Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getValueFromRepeatableBlueprint\"])(property), [newInput.get('internal_name'), 'value', newId, 'properties', property.internal_name])));\n              }, {});\n              newInput = newInput.set('properties', Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(_properties));\n            }\n\n            newInput = newInput.set('reducerPath', Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([data.get('internal_name'), 'value', newId]));\n            newActiveChild = activeChild.setIn([type].concat(_toConsumableArray(data.get('reducerPath').toJS()), ['value', newId]), newInput);\n          } // update position due to dent addition/removal\n\n\n          if (!activeItemProps) {\n            var cb = function cb(newReducer) {\n              newActiveChild = newActiveChild.set('position', Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(newPosition));\n\n              _this.setState({\n                activeChild: newActiveChild\n              });\n\n              _this.builderRef.updateStateReducer(newReducer, function () {\n                _this.transformIOAndUpdate(newActiveChild);\n              });\n            };\n\n            this.moveOverlappingNodes(this.builderRef.state.reducer, newPosition, newActiveChild.get('id'), cb);\n          } else {\n            var newActiveItem = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getTransformedIOChild\"])(newActiveChild);\n            this.props.dispatch(Object(_ModelPage_actions__WEBPACK_IMPORTED_MODULE_4__[\"updateNewVersionProperties\"])({\n              newVersionProperties: newActiveChild,\n              builderActiveChild: newActiveItem\n            }));\n          }\n        }\n      }, {\n        key: \"getParameters\",\n        value: function getParameters(activeChild, isNewVersion) {\n          var blockBlueprint = this.getBlockBluePrint({\n            type: activeChild.get('type'),\n            componentID: activeChild.get('component_id'),\n            isNewVersion: isNewVersion\n          });\n\n          if (!blockBlueprint) {\n            return {};\n          }\n\n          if (!blockBlueprint.get('parameters')) return null;\n          var blueprintParameters = Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_1__[\"normalizeItems\"])(blockBlueprint.get('parameters').toJS(), 'internal_name');\n          var data = activeChild.get('parameters') ? activeChild.get('parameters').toJS() : {};\n          blockBlueprint.get('parameters').toJS().forEach(function (blueprintParam) {\n            var internalName = blueprintParam.internal_name; // const value = data[internal_name] && data[internal_name].parameters_transformed ?\n            //   data[internal_name].value : data[internal_name];\n\n            var value = data[internalName];\n            var parameterTransformed = data[internalName] && data[internalName].parameters_transformed;\n            blueprintParam = _objectSpread({}, blueprintParam, {\n              parameters_transformed: true\n            });\n\n            if (blueprintParam.repeatable) {\n              value = data[internalName] && data[internalName].parameters_transformed ? data[internalName].value : data[internalName];\n              var valueObject = Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(data[internalName] && data[internalName].valueObject || value && {\n                value: value\n              } || {});\n              blueprintParameters[internalName] = _objectSpread({}, blueprintParam, {\n                reducerPath: [internalName],\n                value: value ? Object.keys(value).reduce(function (acc, id) {\n                  var cVal = value[id];\n                  return _objectSpread({}, acc, _defineProperty({}, id, _objectSpread({}, blueprintParam, {\n                    repeatable: false,\n                    id: id,\n                    reducerPath: [internalName, 'value', id],\n                    value: blueprintParam.properties.reduce(function (accValue, repeatedProperty) {\n                      return _objectSpread({}, accValue, _defineProperty({}, repeatedProperty.internal_name, Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getProperty\"])(repeatedProperty, Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getValueFromRepeatableBlueprintOnLoad\"])(parameterTransformed, cVal, repeatedProperty.internal_name), [internalName, 'value', id, 'value', repeatedProperty.internal_name], parameterTransformed)));\n                    }, {})\n                  })));\n                }, {}) : {}\n              });\n              blueprintParameters[internalName] = _objectSpread({}, blueprintParameters[internalName], {\n                valueObject: valueObject\n              });\n            } else {\n              blueprintParameters[internalName] = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getProperty\"])(blueprintParam, value !== undefined && value !== null ? value : Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getValueFromBlueprint\"])(blueprintParam), [internalName], data[internalName] && data[internalName].parameters_transformed);\n            }\n          });\n          return blueprintParameters;\n        }\n      }, {\n        key: \"onRemoveScope\",\n        value: function onRemoveScope(data) {\n          var _this2 = this;\n\n          var _this$state = this.state,\n              activeChild = _this$state.activeChild,\n              activeScopes = _this$state.activeScopes;\n          var type = (activeChild.get('dragType') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].BLOCK && activeChild.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].GROUP ? _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].GROUP : activeChild.get('dragType')).toLowerCase();\n          var newActiveChild = activeChild.deleteIn(['scopes', data.index]);\n          var isShared = type === 'group' && activeChild.get('shared');\n          var blockId = isShared ? activeChild.get('parentGroupID') : activeChild.get('id');\n          this.setState({\n            activeChild: newActiveChild,\n            activeScopes: activeScopes.delete(data.scope)\n          }, function () {\n            _this2.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])(_objectSpread({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_REMOVE_SCOPE_FROM_BLOCK\"]\n            }, data, {\n              Aid: _this2.eaiId,\n              modelId: _this2.props.subBlockView.get('componentID') && !_this2.props.subBlockView.get('readOnly') ? _this2.props.subBlockView.get('componentID') : _this2.props.routeProps.match.params.modelId,\n              blockId: blockId,\n              type: type\n            })));\n          });\n\n          if (type === 'stack') {\n            this.builderRef.updateStateReducer(this.builderRef.state.reducer.set('unsaved', true).deleteIn(['stacks', blockId, 'scopes', data.index]));\n          } else if (type === 'group') {\n            if (isShared) {\n              var sharedBlockIds = [].concat(_toConsumableArray(activeChild.get('sharesWith')), [activeChild.get('id')]);\n              var stateReducer = this.builderRef.state.reducer.set('unsaved', true);\n              sharedBlockIds.forEach(function (id) {\n                stateReducer = stateReducer.deleteIn(['blocks', id, 'scopes', data.index]);\n              });\n              this.builderRef.updateStateReducer(stateReducer);\n            } else {\n              this.builderRef.updateStateReducer(this.builderRef.state.reducer.set('unsaved', true).deleteIn(['blocks', blockId, 'scopes', data.index]));\n            }\n          } else if (type === 'block') {\n            this.transformIOAndUpdate(newActiveChild);\n          }\n        }\n      }, {\n        key: \"onAddScope\",\n        value: function onAddScope(tempScope) {\n          var _this3 = this;\n\n          var scope = tempScope.trim();\n          var activeChild = this.state.activeChild;\n          var type = (activeChild.get('dragType') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].BLOCK && activeChild.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].GROUP ? _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].GROUP : activeChild.get('dragType')).toLowerCase();\n          var isShared = type === 'group' && activeChild.get('shared');\n          var blockId = isShared ? activeChild.get('parentGroupID') : activeChild.get('id');\n          var scopes = activeChild.get('scopes');\n          if (!blockId) return;\n          if (scopes && scopes.indexOf(scope) > -1) return;\n          var newActiveChild;\n\n          if (scopes) {\n            newActiveChild = activeChild.setIn(['scopes', scopes.size], scope);\n          } else {\n            newActiveChild = activeChild.set('scopes', Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([scope]));\n          }\n\n          this.setState({\n            activeChild: newActiveChild\n          }, function () {\n            _this3.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_ADD_SCOPE_TO_BLOCK\"],\n              scope: scope,\n              Aid: _this3.eaiId,\n              modelId: _this3.props.subBlockView.get('componentID') && !_this3.props.subBlockView.get('readOnly') ? _this3.props.subBlockView.get('componentID') : _this3.props.routeProps.match.params.modelId,\n              blockId: blockId,\n              type: type\n            }));\n          });\n\n          if (type === 'stack') {\n            this.builderRef.updateStateReducer(this.builderRef.state.reducer.set('unsaved', true).updateIn(['stacks', blockId, 'scopes'], function (allScopes) {\n              return (allScopes || Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([])).concat(Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([scope]));\n            }));\n          } else if (type === 'group') {\n            if (isShared) {\n              var sharedBlockIds = [].concat(_toConsumableArray(activeChild.get('sharesWith')), [activeChild.get('id')]);\n              var stateReducer = this.builderRef.state.reducer.set('unsaved', true);\n              sharedBlockIds.forEach(function (id) {\n                stateReducer = stateReducer.updateIn(['blocks', id, 'scopes'], function (allScopes) {\n                  return (allScopes || Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([])).concat(Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([scope]));\n                });\n              });\n              this.builderRef.updateStateReducer(stateReducer);\n            } else {\n              this.builderRef.updateStateReducer(this.builderRef.state.reducer.set('unsaved', true).updateIn(['blocks', blockId, 'scopes'], function (allScopes) {\n                return (allScopes || Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([])).concat(Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([scope]));\n              }));\n            }\n          } else if (type === 'block') {\n            this.transformIOAndUpdate(newActiveChild);\n          }\n        }\n      }, {\n        key: \"onTransferWeightsClick\",\n        value: function onTransferWeightsClick(data) {}\n      }]);\n\n      return Base;\n    }(inhertClass)\n  );\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (PropertiesClass);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/PropertiesClass.js\n");

/***/ }),

/***/ "./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/StackClass.js":
/*!***************************************************************************************!*\
  !*** ./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/StackClass.js ***!
  \***************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _commons_src_index_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../../commons/src/index.actions */ \"./commons/src/index.actions.js\");\n/* harmony import */ var _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../../commons/src/index.constants */ \"./commons/src/index.constants.js\");\n/* harmony import */ var _commons_src_index_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../../commons/src/index.utils */ \"./commons/src/index.utils.js\");\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! immutable */ \"./node_modules/immutable/dist/immutable.js\");\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ModelDesigner.actions */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.actions.js\");\n/* harmony import */ var _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ModelDesigner.constants */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.constants.js\");\n/* harmony import */ var _ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ModelDesigner.utils */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.utils.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\n\n\n\n\n\nvar StashClass = function StashClass() {\n  var inhertClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : react__WEBPACK_IMPORTED_MODULE_4___default.a.Component;\n  return (\n    /*#__PURE__*/\n    function (_inhertClass) {\n      _inherits(Base, _inhertClass);\n\n      function Base() {\n        _classCallCheck(this, Base);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(Base).apply(this, arguments));\n      }\n\n      _createClass(Base, [{\n        key: \"addStack\",\n        value: function addStack(_ref) {\n          var _this = this;\n\n          var obj = _ref.obj,\n              blockBluePrint = _ref.blockBluePrint,\n              _ref$oldStateReducer = _ref.oldStateReducer,\n              oldStateReducer = _ref$oldStateReducer === void 0 ? this.builderRef.state.reducer : _ref$oldStateReducer,\n              getFinalBuilderStateReducer = _ref.getFinalBuilderStateReducer,\n              newName = _ref.newName,\n              saveModel = _ref.saveModel,\n              oldId = _ref.oldId;\n\n          if (this.props.subBlockView.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].STACK) {\n            this.props.dispatch(Object(_commons_src_index_actions__WEBPACK_IMPORTED_MODULE_0__[\"showToast\"])({\n              message: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"BE_MESSAGE_STACK_VALIDATION\"],\n              type: 'error'\n            }));\n            return;\n          }\n\n          var _getMovedStackPositio = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getMovedStackPositionAndDeltas\"])({\n            oldPosition: blockBluePrint.getIn(['ui_param', 'position']).toJS(),\n            newPosition: obj.position\n          }),\n              dx = _getMovedStackPositio.dx,\n              dy = _getMovedStackPositio.dy,\n              dx1 = _getMovedStackPositio.dx1,\n              dx0 = _getMovedStackPositio.dx0,\n              dy0 = _getMovedStackPositio.dy0,\n              dy1 = _getMovedStackPositio.dy1,\n              newStackPosition = _getMovedStackPositio.newStackPosition;\n\n          var ioMap = {};\n          var newBlocks = blockBluePrint.get('blocks').reduce(function (prev, next, key) {\n            var newID = Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_2__[\"getUuId\"])();\n            ioMap[key] = newID;\n            return prev.set(newID, next.merge({\n              id: newID,\n              name: \"\".concat(next.get('internal_name'), \"_\").concat(Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_2__[\"getShortId\"])(['-']))\n            }).updateIn(['ui_param', 'position'], function (oldPosition) {\n              return Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({\n                x: oldPosition.get('x') + dx,\n                y: oldPosition.get('y') + dy,\n                x1: oldPosition.get('x1') + dx1,\n                y0: oldPosition.get('y0') + dy0,\n                x0: oldPosition.get('x0') + dx0,\n                y1: oldPosition.get('y1') + dy1\n              });\n            }));\n          }, Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({})).toJS();\n          var newConnections = blockBluePrint.get('connections') ? blockBluePrint.get('connections').reduce(function (prev, next, key) {\n            var newID = Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_2__[\"getUuId\"])();\n            ioMap[key] = newID;\n            return prev.set(newID, next.set('id', newID).updateIn(['source', 'id', 'block_id'], function (sourceBlockID) {\n              return ioMap[sourceBlockID];\n            }).updateIn(['target', 'id', 'block_id'], function (targetBlockID) {\n              return ioMap[targetBlockID];\n            }));\n          }, Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({})).toJS() : {};\n          var body = {\n            block_ids: Object.keys(newBlocks),\n            blocks: newBlocks,\n            component_id: blockBluePrint.get('component_id'),\n            connection_ids: Object.keys(newConnections),\n            connections: newConnections,\n            description: blockBluePrint.get('description'),\n            id: Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_2__[\"getUuId\"])(),\n            name: newName || \"stack_\".concat(Date.now()),\n            type: blockBluePrint.get('group_name'),\n            ui_param: {\n              position: newStackPosition\n            }\n          };\n\n          var cb = function cb(newReducer) {\n            _this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_ADD_STACK\"],\n              body: body,\n              params: _objectSpread({}, _this.props.routeProps.match.params, {\n                modelId: _this.props.subBlockView.get('componentID') && !_this.props.subBlockView.get('readOnly') ? _this.props.subBlockView.get('componentID') : _this.props.routeProps.match.params.modelId\n              }),\n              dispatch: _this.props.dispatch\n            }));\n\n            var _getTransformedModelT = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getTransformedModelTemplate\"])({\n              template: Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({\n                blocks: newBlocks,\n                connections: newConnections\n              })\n            }),\n                Blocks = _getTransformedModelT.Blocks,\n                Operators = _getTransformedModelT.Operators,\n                Template = _getTransformedModelT.Template;\n\n            var stackReducerItem = {\n              component_id: body.component_id,\n              type: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].STACK,\n              id: body.id,\n              name: body.name,\n              position: body.ui_param.position,\n              parameters: body.type === _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"stackTypes\"].HORIZONTAL ? {\n                iteration: 1\n              } : {},\n              orientationType: body.type\n            };\n            var stateReducer = newReducer.set('unsaved', true).setIn(['stacks', body.id], Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])(stackReducerItem)).mergeIn(['blocks'], Blocks).mergeIn(['operators'], Operators).mergeIn(['connectionList'], Template.get('connections'));\n\n            for (var i = 0; i < body.block_ids.length; i += 1) {\n              stateReducer = stateReducer.setIn([_ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"reducerItemTypes\"][newBlocks[body.block_ids[i]].type] || 'blocks', body.block_ids[i], 'stackID'], body.id);\n            }\n\n            if (getFinalBuilderStateReducer) {\n              getFinalBuilderStateReducer(stateReducer, saveModel);\n              return;\n            }\n\n            stateReducer = stateReducer.merge(Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({\n              showRightPane: true,\n              selectedNode: _defineProperty({}, stackReducerItem.id, stackReducerItem)\n            }));\n\n            _this.builderRef.updateStateReducer(stateReducer, function () {\n              _this.onChildSelect(stackReducerItem);\n            });\n          };\n\n          this.moveOverlappingNodes(oldStateReducer, newStackPosition, oldId, cb);\n        }\n      }, {\n        key: \"createStack\",\n        value: function createStack(rightPanelData) {\n          var _this2 = this;\n\n          var children = this.state.selectedChild.filter(function (i) {\n            return !i.get('stackID');\n          });\n          /* retrive ids and classifying them to stacks and blocks */\n\n          var req = children.reduce(function (acc, child) {\n            var prop = 'block_ids';\n\n            if (child.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].STACK) {\n              prop = 'stack_ids';\n            } else if (child.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].GROUP) {\n              prop = 'group_ids';\n            }\n\n            return _objectSpread({}, acc, _defineProperty({}, prop, [].concat(_toConsumableArray(acc[prop]), [child.get('id')])));\n          }, {\n            block_ids: [],\n            stack_ids: [],\n            group_ids: []\n          });\n\n          var body = _objectSpread({}, req, {\n            connection_ids: this.state.selectedConnections.keySeq().toJS(),\n            description: rightPanelData.description,\n            id: Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_2__[\"getUuId\"])(),\n            name: rightPanelData.name,\n            type: rightPanelData.type,\n            ui_param: {\n              position: this.state.newStackPosition\n            },\n            frameworkVersion: this.props.modelFrameworkVersion\n          });\n\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_CREATE_STACK\"],\n            body: body,\n            params: _objectSpread({}, this.props.routeProps.match.params, {\n              modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n            }),\n            dispatch: this.props.dispatch,\n            cb: function cb(_ref2) {\n              var result = _ref2.result;\n\n              if (result) {\n                var stateReducer = _this2.builderRef.state.reducer.merge({\n                  unsaved: true,\n                  selectedNode: Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({}),\n                  selectedConnection: Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({}),\n                  showRightPane: false\n                }).setIn(['stacks', body.id], Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({\n                  component_id: result.component_id,\n                  type: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].STACK,\n                  id: body.id,\n                  name: body.name,\n                  position: body.ui_param.position,\n                  parameters: body.type === _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"stackTypes\"].HORIZONTAL ? {\n                    iteration: 1\n                  } : {},\n                  orientationType: body.type,\n                  frameworkVersion: body.frameworkVersion\n                }));\n\n                for (var i = 0; i < body.block_ids.length; i += 1) {\n                  stateReducer = stateReducer.setIn([_ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"reducerItemTypes\"][_this2.state.selectedChild.getIn([body.block_ids[i], 'type'])] || 'blocks', body.block_ids[i], 'stackID'], body.id);\n                }\n\n                _this2.paperRef.updateState({\n                  selectedChild: Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({})\n                });\n\n                _this2.builderRef.updateStateReducer(stateReducer);\n\n                _this2.setState({\n                  createComplexBlockType: undefined,\n                  selectedChild: undefined,\n                  selectedConnections: undefined,\n                  newStackPosition: undefined\n                });\n\n                _this2.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"createStackSuccess\"])({\n                  item: _objectSpread({}, result, {\n                    color: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"STACK_DRAGGABLE_ITEM_COLOR\"]\n                  })\n                }));\n              } else {\n                _this2.builderRef.toggleRightPane(false);\n              }\n            }\n          }));\n        }\n      }, {\n        key: \"onCreateStackClick\",\n        value: function onCreateStackClick(selectedChild) {\n          var _this3 = this;\n\n          if (this.props.subBlockView.get('readOnly')) {\n            return false;\n          }\n\n          var connections = this.builderRef.state.reducer.get('connectionList').filter(function (connection) {\n            return selectedChild.has(connection.getIn(['sources', 0, 'id'])) && selectedChild.has(connection.getIn(['targets', 0, 'id']));\n          });\n          this.setState({\n            selectedChild: selectedChild,\n            selectedConnections: connections,\n            newStackPosition: Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getNewStackPosition\"])(selectedChild),\n            createComplexBlockType: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].STACK\n          });\n          setTimeout(function () {\n            _this3.builderRef.toggleRightPane(true);\n          });\n        }\n      }, {\n        key: \"deleteStack\",\n        value: function deleteStack(id, getFinalBuilderStateReducer) {\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_DELETE_STACK\"],\n            params: _objectSpread({}, this.props.routeProps.match.params, {\n              stackId: id,\n              modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n            }),\n            dispatch: this.props.dispatch\n          }));\n          var stateReducer = this.builderRef.state.reducer.set('unsaved', true).deleteIn(['stacks', id]);\n          stateReducer.get('blocks').merge(this.builderRef.state.reducer.get('operators')).filter(function (iItem) {\n            return iItem.get('stackID') === id;\n          }).forEach(function (iItem, key) {\n            stateReducer = _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"builderReducerFunctions\"][_commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"ACTION_DELETE_CHILD\"]](stateReducer, {\n              dragType: iItem.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].OPERATOR ? _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].OPERATOR : _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].BLOCK,\n              id: key\n            });\n          });\n\n          if (getFinalBuilderStateReducer) {\n            getFinalBuilderStateReducer(stateReducer);\n            return;\n          }\n\n          this.builderRef.updateStateReducer(stateReducer);\n        }\n      }, {\n        key: \"getStackIterationBlock\",\n        value: function getStackIterationBlock(stackListActiveIndex) {\n          var _this4 = this;\n\n          var activeChild = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.activeChild;\n          var isActiveChildHorizontalStackItem = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.state.isActiveChildHorizontalStackItem;\n          var stackListIterations = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.state.stackListIterations;\n          var postState = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : function (f) {\n            return f;\n          };\n          var borderHighlightChildren = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : this.state.borderHighlightChildren;\n          this.setState({\n            stackListActiveIndex: stackListActiveIndex,\n            isActiveChildHorizontalStackItem: isActiveChildHorizontalStackItem,\n            stackListIterations: stackListIterations,\n            borderHighlightChildren: borderHighlightChildren,\n            activeChild: activeChild.merge(Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({\n              inputs: {},\n              outputs: {},\n              parameters: {}\n            })),\n            rightPaneLoading: true,\n            // rightPaneActiveUid: '1',\n            createComplexBlockType: undefined,\n            selectedChild: undefined,\n            selectedConnections: undefined,\n            newStackPosition: undefined\n          }, function () {\n            postState();\n\n            _this4.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_GET_STACK_ITERATION_BLOCK\"],\n              params: _objectSpread({}, _this4.props.routeProps.match.params, {\n                stackId: _this4.state.activeChild.get('stackID'),\n                blockId: _this4.state.activeChild.get('id'),\n                iteration: stackListActiveIndex + 1,\n                modelId: _this4.props.subBlockView.get('componentID') && !_this4.props.subBlockView.get('readOnly') ? _this4.props.subBlockView.get('componentID') : _this4.props.routeProps.match.params.modelId\n              }),\n              dispatch: _this4.props.dispatch,\n              cb: function cb(_ref3) {\n                var result = _ref3.result;\n                var newState = {\n                  rightPaneLoading: false\n                };\n\n                if (result) {\n                  var _getTransformedModelT2 = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getTransformedModelTemplate\"])({\n                    template: Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({\n                      blocks: _defineProperty({}, result.id, result)\n                    })\n                  }),\n                      Blocks = _getTransformedModelT2.Blocks,\n                      Operators = _getTransformedModelT2.Operators;\n\n                  var activeChildType = _this4.state.activeChild.get('type');\n\n                  if (activeChildType === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"PaperChildrenTypes\"].OPERATOR) {\n                    var inputs = _this4.getInputOutput(Operators.get(result.id), 'inputs');\n\n                    var outputs = _this4.getInputOutput(Operators.get(result.id), 'outputs');\n\n                    var parameters = _this4.getParameters(Operators.get(result.id));\n\n                    newState.activeChild = _this4.state.activeChild.merge(Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({\n                      inputs: inputs,\n                      outputs: outputs,\n                      parameters: parameters,\n                      name: result.name,\n                      scopes: result.scopes\n                    }));\n                  } else {\n                    var _inputs = _this4.getInputOutput(Blocks.get(result.id), 'inputs');\n\n                    var _outputs = _this4.getInputOutput(Blocks.get(result.id), 'outputs');\n\n                    var _parameters = _this4.getParameters(Blocks.get(result.id));\n\n                    newState.activeChild = _this4.state.activeChild.merge(Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])({\n                      inputs: _inputs,\n                      outputs: _outputs,\n                      parameters: _parameters,\n                      name: result.name,\n                      scopes: result.scopes\n                    }));\n                  }\n                }\n\n                _this4.setState(newState);\n              }\n            }));\n          });\n        }\n      }, {\n        key: \"onStackDetailsUpdate\",\n        value: function onStackDetailsUpdate(stackId, key, value) {\n          switch (key) {\n            case 'name':\n              {\n                this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n                  NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_RENAME_STACK\"],\n                  body: value,\n                  params: _objectSpread({}, this.props.routeProps.match.params, {\n                    stackId: stackId,\n                    modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n                  }),\n                  dispatch: this.props.dispatch\n                }));\n                this.setState({\n                  activeChild: this.state.activeChild.set(key, value)\n                });\n                this.builderRef.updateStateReducer(this.builderRef.state.reducer.set('unsaved', true).setIn(['stacks', stackId, key], value));\n                break;\n              }\n\n            case 'iteration':\n              {\n                this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n                  NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_UPDATE_STACK_ITERATION\"],\n                  body: value,\n                  params: _objectSpread({}, this.props.routeProps.match.params, {\n                    stackId: stackId,\n                    modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n                  }),\n                  dispatch: this.props.dispatch\n                }));\n                this.setState({\n                  activeChild: this.state.activeChild.setIn(['parameters', key], value)\n                });\n                this.builderRef.updateStateReducer(this.builderRef.state.reducer.set('unsaved', true).setIn(['stacks', stackId, 'parameters', key], value));\n                break;\n              }\n\n            default:\n              {\n                this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n                  NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_ADD_STACK_PARAMETER\"],\n                  body: {\n                    key: key,\n                    value: value\n                  },\n                  params: _objectSpread({}, this.props.routeProps.match.params, {\n                    stackId: stackId,\n                    modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n                  }),\n                  dispatch: this.props.dispatch\n                }));\n                this.setState({\n                  activeChild: this.state.activeChild.setIn(['parameters', key], value)\n                });\n                this.builderRef.updateStateReducer(this.builderRef.state.reducer.set('unsaved', true).setIn(['stacks', stackId, 'parameters', key], value));\n                break;\n              }\n          }\n        }\n      }, {\n        key: \"moveStack\",\n        value: function moveStack(obj) {\n          var stateReducer = this.builderRef.state.reducer.set('unsaved', true);\n\n          var _getMovedStackPositio2 = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_7__[\"getMovedStackPositionAndDeltas\"])({\n            oldPosition: stateReducer.getIn(['stacks', obj.id, 'position']).toJS(),\n            newPosition: obj.newPosition\n          }),\n              dx = _getMovedStackPositio2.dx,\n              dy = _getMovedStackPositio2.dy,\n              dx1 = _getMovedStackPositio2.dx1,\n              dy0 = _getMovedStackPositio2.dy0,\n              dy1 = _getMovedStackPositio2.dy1,\n              newStackPosition = _getMovedStackPositio2.newStackPosition;\n\n          stateReducer = stateReducer.setIn(['stacks', obj.id, 'position'], Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])(newStackPosition));\n          var stackItemsUIParamMap = {};\n          stateReducer.get('blocks').merge(stateReducer.get('operators')).filter(function (iItem) {\n            return iItem.get('stackID') === obj.id;\n          }).forEach(function (iItem, key) {\n            stateReducer = stateReducer.updateIn([_ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"reducerItemTypes\"][iItem.get('type')] || 'blocks', key, 'position'], function (oldPosition) {\n              var newPosition = {\n                x: oldPosition.get('x') + dx,\n                y: oldPosition.get('y') + dy,\n                x1: oldPosition.get('x1') + dx1,\n                y0: oldPosition.get('y0') + dy0,\n                y1: oldPosition.get('y1') + dy1\n              };\n              stackItemsUIParamMap[key] = {\n                position: newPosition,\n                group_name: iItem.get('group_name'),\n                description: iItem.get('description'),\n                color: iItem.get('color')\n              };\n              return Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"fromJS\"])(newPosition);\n            });\n          });\n\n          if (this.state.activeChild.get('id')) {\n            this.setState({\n              activeChild: this.state.activeChild.set('position', stateReducer.getIn([_ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"reducerItemTypes\"][this.state.activeChild.get('type')] || 'blocks', this.state.activeChild.get('id'), 'position']))\n            });\n          }\n\n          this.builderRef.updateStateReducer(stateReducer);\n          var stackReducerItem = stateReducer.getIn(['stacks', obj.id]);\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_MOVE_BLOCK\"],\n            body: {\n              position: newStackPosition,\n              group_name: stackReducerItem.get('group_name'),\n              description: stackReducerItem.get('description'),\n              color: stackReducerItem.get('color')\n            },\n            params: _objectSpread({}, this.props.routeProps.match.params, {\n              modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId,\n              stackId: obj.id\n            }),\n            dispatch: this.props.dispatch\n          }));\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_5__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"ACTION_MOVE_BLOCK\"],\n            body: stackItemsUIParamMap,\n            params: _objectSpread({}, this.props.routeProps.match.params, {\n              modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n            }),\n            dispatch: this.props.dispatch\n          }));\n        }\n      }]);\n\n      return Base;\n    }(inhertClass)\n  );\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (StashClass);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/StackClass.js\n");

/***/ }),

/***/ "./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/index.js":
/*!**********************************************************************************!*\
  !*** ./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/index.js ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _BaseClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BaseClass */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/BaseClass.js\");\n/* harmony import */ var _BlockClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./BlockClass */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/BlockClass.js\");\n/* harmony import */ var _BlueprintClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BlueprintClass */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/BlueprintClass.js\");\n/* harmony import */ var _ConnectionClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ConnectionClass */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/ConnectionClass.js\");\n/* harmony import */ var _GroupClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./GroupClass */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/GroupClass.js\");\n/* harmony import */ var _PropertiesClass__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./PropertiesClass */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/PropertiesClass.js\");\n/* harmony import */ var _StackClass__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./StackClass */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/StackClass.js\");\n\n\n\n\n\n\n\n\n\nvar MergeClasses = function MergeClasses() {\n  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {\n    classes[_key] = arguments[_key];\n  }\n\n  return classes.reduce(function (prev, curr) {\n    return function () {\n      return curr(prev());\n    };\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (MergeClasses(_BaseClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"], _BlockClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"], _BlueprintClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"], _ConnectionClass__WEBPACK_IMPORTED_MODULE_4__[\"default\"], _GroupClass__WEBPACK_IMPORTED_MODULE_5__[\"default\"], _PropertiesClass__WEBPACK_IMPORTED_MODULE_6__[\"default\"], _StackClass__WEBPACK_IMPORTED_MODULE_7__[\"default\"])());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHBzL01vZGVsL3NyYy9wYWdlcy9Nb2RlbFBhZ2UvcGFnZXMvTW9kZWxEZXNpZ25lci9Nb2RlbENsYXNzZXMvaW5kZXguanM/OWRkZiJdLCJuYW1lcyI6WyJNZXJnZUNsYXNzZXMiLCJjbGFzc2VzIiwicmVkdWNlIiwicHJldiIsImN1cnIiLCJCYXNlQ2xhc3MiLCJCbG9ja0NsYXNzIiwiQmx1ZXByaW50Q2xhc3MiLCJDb25uZWN0aW9uQ2xhc3MiLCJHcm91cENsYXNzIiwiUGFyYW1ldGVyc0NsYXNzIiwiU3RhY2tDbGFzcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQU1BLFlBQVksR0FBRyxTQUFmQSxZQUFlLEdBQWdCO0FBQUEsb0NBQVpDLE9BQVk7QUFBWkEsV0FBWTtBQUFBOztBQUNuQyxTQUFPQSxPQUFPLENBQUNDLE1BQVIsQ0FBZSxVQUFDQyxJQUFELEVBQU9DLElBQVAsRUFBZ0I7QUFDcEMsV0FBTztBQUFBLGFBQU1BLElBQUksQ0FBQ0QsSUFBSSxFQUFMLENBQVY7QUFBQSxLQUFQO0FBQ0QsR0FGTSxDQUFQO0FBR0QsQ0FKRDs7QUFNZUgsMkVBQVksQ0FBQ0ssa0RBQUQsRUFDekJDLG1EQUR5QixFQUV6QkMsdURBRnlCLEVBR3pCQyx3REFIeUIsRUFJekJDLG1EQUp5QixFQUt6QkMsd0RBTHlCLEVBTXpCQyxtREFOeUIsQ0FBWixFQUFmIiwiZmlsZSI6Ii4vYXBwcy9Nb2RlbC9zcmMvcGFnZXMvTW9kZWxQYWdlL3BhZ2VzL01vZGVsRGVzaWduZXIvTW9kZWxDbGFzc2VzL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBCYXNlQ2xhc3MgZnJvbSAnLi9CYXNlQ2xhc3MnO1xuaW1wb3J0IEJsb2NrQ2xhc3MgZnJvbSAnLi9CbG9ja0NsYXNzJztcbmltcG9ydCBCbHVlcHJpbnRDbGFzcyBmcm9tICcuL0JsdWVwcmludENsYXNzJztcbmltcG9ydCBDb25uZWN0aW9uQ2xhc3MgZnJvbSAnLi9Db25uZWN0aW9uQ2xhc3MnO1xuaW1wb3J0IEdyb3VwQ2xhc3MgZnJvbSAnLi9Hcm91cENsYXNzJztcbmltcG9ydCBQYXJhbWV0ZXJzQ2xhc3MgZnJvbSAnLi9Qcm9wZXJ0aWVzQ2xhc3MnO1xuaW1wb3J0IFN0YWNrQ2xhc3MgZnJvbSAnLi9TdGFja0NsYXNzJztcblxuY29uc3QgTWVyZ2VDbGFzc2VzID0gKC4uLmNsYXNzZXMpID0+IHtcbiAgcmV0dXJuIGNsYXNzZXMucmVkdWNlKChwcmV2LCBjdXJyKSA9PiB7XG4gICAgcmV0dXJuICgpID0+IGN1cnIocHJldigpKTtcbiAgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBNZXJnZUNsYXNzZXMoQmFzZUNsYXNzLFxuICBCbG9ja0NsYXNzLFxuICBCbHVlcHJpbnRDbGFzcyxcbiAgQ29ubmVjdGlvbkNsYXNzLFxuICBHcm91cENsYXNzLFxuICBQYXJhbWV0ZXJzQ2xhc3MsXG4gIFN0YWNrQ2xhc3MpKCk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/index.js\n");

/***/ }),

/***/ "./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.js":
/*!*****************************************************************************!*\
  !*** ./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.js ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _rzt_eva__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @rzt/eva */ \"./node_modules/@rzt/eva/build/index.js\");\n/* harmony import */ var _rzt_eva__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_rzt_eva__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _rzt_eva_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @rzt/eva-utils */ \"./node_modules/@rzt/eva-utils/dist/index.js\");\n/* harmony import */ var _rzt_eva_utils__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_rzt_eva_utils__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _commons_src_index_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../commons/src/index.actions */ \"./commons/src/index.actions.js\");\n/* harmony import */ var _commons_src_index_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../../commons/src/index.components */ \"./commons/src/index.components.js\");\n/* harmony import */ var _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../../commons/src/index.constants */ \"./commons/src/index.constants.js\");\n/* harmony import */ var _commons_src_index_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../../commons/src/index.utils */ \"./commons/src/index.utils.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! immutable */ \"./node_modules/immutable/dist/immutable.js\");\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var react_dnd__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react-dnd */ \"./node_modules/react-dnd/lib/index.js\");\n/* harmony import */ var react_dnd__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(react_dnd__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var react_dnd_html5_backend__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react-dnd-html5-backend */ \"./node_modules/react-dnd-html5-backend/lib/index.js\");\n/* harmony import */ var react_dnd_html5_backend__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(react_dnd_html5_backend__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var _routeConstants__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../routeConstants */ \"./apps/Model/src/routeConstants.js\");\n/* harmony import */ var _ModelsList_ModelsListPage_constants__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../ModelsList/ModelsListPage.constants */ \"./apps/Model/src/pages/ModelsList/ModelsListPage.constants.js\");\n/* harmony import */ var _components_ModelBuilderPopup_ModelBuilderPopup__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/ModelBuilderPopup/ModelBuilderPopup */ \"./apps/Model/src/pages/ModelPage/components/ModelBuilderPopup/ModelBuilderPopup.js\");\n/* harmony import */ var _ModelPage_actions__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../ModelPage.actions */ \"./apps/Model/src/pages/ModelPage/ModelPage.actions.js\");\n/* harmony import */ var _ModelPage_constants__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../ModelPage.constants */ \"./apps/Model/src/pages/ModelPage/ModelPage.constants.js\");\n/* harmony import */ var _designerHelper_components_AffectedEntitiesPopup_AffectedEntitiesPopup__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../designerHelper/components/AffectedEntitiesPopup/AffectedEntitiesPopup */ \"./apps/Model/src/pages/ModelPage/pages/designerHelper/components/AffectedEntitiesPopup/AffectedEntitiesPopup.js\");\n/* harmony import */ var _designerHelper_components_ModelSecondaryHeader_ModelSecondaryHeader__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../designerHelper/components/ModelSecondaryHeader/ModelSecondaryHeader */ \"./apps/Model/src/pages/ModelPage/pages/designerHelper/components/ModelSecondaryHeader/ModelSecondaryHeader.js\");\n/* harmony import */ var _designerHelper_ModelDesigner_css__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../designerHelper/ModelDesigner.css */ \"./apps/Model/src/pages/ModelPage/pages/designerHelper/ModelDesigner.css\");\n/* harmony import */ var _designerHelper_ModelDesigner_css__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_designerHelper_ModelDesigner_css__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var _components_CreateGroupTab_CreateGroupTab__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./components/CreateGroupTab/CreateGroupTab */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/CreateGroupTab/CreateGroupTab.js\");\n/* harmony import */ var _components_CreateStackTab_CreateStackTab__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./components/CreateStackTab/CreateStackTab */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/CreateStackTab/CreateStackTab.js\");\n/* harmony import */ var _components_InputsTab__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./components/InputsTab */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/InputsTab/index.js\");\n/* harmony import */ var _components_ParametersTab__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./components/ParametersTab */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/ParametersTab/index.js\");\n/* harmony import */ var _components_ScopesTab_ScopesTab__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./components/ScopesTab/ScopesTab */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/ScopesTab/ScopesTab.js\");\n/* harmony import */ var _components_StackDetailsTab_StackDetailsTab__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./components/StackDetailsTab/StackDetailsTab */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/StackDetailsTab/StackDetailsTab.js\");\n/* harmony import */ var _components_StackList_StackList__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./components/StackList/StackList */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/StackList/StackList.js\");\n/* harmony import */ var _ModelClasses__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./ModelClasses */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelClasses/index.js\");\n/* harmony import */ var _ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./ModelDesigner.actions */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.actions.js\");\n/* harmony import */ var _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./ModelDesigner.constants */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.constants.js\");\n/* harmony import */ var _ModelDesigner_selector__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./ModelDesigner.selector */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.selector.js\");\n/* harmony import */ var _ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./ModelDesigner.utils */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.utils.js\");\nvar _dec, _class, _class2, _temp;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-unused-expressions,react/sort-comp,camelcase,\n no-param-reassign,consistent-return,no-underscore-dangle */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar rightPaneUIDsForTabs = {\n  PARAMETERS: '1',\n  INPUTS: '2',\n  OUTPUTS: '3',\n  SCOPES: '4',\n  INFO: '5',\n  NODE_INFO: '6',\n  CREATE_STACK: '7',\n  CREATE_GROUP: '8',\n  UPDATE_OR_DELETE_ITEM: '9',\n  STACK_DETAILS: '10'\n};\nvar ModelDesigner = (_dec = Object(react_dnd__WEBPACK_IMPORTED_MODULE_11__[\"DragDropContext\"])(react_dnd_html5_backend__WEBPACK_IMPORTED_MODULE_12___default.a), _dec(_class = (_temp = _class2 =\n/*#__PURE__*/\nfunction (_BaseClass) {\n  _inherits(ModelDesigner, _BaseClass);\n\n  function ModelDesigner(props, context) {\n    var _this;\n\n    _classCallCheck(this, ModelDesigner);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModelDesigner).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"showTransferPopup\", function (e, activeNodeId) {\n      var showPopup = function showPopup() {\n        return _this.props.dispatch(Object(_ModelPage_actions__WEBPACK_IMPORTED_MODULE_18__[\"showAndHidePopUp\"])({\n          type: 'TRANSFER_WEIGHTS',\n          show: true,\n          activeNodeId: activeNodeId,\n          onDoneClick: _this.onTransferWeightsDoneClick\n        }));\n      };\n\n      if (_this.state.builderUnsaved) {\n        _this.onSaveClick(e, showPopup);\n      } else {\n        showPopup();\n      }\n    });\n\n    _this.state = {\n      activeScopes: Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({}),\n      showRightPane: false,\n      rightPaneActiveUid: '1',\n      showEditorPopup: false,\n      showRightPaneTabContent: true,\n      activeChild: Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"Map\"])(),\n      isActiveChildHorizontalStackItem: false,\n      stackListActiveIndex: 0,\n      stackListIterations: 1,\n      showSharedWeightsTooltips: {},\n      affectedEntitiesPopup: {},\n      borderHighlightChildren: Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])([]),\n      builderUnsaved: false,\n      infoTabInstanceNameError: '',\n      dualJSONEditorPopup: {\n        show: false\n      }\n    };\n    _this.sharedWeightsIconRefs = {};\n    _this.eaiId = _this.props.routeProps.match.params.Aid;\n    _this.modelId = _this.props.routeProps.match.params.modelId;\n    _this.getInputOutput = _this.getInputOutput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onEditorPopupToggle = _this.onEditorPopupToggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setShowRightPane = _this.setShowRightPane.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChildUnselect = _this.onChildUnselect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.switchRightPaneTabs = _this.switchRightPaneTabs.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateBlockParameter = _this.updateBlockParameter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateBlockParameterSuccess = _this.updateBlockParameterSuccess.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateIOParameter = _this.updateIOParameter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addIO = _this.addIO.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteIO = _this.deleteIO.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addChild = _this.addChild.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChildSelect = _this.onChildSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onUpdateIOParameterSuccess = _this.onUpdateIOParameterSuccess.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onAddIOSuccess = _this.onAddIOSuccess.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onDeleteIOSuccess = _this.onDeleteIOSuccess.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.transformIOAndUpdate = _this.transformIOAndUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getParameters = _this.getParameters.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showPopup = _this.showPopup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onRemoveScope = _this.onRemoveScope.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onAddScope = _this.onAddScope.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onCreateCodeBlock = _this.onCreateCodeBlock.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onRenameBlock = _this.onRenameBlock.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getBlockBluePrint = _this.getBlockBluePrint.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getRightPaneData = _this.getRightPaneData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addParameter = _this.addParameter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteParameter = _this.deleteParameter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateBlockOrOperator = _this.updateBlockOrOperator.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onCreateStackClick = _this.onCreateStackClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onCreateGroupClick = _this.onCreateGroupClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getNewPositionOnIOChange = _this.getNewPositionOnIOChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createStack = _this.createStack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addStack = _this.addStack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addGroup = _this.addGroup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteStack = _this.deleteStack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createGroup = _this.createGroup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onStackDetailsUpdate = _this.onStackDetailsUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getStackIterationBlock = _this.getStackIterationBlock.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onCascadeDownClick = _this.onCascadeDownClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.moveChild = _this.moveChild.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteChild = _this.deleteChild.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addConnectionToChild = _this.addConnectionToChild.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onRenameGroup = _this.onRenameGroup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onNodeInfoClick = _this.onNodeInfoClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getCustomContextMenuItems = _this.getCustomContextMenuItems.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createSharedGroup = _this.createSharedGroup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addToSharedGroup = _this.addToSharedGroup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onBlockDoubleClick = _this.onBlockDoubleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onLeftPaneItemInfoTabEditClick = _this.onLeftPaneItemInfoTabEditClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onLeftPaneItemInfoTabDeleteClick = _this.onLeftPaneItemInfoTabDeleteClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onUpdateItemClickInTab = _this.onUpdateItemClickInTab.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onDeleteItemClickInTab = _this.onDeleteItemClickInTab.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onBreadCrumbClick = _this.onBreadCrumbClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSaveClick = _this.onSaveClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.moveStack = _this.moveStack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.duplicateChild = _this.duplicateChild.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteGroup = _this.deleteGroup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.isBlockErrored = _this.isBlockErrored.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.canDrag = _this.canDrag.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.isInParentDragComponent = _this.isInParentDragComponent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getHighlightChildren = _this.getHighlightChildren.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onBuilderSaveStateChange = _this.onBuilderSaveStateChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getBlockEditErrors = _this.getBlockEditErrors.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showDualJSONEditorPopup = _this.showDualJSONEditorPopup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onDualJSONEditorPopupDoneClick = _this.onDualJSONEditorPopupDoneClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onDualJSONEditorPopupCancelClick = _this.onDualJSONEditorPopupCancelClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clearBuilderPaneAndNode = _this.clearBuilderPaneAndNode.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTransferWeightsClick = _this.onTransferWeightsClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateBlocksInBE = _this.updateBlocksInBE.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.moveOverlappingNodes = _this.moveOverlappingNodes.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTransferWeightsDoneClick = _this.onTransferWeightsDoneClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    /* Fetch initial data */\n\n    _this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n      NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_GET_DESIGNER_MODEL_DETAILS\"],\n      shouldLoadNodes: true\n    }));\n\n    var _this$props = _this.props,\n        dispatch = _this$props.dispatch,\n        _this$props$routeProp = _this$props.routeProps.match.params,\n        Aid = _this$props$routeProp.Aid,\n        modelId = _this$props$routeProp.modelId;\n    dispatch(Object(_ModelPage_actions__WEBPACK_IMPORTED_MODULE_18__[\"getModelName\"])({\n      Aid: Aid,\n      modelId: modelId\n    }));\n    return _this;\n  }\n\n  _createClass(ModelDesigner, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var dispatch = this.props.dispatch;\n\n      var _searchStrToQueryObj = Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_5__[\"searchStrToQueryObj\"])(this.props.routeProps.location.search),\n          pid = _searchStrToQueryObj.pid;\n\n      if (pid) {\n        dispatch(Object(_ModelPage_actions__WEBPACK_IMPORTED_MODULE_18__[\"getPipelineDetails\"])({\n          pipelineId: pid,\n          eaiId: this.eaiId\n        }));\n      }\n    }\n  }, {\n    key: \"onChildUnselect\",\n    value: function onChildUnselect() {\n      this.setState({\n        showRightPane: false,\n        refs: null,\n        borderHighlightChildren: Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])([]),\n        activeChild: Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({})\n      });\n    }\n  }, {\n    key: \"onEditorPopupToggle\",\n    value: function onEditorPopupToggle(visibility) {\n      if (visibility !== this.state.showEditorPopup) {\n        this.setState({\n          showEditorPopup: visibility\n        });\n      }\n    }\n  }, {\n    key: \"setShowRightPane\",\n    value: function setShowRightPane(visibility) {\n      this.setState({\n        showRightPane: visibility,\n        refs: null\n      });\n    }\n  }, {\n    key: \"switchRightPaneTabs\",\n    value: function switchRightPaneTabs(activeItem) {\n      this.setState({\n        rightPaneActiveUid: activeItem.id\n      });\n    }\n  }, {\n    key: \"onNodeInfoClick\",\n    value: function onNodeInfoClick(item) {\n      if (item) {\n        this.setState({\n          activeChild: item.set('isNode', true),\n          createComplexBlockType: undefined\n        });\n\n        if (!this.builderRef.state.reducer.get('showRightPane')) {\n          this.builderRef.updateStateReducer(this.builderRef.state.reducer.set('selectedNode', Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])(_defineProperty({}, item.get('id'), _objectSpread({}, item.toJS())))).set('showRightPane', true));\n        } else {\n          this.builderRef.updateStateReducer(this.builderRef.state.reducer.set('selectedNode', Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])(_defineProperty({}, item.get('id'), _objectSpread({}, item.toJS())))));\n        }\n      }\n    }\n  }, {\n    key: \"showPopup\",\n    value: function showPopup(e, block, edit) {\n      var _this2 = this;\n\n      var label = block.get('label');\n      var type = block.get('type');\n      this.createBlockType = type;\n      var dispatch = this.props.dispatch;\n      var category = label;\n      var displayTitle = label;\n      var tabList = _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"CODE_BLOCK_TAB_LIST\"];\n\n      if (type === _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"BLOCK_TYPES\"].COST) {\n        displayTitle = 'CUSTOM COST FUNCTION';\n        var newTabList = JSON.parse(JSON.stringify(tabList));\n        newTabList[1].showIsOptionalForIO = false;\n        newTabList[1].onlyOne = true;\n        tabList = newTabList;\n      }\n\n      var operation = 'CREATE';\n\n      var onDone = function onDone(event, data) {\n        return _this2.onCreateCodeBlock({\n          data: data\n        });\n      };\n\n      if (edit) {\n        operation = 'EDIT';\n\n        onDone = function onDone(event, data) {\n          return _this2.onCreateCodeBlock({\n            data: data,\n            operation: 'EDIT',\n            componentID: block.get('component_id')\n          });\n        };\n\n        displayTitle = label;\n        category = block.get('grandParentLabel');\n      }\n\n      var popData = {\n        type: 'CODE_BLOCK',\n        show: true,\n        headerText: \"\".concat(operation, \" \").concat(displayTitle),\n        onCancel: function onCancel() {\n          _this2.props.dispatch(Object(_ModelPage_actions__WEBPACK_IMPORTED_MODULE_18__[\"showAndHidePopUp\"])({\n            show: false\n          }));\n\n          _this2.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"resetEditBlockState\"])());\n        },\n        onDone: onDone,\n        tabList: tabList,\n        notification: function notification(data) {\n          return dispatch(Object(_commons_src_index_actions__WEBPACK_IMPORTED_MODULE_2__[\"showToast\"])(data));\n        }\n      };\n      dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"getCustomCodeDependencies\"])({\n        popData: popData,\n        category: category,\n        operation: operation,\n        blockType: type,\n        activeChild: this.state.activeChild\n      }));\n    }\n  }, {\n    key: \"onCreateCodeBlock\",\n    value: function onCreateCodeBlock(_ref) {\n      var _this3 = this;\n\n      var data = _ref.data,\n          operation = _ref.operation,\n          componentID = _ref.componentID;\n      var _this$props2 = this.props,\n          dispatch = _this$props2.dispatch,\n          params = _this$props2.routeProps.match.params;\n      dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n        NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_CREATE_CODE_BLOCK\"],\n        data: data,\n        operation: operation,\n        componentID: componentID,\n        params: _objectSpread({}, params, {\n          blockType: this.createBlockType\n        }),\n        cb: function cb() {\n          if (String(operation).toLowerCase() === 'edit') {\n            /* Need to reload blocks since we have to\n             * highlight blocks which are updated in the builder\n             * Once auto save is implemented this can be removed\n             * */\n            _this3.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_GET_DESIGNER_MODEL_DETAILS\"]\n            }));\n          }\n\n          _this3.builderRef.updateStateReducer(_this3.builderRef.state.reducer.merge(Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({\n            showRightPane: false,\n            selectedNode: {},\n            popup: {\n              show: false\n            }\n          })));\n        }\n      }));\n    }\n  }, {\n    key: \"getRightPaneData\",\n    value: function getRightPaneData() {\n      var _this4 = this;\n\n      var _this$props3 = this.props,\n          scopes = _this$props3.scopes,\n          validations = _this$props3.validations,\n          nodePaths = _this$props3.nodePaths,\n          nodes = _this$props3.nodes;\n      var _this$state = this.state,\n          activeChild = _this$state.activeChild,\n          createComplexBlockType = _this$state.createComplexBlockType,\n          rightPaneLoading = _this$state.rightPaneLoading;\n      var activeChildId = activeChild.get('id');\n      var filteredScopes = scopes.keySeq().filter(function (scope) {\n        return !scopes.get(scope).includes(activeChildId);\n      });\n\n      if (createComplexBlockType === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].STACK) {\n        return [{\n          title: 'Create Stack',\n          id: rightPaneUIDsForTabs.CREATE_STACK,\n          content: react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_components_CreateStackTab_CreateStackTab__WEBPACK_IMPORTED_MODULE_24__[\"default\"], {\n            key: \"\".concat(activeChild.get('id'), \"-createStackTab\"),\n            onCreate: this.createStack,\n            onCancel: function onCancel() {\n              _this4.builderRef.toggleRightPane(false);\n\n              _this4.setState({\n                createComplexBlockType: undefined,\n                selectedChild: undefined,\n                selectedConnections: undefined,\n                newStackPosition: undefined\n              });\n            }\n          })\n        }];\n      }\n\n      if (createComplexBlockType === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].GROUP) {\n        return [{\n          title: 'Create Group',\n          id: rightPaneUIDsForTabs.CREATE_GROUP,\n          content: react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_components_CreateGroupTab_CreateGroupTab__WEBPACK_IMPORTED_MODULE_23__[\"default\"], {\n            key: \"\".concat(activeChild.get('id'), \"-createGroupTab\"),\n            onCreate: this.createGroup,\n            onCancel: function onCancel() {\n              _this4.builderRef.toggleRightPane(false);\n\n              _this4.setState({\n                createComplexBlockType: undefined,\n                selectedChild: undefined,\n                selectedConnections: undefined,\n                newStackPosition: undefined\n              });\n            }\n          })\n        }];\n      }\n\n      if (activeChild.get('isNode')) {\n        var infoTabItems = [{\n          renderType: 'TEXT',\n          label: 'Name',\n          value: activeChild.get('label') || activeChild.get('internal_name')\n        }, {\n          renderType: 'TEXT',\n          label: 'Type',\n          value: activeChild.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].STACK ? \"\".concat(activeChild.get('grandParentLabel').toLowerCase(), \" (\").concat(activeChild.get('group_name').toLocaleLowerCase(), \")\") : activeChild.get('grandParentLabel'),\n          classes: {\n            value: _designerHelper_ModelDesigner_css__WEBPACK_IMPORTED_MODULE_22___default.a.textCapitalize\n          }\n        }, {\n          renderType: 'TEXT',\n          label: 'Description',\n          value: activeChild.get('description'),\n          multiLine: true\n        }];\n        var showMoreDetails = activeChild.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].GROUP || activeChild.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].STACK || activeChild.get('customCreatedItem');\n\n        if (showMoreDetails) {\n          var createdOn = activeChild.get('created_on');\n          var modifiedOn = activeChild.get('modified_on');\n          infoTabItems = infoTabItems.concat([{\n            renderType: 'CUSTOM',\n            item: react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(\"hr\", {\n              style: {\n                marginTop: '20px',\n                marginBottom: '20px',\n                opacity: '0.5'\n              }\n            })\n          }, {\n            renderType: 'TEXT',\n            label: 'Created By',\n            value: activeChild.getIn(['created_by', 'message'])\n          }, {\n            renderType: 'TEXT',\n            label: 'Created On',\n            value: createdOn ? Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_5__[\"getDateWithAlphaFromISO\"])(createdOn) : '--'\n          }, {\n            renderType: 'TEXT',\n            label: 'Modified By',\n            value: activeChild.getIn(['created_by', 'message'])\n          }, {\n            renderType: 'TEXT',\n            label: 'Modified On',\n            value: modifiedOn ? Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_5__[\"getDateWithAlphaFromISO\"])(modifiedOn) : '--'\n          }]);\n\n          if (activeChild.get('editable')) {\n            infoTabItems.push({\n              renderType: 'CUSTOM',\n              item: react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(\"div\", {\n                className: _designerHelper_ModelDesigner_css__WEBPACK_IMPORTED_MODULE_22___default.a.nodeInfoTabActionButtons\n              }, react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n                className: classnames__WEBPACK_IMPORTED_MODULE_6___default()(_designerHelper_ModelDesigner_css__WEBPACK_IMPORTED_MODULE_22___default.a.nodeInfoTabEditButton, _designerHelper_ModelDesigner_css__WEBPACK_IMPORTED_MODULE_22___default.a.nodeInfoTabButton),\n                onClick: this.onLeftPaneItemInfoTabEditClick\n              }, 'Edit'), react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n                className: _designerHelper_ModelDesigner_css__WEBPACK_IMPORTED_MODULE_22___default.a.nodeInfoTabButton,\n                onClick: this.onLeftPaneItemInfoTabDeleteClick\n              }, 'Delete'))\n            });\n          }\n        }\n\n        var _rightPaneData = [{\n          title: 'Info',\n          id: rightPaneUIDsForTabs.NODE_INFO,\n          content: react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_3__[\"InfoTab\"], {\n            key: \"\".concat(activeChild.get('id'), \"-node-info-tab\"),\n            items: infoTabItems,\n            loading: rightPaneLoading\n          })\n        }];\n\n        if (!_rightPaneData.some(function (iItem) {\n          return iItem.id === _this4.state.rightPaneActiveUid;\n        })) {\n          this.setState({\n            rightPaneActiveUid: _rightPaneData[0].id\n          });\n        }\n\n        return _rightPaneData;\n      }\n\n      if (activeChild.get('markModified') && !activeChild.get('stackID')) {\n        var updatedOn = activeChild.get('modifiedOn');\n\n        var _createdOn = activeChild.get('created_on') || activeChild.get('createdOn');\n\n        var deletedOn = activeChild.get('deletedOn');\n        var action = 'updated';\n        var labelValue = {\n          'Updated By': activeChild.get('modifiedBy'),\n          'Updated On': updatedOn ? Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_5__[\"getDateWithAlphaFromISO\"])(updatedOn) : undefined,\n          'Created By': activeChild.get('modifiedBy'),\n          'Created On': updatedOn ? Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_5__[\"getDateWithAlphaFromISO\"])(_createdOn) : undefined\n        };\n\n        if (activeChild.get('isDeleted')) {\n          action = 'deleted';\n          labelValue = {\n            'Deleted By': activeChild.get('deletedBy'),\n            'Deleted On': deletedOn ? Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_5__[\"getDateWithAlphaFromISO\"])(deletedOn) : undefined\n          };\n        }\n\n        var _rightPaneData2 = [{\n          title: 'Info',\n          id: rightPaneUIDsForTabs.UPDATE_OR_DELETE_ITEM,\n          content: react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_3__[\"InfoTab\"], {\n            key: \"\".concat(activeChild.get('id'), \"-update-or-delete-item-tab\"),\n            labelValue: labelValue,\n            updatedByKey: action === 'deleted' ? 'Deleted By' : 'Updated By',\n            onClick: function onClick(updated) {\n              if (updated) {\n                _this4.onUpdateItemClickInTab();\n              } else {\n                _this4.onDeleteItemClickInTab();\n              }\n            },\n            showUpdateDeleteButtonsForInstance: !this.props.subBlockView.get('readOnly'),\n            noteItemText: String(activeChild.get('type')).toLowerCase(),\n            action: action\n          })\n        }];\n\n        if (!_rightPaneData2.some(function (iItem) {\n          return iItem.id === _this4.state.rightPaneActiveUid;\n        })) {\n          this.setState({\n            rightPaneActiveUid: _rightPaneData2[0].id\n          });\n        }\n\n        return _rightPaneData2;\n      }\n\n      var blockBluePrint = Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({});\n\n      if (activeChild.get('type')) {\n        blockBluePrint = this.getBlockBluePrint({\n          type: activeChild.get('type'),\n          componentID: activeChild.get('component_id')\n        });\n\n        if (!blockBluePrint) {\n          blockBluePrint = Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({});\n        }\n      }\n\n      if (activeChild.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].GROUP) {\n        var _rightPaneData3 = [{\n          title: 'Info',\n          id: rightPaneUIDsForTabs.INFO,\n          content: react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_3__[\"InfoTab\"], {\n            key: \"\".concat(activeChild.get('id'), \"-infoTab\"),\n            items: [{\n              renderType: 'INPUT_TEXT',\n              label: 'Instance Name',\n              value: activeChild.get('name'),\n              onBlur: function onBlur(e, val) {\n                var correctVal = val.trim();\n\n                if (correctVal !== activeChild.get('name')) {\n                  if (_ModelsList_ModelsListPage_constants__WEBPACK_IMPORTED_MODULE_16__[\"MODEL_NAME_REGEX\"].regex.test(correctVal)) {\n                    _this4.onRenameGroup(correctVal);\n                  } else {\n                    _this4.setState({\n                      infoTabInstanceNameError: _ModelsList_ModelsListPage_constants__WEBPACK_IMPORTED_MODULE_16__[\"MODEL_NAME_REGEX\"].message\n                    });\n                  }\n                } else if (_this4.state.infoTabInstanceNameError) {\n                  _this4.setState({\n                    infoTabInstanceNameError: ''\n                  });\n                }\n              },\n              errorMessage: this.state.infoTabInstanceNameError\n            }, {\n              renderType: 'TEXT',\n              label: 'Name',\n              value: activeChild.get('component_id') ? nodes.getIn(nodePaths.get(activeChild.get('component_id'))).get('label') : '--'\n            }, {\n              renderType: 'TEXT',\n              label: 'Type',\n              value: blockBluePrint.get('grandParentLabel')\n            }, {\n              renderType: 'TEXT',\n              label: 'Description',\n              value: blockBluePrint.get('description'),\n              multiLine: true\n            }],\n            loading: rightPaneLoading\n          })\n        }, {\n          title: 'Scopes',\n          id: rightPaneUIDsForTabs.SCOPES,\n          content: react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_components_ScopesTab_ScopesTab__WEBPACK_IMPORTED_MODULE_27__[\"default\"], {\n            key: \"\".concat(this.state.stackListActiveIndex, \"-\").concat(activeChild.get('id'), \"-scopesTab\"),\n            data: activeChild.get('scopes'),\n            scopes: filteredScopes.toJS(),\n            removeScope: function removeScope(data) {\n              return _this4.onRemoveScope(data);\n            },\n            onScopeSelect: function onScopeSelect(e, scope) {\n              return _this4.onAddScope(scope);\n            },\n            onInputChange: function onInputChange(e, text) {\n              _this4.scope = text;\n            },\n            onEnterKey: function onEnterKey() {\n              return _this4.onAddScope(_this4.scope);\n            },\n            loading: rightPaneLoading\n          })\n        }];\n\n        if (!_rightPaneData3.some(function (iItem) {\n          return iItem.id === _this4.state.rightPaneActiveUid;\n        })) {\n          this.setState({\n            rightPaneActiveUid: _rightPaneData3[0].id\n          });\n        }\n\n        return _rightPaneData3;\n      }\n\n      var rightPaneData = [];\n\n      if (activeChild.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].STACK) {\n        rightPaneData = [{\n          title: 'Stack Details',\n          id: rightPaneUIDsForTabs.STACK_DETAILS,\n          content: react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_components_StackDetailsTab_StackDetailsTab__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n            key: \"\".concat(activeChild.get('id'), \"-stackDetailsTab\"),\n            name: activeChild.get('name'),\n            iteration: activeChild.getIn(['parameters', 'iteration']),\n            splitDimensions: activeChild.getIn(['parameters', 'split_dimensions']),\n            splits: activeChild.getIn(['parameters', 'splits']),\n            concatDimensions: activeChild.getIn(['parameters', 'concat_dimensions']),\n            type: activeChild.get('orientationType'),\n            stackName: blockBluePrint.getIn(['name'], ''),\n            description: blockBluePrint.getIn(['description'], ''),\n            onUpdate: function onUpdate(key, value) {\n              return _this4.onStackDetailsUpdate(activeChild.get('id'), key, value);\n            }\n          })\n        }];\n      } else {\n        var showAddRemoveIconsForIOTab = true;\n\n        if (this.props.subBlockView.get('readOnly')) {\n          showAddRemoveIconsForIOTab = false;\n        }\n\n        if (activeChild.get('stackID')) {\n          showAddRemoveIconsForIOTab = false;\n        }\n\n        rightPaneData = [{\n          title: 'Parameters',\n          id: rightPaneUIDsForTabs.PARAMETERS,\n          content: react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_components_ParametersTab__WEBPACK_IMPORTED_MODULE_26__[\"default\"], {\n            isErrored: function isErrored(id, internalName, parentPath) {\n              var iName = internalName;\n\n              if (parentPath && parentPath.size) {\n                iName = parentPath.concat(internalName).join('.');\n              }\n\n              return validations.getIn(['blocks', activeChildId, 'parameters', iName, 'error'], Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])([])).toJS();\n            },\n            key: \"\".concat(this.state.stackListActiveIndex, \"-\").concat(activeChild.get('id'), \"-parametersTab\"),\n            data: activeChild.get('parameters'),\n            updateBlockParameter: this.updateBlockParameter,\n            addParameter: this.addParameter,\n            deleteParameter: this.deleteParameter,\n            loading: rightPaneLoading || this.props.scopesLoading,\n            scopes: this.props.scopes,\n            getAllScopes: function getAllScopes() {\n              return _this4.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n                NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_LOAD_ALL_SCOPES\"],\n                params: _this4.props.match.params\n              }));\n            },\n            activeChildID: activeChild.get('id'),\n            readOnly: activeChild.get('markModified'),\n            showDualJSONEditorPopup: this.showDualJSONEditorPopup,\n            showTransferPopup: this.showTransferPopup\n          })\n        }, {\n          title: 'Input',\n          id: rightPaneUIDsForTabs.INPUTS,\n          content: react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_components_InputsTab__WEBPACK_IMPORTED_MODULE_25__[\"default\"], {\n            isErrored: function isErrored(slotID, internalName, parentPath) {\n              var iName = internalName;\n\n              if (parentPath && parentPath.size) {\n                iName = parentPath.concat(internalName).join('.');\n              }\n\n              return validations.getIn(['blocks', activeChildId, 'slots', slotID, 'parameters', iName, 'error'], Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])([])).toJS();\n            },\n            key: \"\".concat(this.state.stackListActiveIndex, \"-\").concat(activeChild.get('id'), \"-inputsTab\"),\n            data: activeChild.get('inputs'),\n            updateInputParameter: function updateInputParameter(data) {\n              return _this4.updateIOParameter(data, 'inputs');\n            },\n            addInput: function addInput(data) {\n              return _this4.addIO(data, 'inputs');\n            },\n            deleteInput: function deleteInput(input) {\n              return _this4.deleteIO(input, 'inputs');\n            },\n            loading: rightPaneLoading,\n            showAddRemoveIcons: showAddRemoveIconsForIOTab,\n            readOnly: activeChild.get('markModified')\n          })\n        }, {\n          title: 'Output',\n          id: rightPaneUIDsForTabs.OUTPUTS,\n          content: react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_components_InputsTab__WEBPACK_IMPORTED_MODULE_25__[\"default\"], {\n            isErrored: function isErrored(slotID, internalName, parentPath) {\n              var iName = internalName;\n\n              if (parentPath && parentPath.size) {\n                iName = parentPath.concat(internalName).join('.');\n              }\n\n              return validations.getIn(['blocks', activeChildId, 'slots', slotID, 'parameters', iName, 'error'], Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])([])).toJS();\n            },\n            key: \"\".concat(this.state.stackListActiveIndex, \"-\").concat(activeChild.get('id'), \"-outputsTab\"),\n            data: activeChild.get('outputs'),\n            updateInputParameter: function updateInputParameter(data) {\n              return _this4.updateIOParameter(data, 'outputs');\n            },\n            addInput: function addInput(data) {\n              return _this4.addIO(data, 'outputs');\n            },\n            deleteInput: function deleteInput(output) {\n              return _this4.deleteIO(output, 'outputs');\n            },\n            loading: rightPaneLoading,\n            showAddRemoveIcons: showAddRemoveIconsForIOTab,\n            readOnly: activeChild.get('markModified')\n          })\n        }, {\n          title: 'Info',\n          id: rightPaneUIDsForTabs.INFO,\n          content: react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_3__[\"InfoTab\"], {\n            key: \"\".concat(this.state.stackListActiveIndex, \"-\").concat(activeChild.get('id'), \"-infoTab\"),\n            items: [{\n              renderType: 'INPUT_TEXT',\n              label: 'Instance Name',\n              value: activeChild.get('name'),\n              onBlur: function onBlur(e, val) {\n                var correctVal = val.trim();\n\n                if (correctVal !== activeChild.get('name')) {\n                  if (_ModelsList_ModelsListPage_constants__WEBPACK_IMPORTED_MODULE_16__[\"MODEL_NAME_REGEX\"].regex.test(correctVal)) {\n                    _this4.onRenameBlock(correctVal);\n                  } else {\n                    _this4.setState({\n                      infoTabInstanceNameError: _ModelsList_ModelsListPage_constants__WEBPACK_IMPORTED_MODULE_16__[\"MODEL_NAME_REGEX\"].message\n                    });\n                  }\n                } else if (_this4.state.infoTabInstanceNameError) {\n                  _this4.setState({\n                    infoTabInstanceNameError: ''\n                  });\n                }\n              },\n              forcedError: !!this.state.infoTabInstanceNameError,\n              errorMessage: this.state.infoTabInstanceNameError,\n              disabled: activeChild.get('markModified')\n            }, {\n              renderType: 'TEXT',\n              label: 'Name',\n              value: activeChild.get('component_id') ? nodes.getIn(nodePaths.get(activeChild.get('component_id'))).get('label') : '--'\n            }, {\n              renderType: 'TEXT',\n              label: 'Type',\n              value: activeChild.get('grandParentLabel')\n            }, {\n              renderType: 'TEXT',\n              label: 'Description',\n              value: activeChild.get('description'),\n              multiLine: true\n            }],\n            loading: rightPaneLoading\n          })\n        }];\n      }\n\n      if (blockBluePrint.get('support_scopes') || activeChild.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].STACK) {\n        rightPaneData = [].concat(_toConsumableArray(rightPaneData.slice(0, 3)), [{\n          title: 'Scopes',\n          id: rightPaneUIDsForTabs.SCOPES,\n          content: react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_components_ScopesTab_ScopesTab__WEBPACK_IMPORTED_MODULE_27__[\"default\"], {\n            key: \"\".concat(this.state.stackListActiveIndex, \"-\").concat(activeChild.get('id'), \"-scopesTab\"),\n            data: activeChild.get('scopes'),\n            scopes: filteredScopes.toJS(),\n            removeScope: function removeScope(data) {\n              if (!activeChild.get('stackID')) {\n                _this4.onRemoveScope(data);\n              }\n            },\n            onScopeSelect: function onScopeSelect(e, scope) {\n              if (!activeChild.get('stackID')) {\n                _this4.onAddScope(scope);\n              }\n            },\n            onInputChange: function onInputChange(e, text) {\n              _this4.scope = text;\n            },\n            onEnterKey: function onEnterKey() {\n              if (!activeChild.get('stackID')) {\n                _this4.onAddScope(_this4.scope);\n              }\n            },\n            readOnly: activeChild.get('markModified'),\n            loading: rightPaneLoading\n          })\n        }], _toConsumableArray(rightPaneData.slice(3)));\n      }\n\n      if (activeChild.get('type') && !rightPaneData.some(function (iItem) {\n        return iItem.id === _this4.state.rightPaneActiveUid;\n      })) {\n        this.setState({\n          rightPaneActiveUid: rightPaneData[0].id\n        });\n      }\n\n      return rightPaneData;\n    }\n  }, {\n    key: \"onCascadeDownClick\",\n    value: function onCascadeDownClick() {\n      var type;\n\n      switch (this.state.rightPaneActiveUid) {\n        case rightPaneUIDsForTabs.PARAMETERS:\n          type = 'parameters';\n          break;\n\n        case rightPaneUIDsForTabs.INPUTS:\n          type = 'bb_stack_block_inputs';\n          break;\n\n        case rightPaneUIDsForTabs.OUTPUTS:\n          type = 'bb_stack_block_outputs';\n          break;\n\n        case rightPaneUIDsForTabs.SCOPES:\n          type = 'scopes';\n          break;\n\n        default:\n          break;\n      }\n\n      this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n        NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_CASCADE_DOWN_ITEMS_OF_BLOCK\"],\n        body: '1',\n        params: _objectSpread({}, this.props.routeProps.match.params, {\n          stackId: this.state.activeChild.get('stackID'),\n          cascadeFromIteration: this.state.stackListActiveIndex + 1,\n          blockId: this.state.activeChild.get('id'),\n          type: type,\n          modelId: this.props.subBlockView.get('componentID') && !this.props.subBlockView.get('readOnly') ? this.props.subBlockView.get('componentID') : this.props.routeProps.match.params.modelId\n        }),\n        dispatch: this.props.dispatch\n      }));\n    }\n  }, {\n    key: \"getCustomContextMenuItems\",\n    value: function getCustomContextMenuItems(_ref2) {\n      var _this5 = this;\n\n      var childType = _ref2.childType,\n          child = _ref2.child,\n          dragSelected = _ref2.dragSelected;\n      var itemsDisabled = {\n        COPY: true,\n        PASTE: true,\n        TRANSFER_WEIGHTS: true,\n        CREATE_STACK: true,\n        CREATE_GROUP: true,\n        DUPLICATE_AND_SHARE_WEIGHTS: true,\n        DELETE: true\n      };\n      var onItemsClick = {\n        COPY: function COPY(f) {\n          return f;\n        },\n        PASTE: function PASTE(f) {\n          return f;\n        },\n        TRANSFER_WEIGHTS: function TRANSFER_WEIGHTS(f) {\n          return f;\n        },\n        CREATE_STACK: function CREATE_STACK(f) {\n          return f;\n        },\n        CREATE_GROUP: function CREATE_GROUP(f) {\n          return f;\n        },\n        DUPLICATE_AND_SHARE_WEIGHTS: function DUPLICATE_AND_SHARE_WEIGHTS(f) {\n          return f;\n        },\n        DELETE: function DELETE(f) {\n          return f;\n        }\n      };\n\n      if (dragSelected) {\n        if (this.props.subBlockView.get('name')) {\n          if (!this.props.subBlockView.get('readOnly') && this.props.subBlockView.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].GROUP) {\n            itemsDisabled.CREATE_STACK = !child;\n\n            onItemsClick.CREATE_STACK = function (_ref3) {\n              var event = _ref3.event,\n                  selectedChild = _ref3.selectedChild;\n              event.stopPropagation();\n              event.nativeEvent && event.nativeEvent.stopImmediatePropagation();\n\n              _this5.onCreateStackClick(selectedChild.filter(function (iItem) {\n                return iItem.get('position');\n              }));\n            };\n          }\n        } else {\n          itemsDisabled.CREATE_STACK = !child;\n          itemsDisabled.CREATE_GROUP = !child;\n\n          onItemsClick.CREATE_STACK = function (_ref4) {\n            var event = _ref4.event,\n                selectedChild = _ref4.selectedChild;\n            event.stopPropagation();\n            if (event.nativeEvent) event.nativeEvent.stopImmediatePropagation();\n\n            _this5.onCreateStackClick(selectedChild.filter(function (iItem) {\n              return iItem.get('position');\n            }));\n          };\n\n          onItemsClick.CREATE_GROUP = function (_ref5) {\n            var event = _ref5.event,\n                selectedChild = _ref5.selectedChild;\n            event.stopPropagation();\n            event.nativeEvent && event.nativeEvent.stopImmediatePropagation();\n\n            _this5.onCreateGroupClick(selectedChild.filter(function (iItem) {\n              return iItem.get('position');\n            }));\n          };\n        }\n      } else {\n        switch (childType) {\n          case _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].STACK:\n            itemsDisabled.DELETE = !child;\n\n            onItemsClick.DELETE = function (_ref6) {\n              var event = _ref6.event;\n              event.stopPropagation();\n              event.nativeEvent && event.nativeEvent.stopImmediatePropagation();\n\n              _this5.deleteChild({\n                id: child.get('id'),\n                type: child.get('type'),\n                dragType: childType\n              }, true);\n            };\n\n            break;\n\n          case _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].CONNECTION:\n            {\n              var childKeyArray = child.key.split('_');\n              itemsDisabled.DELETE = !child;\n\n              onItemsClick.DELETE = function (_ref7) {\n                var event = _ref7.event;\n                event.stopPropagation();\n                event.nativeEvent && event.nativeEvent.stopImmediatePropagation();\n\n                _this5.deleteChild({\n                  id: childKeyArray[1],\n                  dragType: childType,\n                  part: child.part\n                }, true);\n              };\n\n              break;\n            }\n\n          default:\n            {\n              // no contextmenu for items in a stack\n              if (child && child.get('stackID')) {\n                break;\n              } else if (child && child.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].GROUP) {\n                if (this.builderRef.state.reducer.getIn(['blocks', child.get('id'), 'markModified'])) {\n                  itemsDisabled.DELETE = !child;\n\n                  onItemsClick.DELETE = function (_ref8) {\n                    var event = _ref8.event;\n                    event.stopPropagation();\n                    event.nativeEvent && event.nativeEvent.stopImmediatePropagation();\n\n                    _this5.deleteChild({\n                      id: child.get('id'),\n                      type: child.get('type'),\n                      dragType: childType\n                    }, true);\n                  };\n                } else {\n                  itemsDisabled.DELETE = !child;\n                  itemsDisabled.DUPLICATE_AND_SHARE_WEIGHTS = false;\n\n                  onItemsClick.DELETE = function (_ref9) {\n                    var event = _ref9.event;\n                    event.stopPropagation();\n                    event.nativeEvent && event.nativeEvent.stopImmediatePropagation();\n\n                    _this5.deleteChild({\n                      id: child.get('id'),\n                      type: child.get('type'),\n                      dragType: childType\n                    }, true);\n                  };\n\n                  onItemsClick.DUPLICATE_AND_SHARE_WEIGHTS = function (_ref10) {\n                    var event = _ref10.event;\n                    event.stopPropagation();\n                    event.nativeEvent && event.nativeEvent.stopImmediatePropagation();\n\n                    if (_this5.builderRef.state.reducer.getIn(['blocks', child.get('id'), 'shared'])) {\n                      _this5.addToSharedGroup({\n                        id: child.get('id')\n                      });\n                    } else {\n                      _this5.createSharedGroup({\n                        id: child.get('id')\n                      });\n                    }\n                  };\n                }\n              } else {\n                itemsDisabled.COPY = !child;\n                itemsDisabled.DELETE = !child;\n                var blockBlueprint = this.getBlockBluePrint({\n                  type: child.get('type'),\n                  componentID: child.get('component_id')\n                });\n                itemsDisabled.TRANSFER_WEIGHTS = blockBlueprint ? !blockBlueprint.get('support_transfer_weights') : true;\n\n                onItemsClick.TRANSFER_WEIGHTS = function (e) {\n                  return _this5.showTransferPopup(e, child.get('id'));\n                };\n\n                onItemsClick.COPY = function (_ref11) {\n                  var event = _ref11.event;\n                  event.stopPropagation();\n                  event.nativeEvent && event.nativeEvent.stopImmediatePropagation();\n\n                  _this5.builderRef.updateStateReducer(_commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"builderReducerFunctions\"][_commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_COPY_CHILD\"]](_this5.builderRef.state.reducer, {\n                    id: child.get('id'),\n                    dragType: childType\n                  }));\n                };\n\n                onItemsClick.DELETE = function (_ref12) {\n                  var event = _ref12.event;\n                  event.stopPropagation();\n                  event.nativeEvent && event.nativeEvent.stopImmediatePropagation();\n\n                  _this5.deleteChild({\n                    id: child.get('id'),\n                    type: child.get('type'),\n                    dragType: childType\n                  }, true);\n                };\n              }\n\n              break;\n            }\n        }\n      }\n\n      return [{\n        text: 'Copy',\n        disabled: itemsDisabled.COPY,\n        onClick: onItemsClick.COPY\n      }, {\n        text: 'Paste',\n        disabled: itemsDisabled.PASTE,\n        onClick: onItemsClick.PASTE\n      }, {\n        text: 'Transfer Weights',\n        disabled: itemsDisabled.TRANSFER_WEIGHTS,\n        onClick: onItemsClick.TRANSFER_WEIGHTS\n      }, {\n        breaker: true\n      }, {\n        text: 'Create Stack',\n        disabled: itemsDisabled.CREATE_STACK,\n        onClick: onItemsClick.CREATE_STACK\n      }, {\n        text: 'Create Group',\n        disabled: itemsDisabled.CREATE_GROUP,\n        onClick: onItemsClick.CREATE_GROUP\n      }, {\n        breaker: true\n      }, {\n        text: 'Duplicate and Share Weights',\n        disabled: itemsDisabled.DUPLICATE_AND_SHARE_WEIGHTS,\n        onClick: onItemsClick.DUPLICATE_AND_SHARE_WEIGHTS\n      }, {\n        breaker: true\n      }, {\n        text: 'Delete',\n        disabled: itemsDisabled.DELETE,\n        onClick: onItemsClick.DELETE\n      }];\n    }\n  }, {\n    key: \"onLeftPaneItemInfoTabEditClick\",\n    value: function onLeftPaneItemInfoTabEditClick() {\n      var _this6 = this;\n\n      var componentId = this.state.activeChild.get('component_id'); // const frameworkVersion = this.state.activeChild.get('frameworkVersion');\n\n      /* @Daya in stack view its undefined it\n       coming in props is there any use\n       case by adding it in active child */\n\n      var modelFrameworkVersion = this.props.modelFrameworkVersion;\n      var itemFrameworkVersion = this.state.activeChild.get('frameworkVersion');\n      var id = this.state.activeChild.get('id');\n      var type = this.state.activeChild.get('type');\n      var name = this.state.activeChild.get('label');\n      var builderDom = '';\n\n      if (this.builderRef.state.reducer.get('blocks').count() || this.builderRef.state.reducer.get('operators').count() || this.builderRef.state.reducer.get('stacks').count()) {\n        builderDom = Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_5__[\"encode\"])({\n          dom: document.getElementById('builderPaper').outerHTML\n        });\n      }\n\n      var proceedAction;\n\n      if (this.state.activeChild.get('customCreatedItem')) {\n        proceedAction = function proceedAction() {\n          _this6.showPopup(null, Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({\n            label: name,\n            type: type,\n            component_id: componentId,\n            grandParentLabel: _this6.state.activeChild.get('grandParentLabel')\n          }), true);\n\n          if (_this6.state.affectedEntitiesPopup.show) {\n            _this6.setState({\n              affectedEntitiesPopup: {}\n            });\n          }\n        };\n      } else {\n        proceedAction = function proceedAction() {\n          if (_this6.state.activeChild.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].STACK) {\n            _this6.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_EXPLORE_STACK\"],\n              name: name,\n              componentID: componentId,\n              builderDom: builderDom,\n              modelFrameworkVersion: modelFrameworkVersion,\n              itemFrameworkVersion: itemFrameworkVersion,\n              params: _objectSpread({}, _this6.props.routeProps.match.params, {\n                stackId: componentId\n              }),\n              cb: function cb() {\n                _this6.clearBuilderPaneAndNode();\n              }\n            }));\n          } else if (_this6.state.activeChild.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].GROUP) {\n            _this6.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_EXPLORE_GROUP\"],\n              name: name,\n              componentID: componentId,\n              builderDom: builderDom,\n              modelFrameworkVersion: modelFrameworkVersion,\n              itemFrameworkVersion: itemFrameworkVersion,\n              params: _objectSpread({}, _this6.props.routeProps.match.params, {\n                groupId: componentId\n              }),\n              isNode: true,\n              cb: function cb() {\n                _this6.clearBuilderPaneAndNode();\n              }\n            }));\n          }\n\n          if (_this6.state.affectedEntitiesPopup.show) {\n            _this6.setState({\n              affectedEntitiesPopup: {},\n              activeChild: Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({})\n            });\n          }\n        };\n      }\n\n      this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n        NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_GET_AFFECTED_MODELS\"],\n        componentId: componentId,\n        id: id,\n        type: type.toLowerCase(),\n        Aid: this.eaiId,\n        unsaved: this.state.builderUnsaved,\n        callback: function callback() {\n          _this6.setState({\n            builderUnsaved: false,\n            affectedEntitiesPopup: {\n              show: true,\n              confirmButtonText: 'Continue Editing',\n              header: \"Editing the \".concat(type, \" '\").concat(name, \"' will affect following Models\"),\n              onConfirmButtonClick: proceedAction\n            }\n          }, function () {\n            return _this6.builderRef.updateStateReducer(_this6.builderRef.state.reducer.set('unsaved', false));\n          });\n        },\n        proceedAction: proceedAction,\n        params: this.props.routeProps.match.params,\n        builderDom: builderDom\n      }));\n    }\n  }, {\n    key: \"onLeftPaneItemInfoTabDeleteClick\",\n    value: function onLeftPaneItemInfoTabDeleteClick() {\n      var _this7 = this;\n\n      var type = this.state.activeChild.get('type');\n      var name = this.state.activeChild.get('label');\n      this.props.dispatch(Object(_commons_src_index_actions__WEBPACK_IMPORTED_MODULE_2__[\"showDialog\"])({\n        title: 'Confirm Deletion',\n        message: \"Are you sure you want to delete the \".concat(type, \" '\").concat(name, \"' ?\"),\n        buttons: [{\n          text: 'Cancel',\n          secondary: true\n        }, {\n          text: 'Ok',\n          autoFocus: true,\n          onClickAction: function onClickAction() {\n            _this7.props.dispatch(Object(_commons_src_index_actions__WEBPACK_IMPORTED_MODULE_2__[\"hideDialog\"])());\n\n            var componentId = _this7.state.activeChild.get('component_id');\n\n            var id = _this7.state.activeChild.get('id');\n\n            var proceedAction = function proceedAction() {\n              _this7.builderRef.updateStateReducer(_this7.builderRef.state.reducer.merge(Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({\n                showRightPane: false,\n                selectedNode: {}\n              })));\n\n              var tempState = {};\n\n              if (_this7.state.affectedEntitiesPopup.show) {\n                tempState.affectedEntitiesPopup = {};\n              }\n\n              var activeChild = _this7.state.activeChild;\n\n              if (_this7.state.activeChild.count()) {\n                tempState.activeChild = Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({});\n              }\n\n              _this7.setState(tempState);\n\n              var callGetModel = function callGetModel() {\n                _this7.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n                  NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_GET_DESIGNER_MODEL_DETAILS\"],\n                  params: _this7.props.routeProps.match.params\n                }));\n              };\n\n              if (activeChild.get('customCreatedItem')) {\n                _this7.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n                  NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_DELETE_CUSTOM_BLOCK\"],\n                  params: _objectSpread({}, _this7.props.routeProps.match.params, {\n                    blockId: componentId\n                  }),\n                  cb: callGetModel\n                }));\n              } else {\n                _this7.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n                  NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_DELETE_GROUP_OR_STACK\"],\n                  id: componentId,\n                  componentId: componentId,\n                  type: type.toLowerCase(),\n                  Aid: _this7.eaiId,\n                  cb: callGetModel\n                }));\n              }\n            };\n\n            var builderDom = '';\n\n            if (_this7.state.builderUnsaved && (_this7.builderRef.state.reducer.get('blocks').count() || _this7.builderRef.state.reducer.get('operators').count() || _this7.builderRef.state.reducer.get('stacks').count())) {\n              builderDom = Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_5__[\"encode\"])({\n                dom: document.getElementById('builderPaper').outerHTML\n              });\n            }\n\n            _this7.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_GET_AFFECTED_MODELS\"],\n              componentId: componentId,\n              id: id,\n              type: type.toLowerCase(),\n              Aid: _this7.eaiId,\n              deleteNode: true,\n              callback: function callback() {\n                return _this7.setState({\n                  builderUnsaved: false,\n                  affectedEntitiesPopup: {\n                    show: true,\n                    confirmButtonText: 'Delete',\n                    onConfirmButtonClick: proceedAction,\n                    header: \"Deleting the \".concat(type, \" '\").concat(name, \"' will affect following Models\")\n                  }\n                }, function () {\n                  return _this7.builderRef.updateStateReducer(_this7.builderRef.state.reducer.set('unsaved', false));\n                });\n              },\n              proceedAction: proceedAction,\n              unsaved: _this7.state.builderUnsaved,\n              builderDom: builderDom,\n              params: _this7.props.routeProps.match.params\n            }));\n          }\n        }]\n      }));\n    }\n  }, {\n    key: \"onUpdateItemClickInTab\",\n    value: function onUpdateItemClickInTab() {\n      var _this8 = this;\n\n      var activeChildType = this.state.activeChild.get('type');\n      var activeChildID = this.state.activeChild.get('id');\n      var activeChildComponentID = this.state.activeChild.get('component_id');\n      var blockBluePrint = this.getBlockBluePrint({\n        type: activeChildType,\n        componentID: activeChildComponentID\n      });\n      var position = this.state.activeChild.get('position').toJS();\n      var activeChildName = this.state.activeChild.get('name');\n\n      if (activeChildType === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].STACK) {\n        this.deleteStack(activeChildID, function (stateReducer) {\n          _this8.addStack({\n            oldId: activeChildID,\n            obj: {\n              position: position\n            },\n            blockBluePrint: blockBluePrint,\n            oldStateReducer: stateReducer,\n            getFinalBuilderStateReducer: _this8.clearBuilderPaneAndNode,\n            newName: activeChildName,\n            saveModel: true\n          });\n        });\n      } else if (activeChildType === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].GROUP) {\n        this.deleteGroup(activeChildID, function (stateReducer) {\n          _this8.addGroup({\n            obj: {\n              position: position,\n              component_id: activeChildComponentID\n            },\n            oldId: activeChildID,\n            blockBluePrint: blockBluePrint,\n            oldStateReducer: stateReducer,\n            getFinalBuilderStateReducer: _this8.clearBuilderPaneAndNode,\n            newName: activeChildName,\n            saveModel: true\n          });\n        });\n      } else {\n        this.deleteChild({\n          id: activeChildID,\n          type: activeChildType,\n          dragType: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].BLOCK\n        }, undefined, function (stateReducer) {\n          _this8.addChild(_objectSpread({}, blockBluePrint.toJS(), {\n            oldId: activeChildID,\n            id: Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_5__[\"getUuId\"])(),\n            position: position,\n            dragType: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].MENU_BLOCK\n          }), activeChildName, stateReducer, _this8.clearBuilderPaneAndNode);\n        });\n      }\n    }\n  }, {\n    key: \"onDeleteItemClickInTab\",\n    value: function onDeleteItemClickInTab() {\n      var _this9 = this;\n\n      var activeChildType = this.state.activeChild.get('type');\n      var activeChildID = this.state.activeChild.get('id');\n\n      if (activeChildType === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].STACK) {\n        this.deleteStack(activeChildID, function (stateReducer) {\n          _this9.clearBuilderPaneAndNode(stateReducer);\n\n          _this9.onSaveClick();\n        });\n      } else if (activeChildType === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].GROUP) {\n        this.deleteGroup(activeChildID, function (stateReducer) {\n          _this9.clearBuilderPaneAndNode(stateReducer);\n\n          _this9.onSaveClick();\n        });\n      } else {\n        this.deleteChild({\n          id: activeChildID,\n          type: activeChildType,\n          dragType: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].BLOCK\n        }, undefined, this.clearBuilderPaneAndNode);\n      }\n    }\n  }, {\n    key: \"onBreadCrumbClick\",\n    value: function onBreadCrumbClick(event, item) {\n      var _this10 = this;\n\n      event.preventDefault();\n      var _this$props4 = this.props,\n          pipeline = _this$props4.pipeline,\n          history = _this$props4.history,\n          params = _this$props4.match.params;\n\n      if (item.main && this.props.subBlockView.get('name')) {\n        if (this.props.subBlockView.get('readOnly')) {\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_SAVE_MODEL_DESIGNER\"],\n            params: this.props.routeProps.match.params,\n            frameworkVersion: this.props.modelFrameworkVersion,\n            hideToast: true,\n            savedSuccessfullyCb: function savedSuccessfullyCb() {\n              _this10.clearBuilderPaneAndNode();\n            }\n          }));\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_GET_DESIGNER_MODEL_DETAILS\"]\n          }));\n        } else {\n          if (this.props.subBlockView.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].STACK) {\n            this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_END_EDIT_STACK\"],\n              params: _objectSpread({}, this.props.routeProps.match.params, {\n                stackId: this.props.subBlockView.get('componentID')\n              })\n            }));\n          } else if (this.props.subBlockView.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].GROUP) {\n            this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_END_EDIT_GROUP\"],\n              params: _objectSpread({}, this.props.routeProps.match.params, {\n                groupId: this.props.subBlockView.get('componentID')\n              })\n            }));\n          }\n\n          this.clearBuilderPaneAndNode();\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_GET_DESIGNER_MODEL_DETAILS\"]\n          }));\n        }\n      } else if (item.type === 'pipeline') {\n        history.push(Object(_rzt_eva_utils__WEBPACK_IMPORTED_MODULE_1__[\"replaceParams\"])('/expert-ais/:Aid/pipelines/build/:pipelineId', {\n          Aid: params.Aid,\n          pipelineId: pipeline.get('id')\n        }));\n      }\n    }\n  }, {\n    key: \"onSaveClick\",\n    value: function onSaveClick(e, _cb) {\n      var _this11 = this;\n\n      var params = this.props.routeProps.match.params;\n\n      if (this.props.subBlockView.get('name')) {\n        if (this.props.subBlockView.get('readOnly')) {\n          this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_SAVE_MODEL_DESIGNER\"],\n            frameworkVersion: this.props.modelFrameworkVersion,\n            params: this.props.routeProps.match.params,\n            cb: function cb(f) {\n              return f;\n            },\n            savedSuccessfullyCb: function savedSuccessfullyCb() {\n              _this11.builderRef.updateStateReducer(_this11.builderRef.state.reducer.set('unsaved', false));\n            }\n          }));\n        } else {\n          var blockBluePrint = this.getBlockBluePrint({\n            componentID: this.props.subBlockView.get('componentID')\n          });\n\n          if (this.props.subBlockView.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].STACK) {\n            var mergedItems = this.builderRef.state.reducer.get('blocks').merge(this.builderRef.state.reducer.get('operators'));\n            this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_SAVE_STACK\"],\n              params: params,\n              body: {\n                frameworkVersion: this.props.modelFrameworkVersion,\n                description: blockBluePrint.get('description'),\n                component_id: this.props.subBlockView.get('componentID'),\n                name: this.props.subBlockView.get('name'),\n                type: blockBluePrint.get('group_name'),\n                ui_param: {\n                  position: Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_34__[\"getNewStackPosition\"])(mergedItems)\n                }\n              },\n              cb: function cb() {\n                _this11.builderRef.updateStateReducer(_this11.builderRef.state.reducer.set('unsaved', false));\n              }\n            }));\n          } else if (this.props.subBlockView.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].GROUP) {\n            var _mergedItems = this.builderRef.state.reducer.get('blocks').merge(this.builderRef.state.reducer.get('operators')).merge(this.builderRef.state.reducer.get('stacks'));\n\n            this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n              NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_SAVE_GROUP\"],\n              params: params,\n              body: {\n                frameworkVersion: this.props.modelFrameworkVersion,\n                description: blockBluePrint.get('description'),\n                component_id: this.props.subBlockView.get('componentID'),\n                name: this.props.subBlockView.get('name'),\n                ui_param: {\n                  position: Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_34__[\"getNewGroupPosition\"])(_mergedItems).position\n                }\n              },\n              cb: function cb() {\n                _this11.builderRef.updateStateReducer(_this11.builderRef.state.reducer.set('unsaved', false));\n              }\n            }));\n          }\n        }\n      } else {\n        var builderDom = '';\n\n        if (this.builderRef.state.reducer.get('blocks').count() || this.builderRef.state.reducer.get('operators').count() || this.builderRef.state.reducer.get('stacks').count()) {\n          builderDom = Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_5__[\"encode\"])({\n            dom: document.getElementById('builderPaper').outerHTML\n          });\n        }\n\n        this.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n          NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_SAVE_MODEL_DESIGNER\"],\n          params: this.props.routeProps.match.params,\n          builderDom: builderDom,\n          frameworkVersion: this.props.modelFrameworkVersion,\n          cb: function cb(_ref13) {\n            var updatedComponents = _ref13.updatedComponents,\n                deletedComponents = _ref13.deletedComponents;\n\n            var stateReducer = _this11.builderRef.state.reducer.set('unsaved', false);\n\n            updatedComponents.forEach(function (iUpdatedComponent) {\n              var itemKey = iUpdatedComponent.get('componentId');\n              var modifiedBy = iUpdatedComponent.get('modifiedBy');\n              var modifiedOn = iUpdatedComponent.get('modifiedOn');\n\n              if (stateReducer.get('blocks').has(itemKey)) {\n                stateReducer = stateReducer.mergeIn(['blocks', itemKey], Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({\n                  isUpdated: true,\n                  markModified: true,\n                  modifiedBy: modifiedBy,\n                  modifiedOn: modifiedOn\n                }));\n              } else if (stateReducer.get('operators').has(itemKey)) {\n                stateReducer = stateReducer.mergeIn(['operators', itemKey], Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({\n                  isUpdated: true,\n                  markModified: true,\n                  modifiedBy: modifiedBy,\n                  modifiedOn: modifiedOn\n                }));\n              } else if (stateReducer.get('stacks').has(itemKey)) {\n                stateReducer = stateReducer.mergeIn(['stacks', itemKey], Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({\n                  isUpdated: true,\n                  markModified: true,\n                  modifiedBy: modifiedBy,\n                  modifiedOn: modifiedOn\n                }));\n                stateReducer.get('blocks').filter(function (iItem) {\n                  return iItem.get('stackID') === itemKey;\n                }).forEach(function (iItem, key) {\n                  stateReducer = stateReducer.mergeIn(['blocks', key], Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({\n                    isUpdated: true,\n                    markModified: true,\n                    modifiedBy: modifiedBy,\n                    modifiedOn: modifiedOn\n                  }));\n                });\n                stateReducer.get('operators').filter(function (iItem) {\n                  return iItem.get('stackID') === itemKey;\n                }).forEach(function (iItem, key) {\n                  stateReducer = stateReducer.mergeIn(['operators', key], Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({\n                    isUpdated: true,\n                    markModified: true,\n                    modifiedBy: modifiedBy,\n                    modifiedOn: modifiedOn\n                  }));\n                });\n              }\n\n              stateReducer.get('blocks').filter(function (iItem) {\n                return iItem.get('parentGroupID') === itemKey;\n              }).forEach(function (iItem, key) {\n                stateReducer = stateReducer.mergeIn(['blocks', key], Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({\n                  isUpdated: true,\n                  markModified: true,\n                  modifiedBy: modifiedBy,\n                  modifiedOn: modifiedOn\n                }));\n              });\n            });\n            deletedComponents.forEach(function (iDeletedComponent) {\n              var itemKey = iDeletedComponent.get('componentId');\n              var deletedBy = iDeletedComponent.get('modifiedBy');\n              var deletedOn = iDeletedComponent.get('modifiedOn');\n\n              if (stateReducer.get('blocks').has(itemKey)) {\n                stateReducer = stateReducer.mergeIn(['blocks', itemKey], Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({\n                  isDeleted: true,\n                  markModified: true,\n                  deletedBy: deletedBy,\n                  deletedOn: deletedOn\n                }));\n              } else if (stateReducer.get('operators').has(itemKey)) {\n                stateReducer = stateReducer.mergeIn(['operators', itemKey], Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({\n                  isDeleted: true,\n                  markModified: true,\n                  deletedBy: deletedBy,\n                  deletedOn: deletedOn\n                }));\n              } else if (stateReducer.get('stacks').has(itemKey)) {\n                stateReducer = stateReducer.mergeIn(['stacks', itemKey], Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({\n                  isDeleted: true,\n                  markModified: true,\n                  deletedBy: deletedBy,\n                  deletedOn: deletedOn\n                }));\n                stateReducer.get('blocks').filter(function (iItem) {\n                  return iItem.get('stackID') === itemKey;\n                }).forEach(function (iItem, key) {\n                  stateReducer = stateReducer.mergeIn(['blocks', key], Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({\n                    isDeleted: true,\n                    markModified: true,\n                    deletedBy: deletedBy,\n                    deletedOn: deletedOn\n                  }));\n                });\n                stateReducer.get('operators').filter(function (iItem) {\n                  return iItem.get('stackID') === itemKey;\n                }).forEach(function (iItem, key) {\n                  stateReducer = stateReducer.mergeIn(['operators', key], Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({\n                    isDeleted: true,\n                    markModified: true,\n                    deletedBy: deletedBy,\n                    deletedOn: deletedOn\n                  }));\n                });\n              }\n\n              stateReducer.get('blocks').filter(function (iItem) {\n                return iItem.get('parentGroupID') === itemKey;\n              }).forEach(function (iItem, key) {\n                stateReducer = stateReducer.mergeIn(['blocks', key], Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({\n                  isDeleted: true,\n                  markModified: true,\n                  deletedBy: deletedBy,\n                  deletedOn: deletedOn\n                }));\n              });\n            });\n            stateReducer = stateReducer.update('connectionList', function (connectionList) {\n              return connectionList.map(function (iConnection) {\n                var sourceBlockErrored = (iConnection.getIn(['sources', '0', 'type']) === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].BLOCK ? stateReducer.get('blocks') : stateReducer.get('operators')).getIn([iConnection.getIn(['sources', '0', 'id']), 'markModified']);\n                var targetBlockErrored = (iConnection.getIn(['targets', '0', 'type']) === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].BLOCK ? stateReducer.get('blocks') : stateReducer.get('operators')).getIn([iConnection.getIn(['targets', '0', 'id']), 'markModified']);\n                return iConnection.set('markModified', sourceBlockErrored || targetBlockErrored);\n              });\n            });\n\n            _this11.builderRef.updateStateReducer(stateReducer);\n\n            if (_cb) _cb();\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"canDrag\",\n    value: function canDrag(_ref14) {\n      var id = _ref14.id,\n          type = _ref14.type;\n\n      if (this.props.subBlockView.get('name') && this.props.subBlockView.get('readOnly')) {\n        return false;\n      }\n\n      return !this.builderRef.state.reducer.getIn([_ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"reducerItemTypes\"][type] || 'blocks', id, 'stackID']) && this.props.activeExpertAI.get('permission') !== 'View';\n    }\n  }, {\n    key: \"isInParentDragComponent\",\n    value: function isInParentDragComponent(_ref15) {\n      var id = _ref15.id,\n          type = _ref15.type;\n      return !!this.builderRef.state.reducer.getIn([_ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"reducerItemTypes\"][type] || 'blocks', id, 'stackID']) && this.props.activeExpertAI.get('permission') !== 'View';\n    }\n  }, {\n    key: \"getHighlightChildren\",\n    value: function getHighlightChildren() {\n      var _this12 = this;\n\n      if (this.builderRef) {\n        return this.state.activeScopes.filter(function (iItem) {\n          return iItem;\n        }).reduce(function (prev, next, nextKey) {\n          return _this12.props.scopes.get(nextKey) ? prev.concat(_this12.props.scopes.get(nextKey).reduce(function (iPrev, iNext) {\n            var sharedGroupBlocks = _this12.builderRef.state.reducer.get('blocks').filter(function (iItem) {\n              return iItem.get('parentGroupID') === iNext;\n            });\n\n            if (sharedGroupBlocks.count()) {\n              return iPrev.concat(sharedGroupBlocks.keySeq());\n            }\n\n            return iPrev.push(iNext);\n          }, Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])([]))) : prev;\n        }, Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])([]));\n      }\n\n      return Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])([]);\n    }\n  }, {\n    key: \"onBuilderSaveStateChange\",\n    value: function onBuilderSaveStateChange(unsaved) {\n      this.setState({\n        builderUnsaved: unsaved\n      });\n    }\n  }, {\n    key: \"getBlockEditErrors\",\n    value: function getBlockEditErrors(state) {\n      var _this13 = this;\n\n      var createBlockErrors = this.props.createBlockErrors;\n\n      if (createBlockErrors && createBlockErrors.size > 0) {\n        return {\n          allowToMakeRequest: true,\n          errors: createBlockErrors.toJS()\n        };\n      }\n\n      var errors = {};\n      var stringTypes = ['name'];\n      var arrayTypes = ['inputs', 'outputs', 'parameters'];\n      var mapArrayTypes = {\n        inputs: 'input',\n        outputs: 'output',\n        parameters: 'parameter'\n      };\n\n      var addToError = function addToError(forId, msg) {\n        errors[forId] = errors[forId] || {\n          msg: []\n        };\n        errors[forId] = {\n          error: true,\n          msg: (errors[forId].msg || []).concat(msg)\n        };\n      };\n\n      stringTypes.forEach(function (item) {\n        if (!_ModelsList_ModelsListPage_constants__WEBPACK_IMPORTED_MODULE_16__[\"MODEL_NAME_REGEX\"].regex.test(state[item])) {\n          errors[item] = {\n            error: true,\n            msg: [_ModelsList_ModelsListPage_constants__WEBPACK_IMPORTED_MODULE_16__[\"MODEL_NAME_REGEX\"].message]\n          };\n        }\n      });\n      arrayTypes.forEach(function (item) {\n        if (_this13.createBlockType === _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"BLOCK_TYPES\"].COST) {\n          if (item === 'inputs') {\n            if (!state[item] || state[item].length < 2) {\n              errors[item] = {\n                error: true,\n                msg: [\"Please add at least 2 \".concat(item)]\n              };\n              return;\n            }\n          } else if (item === 'outputs') {\n            if (!state[item] || state[item].length < 1) {\n              errors[item] = {\n                error: true,\n                msg: [\"Please add 1 \".concat(mapArrayTypes[item])]\n              };\n              return;\n            }\n          }\n        }\n\n        var identifyDup = Object(_ModelDesigner_utils__WEBPACK_IMPORTED_MODULE_34__[\"identifyDuplicateNames\"])(state[item], 'name', 'nodeIOId');\n        var hasDuplicate = identifyDup.duplicates.length > 0;\n        identifyDup.duplicates.forEach(function (id) {\n          return addToError(\"\".concat(id, \"__name\"), \" Each \".concat(mapArrayTypes[item], \" should have a unique name.\"));\n        });\n        var paramHasInvalidName = false;\n        state[item].forEach(function (iItem) {\n          if (!_ModelsList_ModelsListPage_constants__WEBPACK_IMPORTED_MODULE_16__[\"MODEL_NAME_REGEX\"].regex.test(iItem.name)) {\n            paramHasInvalidName = true;\n            addToError(\"\".concat(iItem.nodeIOId, \"__name\"), \" \".concat(_ModelsList_ModelsListPage_constants__WEBPACK_IMPORTED_MODULE_16__[\"MODEL_NAME_REGEX\"].message));\n          }\n        });\n\n        if (hasDuplicate || paramHasInvalidName) {\n          addToError(item, [hasDuplicate ? [\" Each \".concat(mapArrayTypes[item], \" should have a unique name.\")] : '', paramHasInvalidName ? [\" \".concat(_ModelsList_ModelsListPage_constants__WEBPACK_IMPORTED_MODULE_16__[\"MODEL_NAME_REGEX\"].message)] : '']);\n        }\n      });\n      return {\n        errors: errors,\n        allowToMakeRequest: false\n      };\n    }\n  }, {\n    key: \"showDualJSONEditorPopup\",\n    value: function showDualJSONEditorPopup(data, valueObject, valuePath, key) {\n      this.setState({\n        dualJSONEditorPopup: {\n          code: data.get('value').toJS(),\n          show: true,\n          data: data,\n          valueObject: valueObject,\n          valuePath: valuePath,\n          key: key\n        }\n      });\n      this.props.dispatch(Object(_ModelPage_actions__WEBPACK_IMPORTED_MODULE_18__[\"showAndHidePopUp\"])({\n        type: 'JSON_EDITOR',\n        code: data.get('value').toJS(),\n        show: true,\n        activeChild: this.state.activeChild\n      }));\n    }\n  }, {\n    key: \"onDualJSONEditorPopupDoneClick\",\n    value: function onDualJSONEditorPopupDoneClick(value) {\n      var _this$state$dualJSONE = this.state.dualJSONEditorPopup,\n          data = _this$state$dualJSONE.data,\n          valueObject = _this$state$dualJSONE.valueObject,\n          valuePath = _this$state$dualJSONE.valuePath,\n          key = _this$state$dualJSONE.key;\n      var finalValue = Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])(value);\n      var uniqueIDForValue = Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_5__[\"getShortId\"])();\n      this.onDualJSONEditorPopupCancelClick();\n      this.updateBlockParameter(finalValue, valueObject.setIn(_toConsumableArray(valuePath), finalValue), data, undefined, key, uniqueIDForValue);\n    }\n  }, {\n    key: \"onDualJSONEditorPopupCancelClick\",\n    value: function onDualJSONEditorPopupCancelClick() {\n      this.setState({\n        dualJSONEditorPopup: {\n          show: false\n        }\n      });\n      this.props.dispatch(Object(_ModelPage_actions__WEBPACK_IMPORTED_MODULE_18__[\"showAndHidePopUp\"])({\n        show: false\n      }));\n    }\n  }, {\n    key: \"clearBuilderPaneAndNode\",\n    value: function clearBuilderPaneAndNode() {\n      var _this14 = this;\n\n      var stateReducer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.builderRef.state.reducer;\n      var saveModel = arguments.length > 1 ? arguments[1] : undefined;\n      this.builderRef.updateStateReducer(stateReducer.merge(Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({\n        showRightPane: false,\n        selectedNode: {},\n        unsaved: false\n      })), function () {\n        if (saveModel) _this14.onSaveClick();\n      });\n    }\n  }, {\n    key: \"onTransferWeightsDoneClick\",\n    value: function onTransferWeightsDoneClick() {\n      var _this15 = this;\n\n      if (this.state.activeChild.count()) {\n        this.setState({\n          activeChild: Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({})\n        });\n      }\n\n      this.builderRef.updateStateReducer(this.builderRef.state.reducer.merge(Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({\n        showRightPane: false,\n        selectedNode: {}\n      })));\n      this.onSaveClick(null, function () {\n        _this15.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n          NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_GET_DESIGNER_MODEL_DETAILS\"]\n        }));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this16 = this;\n\n      var _this$props5 = this.props,\n          blocks = _this$props5.blocks,\n          connections = _this$props5.connections,\n          operators = _this$props5.operators,\n          stacks = _this$props5.stacks,\n          dispatch = _this$props5.dispatch,\n          history = _this$props5.history,\n          nodes = _this$props5.nodes,\n          match = _this$props5.match,\n          blockEditValues = _this$props5.blockEditValues,\n          templates = _this$props5.templates,\n          _this$props5$routePro = _this$props5.routeProps.match.params,\n          Aid = _this$props5$routePro.Aid,\n          modelId = _this$props5$routePro.modelId,\n          modelName = _this$props5.modelName,\n          errors = _this$props5.errors,\n          pipeline = _this$props5.pipeline,\n          validations = _this$props5.validations,\n          affectedModels = _this$props5.affectedModels,\n          scopes = _this$props5.scopes,\n          scopesLoading = _this$props5.scopesLoading,\n          location = _this$props5.routeProps.location,\n          popup = _this$props5.popup,\n          hasTemplate = _this$props5.hasTemplate;\n      var _this$state2 = this.state,\n          showRightPane = _this$state2.showRightPane,\n          showRightPaneTabContent = _this$state2.showRightPaneTabContent,\n          activeScopes = _this$state2.activeScopes,\n          isActiveChildHorizontalStackItem = _this$state2.isActiveChildHorizontalStackItem,\n          stackListActiveIndex = _this$state2.stackListActiveIndex,\n          stackListIterations = _this$state2.stackListIterations,\n          affectedEntitiesPopup = _this$state2.affectedEntitiesPopup,\n          activeChild = _this$state2.activeChild,\n          borderHighlightChildren = _this$state2.borderHighlightChildren,\n          builderUnsaved = _this$state2.builderUnsaved;\n      var postTitleRef = Object(lodash__WEBPACK_IMPORTED_MODULE_8__[\"get\"])(this.state, ['refs', 'postTitle', 'current']);\n      var postRightpaneRef = Object(lodash__WEBPACK_IMPORTED_MODULE_8__[\"get\"])(this.state, ['refs', 'preRightPane', 'current']);\n      var showCascade = isActiveChildHorizontalStackItem && !activeChild.get('isNode') && !activeChild.get('markModified') && this.state.rightPaneActiveUid !== rightPaneUIDsForTabs.INFO && postTitleRef;\n      var showStackList = isActiveChildHorizontalStackItem && !activeChild.get('isNode') && postRightpaneRef;\n      var Elem = showCascade && react_dom__WEBPACK_IMPORTED_MODULE_13___default.a.createPortal(react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n        className: _designerHelper_ModelDesigner_css__WEBPACK_IMPORTED_MODULE_22___default.a.rightPaneCascadeButton,\n        secondary: true,\n        onClick: this.onCascadeDownClick\n      }, \"Cascade Down\"), postTitleRef);\n      var Elem2 = showStackList && react_dom__WEBPACK_IMPORTED_MODULE_13___default.a.createPortal(react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_components_StackList_StackList__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        iterations: stackListIterations,\n        activeIndex: stackListActiveIndex,\n        onClick: this.getStackIterationBlock\n      }), postRightpaneRef);\n      var subBlockViewName = this.props.subBlockView.get('name');\n      var breadCrumbItems = [{\n        name: modelName,\n        main: true\n      }];\n\n      if (subBlockViewName) {\n        breadCrumbItems.push({\n          name: subBlockViewName\n        });\n      }\n\n      if (pipeline.size && pipeline.get('name')) {\n        breadCrumbItems = [{\n          name: pipeline.get('name'),\n          type: 'pipeline'\n        }].concat(_toConsumableArray(breadCrumbItems));\n      }\n\n      var contextMenu = [{\n        text: 'Edit',\n        onClick: function onClick() {\n          return _this16.onLeftPaneItemInfoTabEditClick();\n        },\n        disabled: function disabled(node) {\n          return !node.editable;\n        }\n      }, {\n        text: 'Delete',\n        onClick: function onClick() {\n          return _this16.onLeftPaneItemInfoTabDeleteClick();\n        },\n        disabled: function disabled(node) {\n          return !node.editable;\n        }\n      }];\n      return react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_10__[\"Fragment\"], null, Elem, Elem2, react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_designerHelper_components_ModelSecondaryHeader_ModelSecondaryHeader__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n        modelName: modelName,\n        hasTemplate: hasTemplate,\n        showTransferWeights: this.showTransferPopup,\n        showViewCode: true,\n        getModelCode: function getModelCode() {\n          var builderDom = '';\n\n          if (_this16.builderRef.state.reducer.get('blocks').count() || _this16.builderRef.state.reducer.get('operators').count() || _this16.builderRef.state.reducer.get('stacks').count()) {\n            builderDom = Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_5__[\"encode\"])({\n              dom: document.getElementById('builderPaper').outerHTML\n            });\n          }\n\n          _this16.props.dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_GET_MODEL_CODE\"],\n            params: _this16.props.routeProps.match.params,\n            Aid: Aid,\n            modelId: modelId,\n            unsaved: _this16.state.builderUnsaved,\n            builderDom: builderDom,\n            callback: function callback() {\n              _this16.setState({\n                builderUnsaved: false\n              }, function () {\n                return _this16.builderRef.updateStateReducer(_this16.builderRef.state.reducer.set('unsaved', false));\n              });\n            }\n          }));\n        },\n        onResolveBtnClick: function onResolveBtnClick() {\n          _this16.props.dispatch(Object(_ModelPage_actions__WEBPACK_IMPORTED_MODULE_18__[\"showAndHidePopUp\"])({\n            type: 'MIGRATION_TO_NEW_VERSION',\n            show: true,\n            isModelDesigner: true,\n            getActiveChildProperties: function getActiveChildProperties(_ref16) {\n              var activeChildID = _ref16.activeChildID,\n                  activeItemProps = _ref16.activeItemProps;\n\n              var activeItem = activeItemProps || _this16.builderRef.state.reducer.getIn(['blocks', activeChildID]) || _this16.builderRef.state.reducer.getIn(['operators', activeChildID]);\n\n              activeItem = activeItem.merge(Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({\n                parameters: _this16.getParameters(activeItem, !!activeItemProps),\n                inputs: _this16.getInputOutput(activeItem, 'inputs', !!activeItemProps),\n                outputs: _this16.getInputOutput(activeItem, 'outputs', !!activeItemProps)\n              }));\n\n              if (activeItemProps) {\n                _this16.props.dispatch(Object(_ModelPage_actions__WEBPACK_IMPORTED_MODULE_18__[\"updateNewVersionProperties\"])({\n                  newVersionProperties: activeItem\n                }));\n              } else {\n                return activeItem;\n              }\n            },\n            updateBlockParameter: _this16.updateBlockParameter,\n            addParameter: _this16.addParameter,\n            deleteParameter: _this16.deleteParameter,\n            addIO: _this16.addIO,\n            deleteIO: _this16.deleteIO,\n            updateIOParameter: _this16.updateIOParameter,\n            getMigrationConflicts: function getMigrationConflicts() {\n              return dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n                NWCallType: _ModelPage_constants__WEBPACK_IMPORTED_MODULE_19__[\"ACTION_MIGRATION_DETAILS\"],\n                params: _this16.props.routeProps.match.params\n              }));\n            }\n          }));\n        },\n        breadcrumbsData: breadCrumbItems,\n        onBreadcrumbClick: this.onBreadCrumbClick,\n        scopes: scopes,\n        activeScopes: activeScopes.toJS(),\n        getAllScopes: function getAllScopes() {\n          return dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"makeOrderedNWCall\"])({\n            params: {\n              Aid: Aid,\n              modelId: modelId\n            },\n            NWCallType: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"ACTION_LOAD_ALL_SCOPES\"]\n          }));\n        },\n        onScopeUpdate: function onScopeUpdate(scope, active) {\n          return _this16.setState({\n            activeScopes: activeScopes.set(scope, active)\n          });\n        },\n        clearScopeSelection: function clearScopeSelection() {\n          return _this16.setState({\n            activeScopes: Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])({})\n          });\n        },\n        onDesignerClick: function onDesignerClick() {\n          var _searchStrToQueryObj2 = Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_5__[\"searchStrToQueryObj\"])(location.search),\n              pid = _searchStrToQueryObj2.pid;\n\n          history.push(Object(_rzt_eva_utils__WEBPACK_IMPORTED_MODULE_1__[\"replaceParams\"])(\"\".concat(_routeConstants__WEBPACK_IMPORTED_MODULE_15__[\"default\"].DL_MODELS_DESIGNER).concat(pid ? \"?pid=\".concat(pid) : ''), match.params));\n        },\n        onRunnerClick: function onRunnerClick() {\n          var _searchStrToQueryObj3 = Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_5__[\"searchStrToQueryObj\"])(location.search),\n              pid = _searchStrToQueryObj3.pid;\n\n          history.push(Object(_rzt_eva_utils__WEBPACK_IMPORTED_MODULE_1__[\"replaceParams\"])(\"\".concat(_routeConstants__WEBPACK_IMPORTED_MODULE_15__[\"default\"].DL_MODELS_DESIGNER_RUNNER_LIST).concat(pid ? \"?pid=\".concat(pid) : ''), match.params));\n        },\n        inDesign: true,\n        showExport: false,\n        showSave: true,\n        showVariableScopeErrorWrapper: true,\n        onSaveClick: this.onSaveClick,\n        classes: {},\n        errors: errors,\n        scopesLoading: scopesLoading,\n        unsaved: builderUnsaved,\n        showScopes: true,\n        showErrors: true,\n        daysToResolve: this.props.daysToResolve\n      }), react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_components_ModelBuilderPopup_ModelBuilderPopup__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n        popup: popup,\n        modelName: modelName,\n        modelId: modelId,\n        eaiId: this.eaiId,\n        dispatch: dispatch,\n        blockEditValues: blockEditValues.toJS(),\n        blockTemplates: templates,\n        getBlockEditErrors: this.getBlockEditErrors,\n        createBlockKeys: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_32__[\"CREATE_BLOCK_KEYS\"],\n        onUpdatePopUp: function onUpdatePopUp(_ref17) {\n          var code = _ref17.code,\n              popupType = _ref17.popupType,\n              popupData = _ref17.popupData;\n\n          if (popupType === 'JSON_EDITOR') {\n            _this16.onDualJSONEditorPopupDoneClick(code);\n          } else {\n            _this16.builderRef.onUpdate(code, popupType, popupData);\n          }\n        }\n      }), react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_3__[\"Builder\"], {\n        daysToResolve: this.props.daysToResolve,\n        popup: popup,\n        builderType: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"BUILDER_TYPES\"].MODEL_BUILDER,\n        setRef: function setRef(node) {\n          _this16.builderRef = node;\n        },\n        setPaperRef: function setPaperRef(node) {\n          _this16.paperRef = node;\n        },\n        key: \"Model Designer\",\n        leftPaneTitle: \"MODEL BUILDER\",\n        initialBlocks: blocks,\n        initialConnections: connections,\n        initialOperators: operators,\n        initialStacks: stacks,\n        showLeftPaneView: true,\n        nodes: nodes,\n        orderLeftPaneKey: \"order\",\n        showRightPane: showRightPane,\n        showStackList: showStackList,\n        blockNameKey: \"name\",\n        parametersNameKey: \"internal_name\",\n        outputsKey: \"outputs\",\n        isBlockErrored: this.isBlockErrored,\n        isConnectionErrored: function isConnectionErrored(connectionId) {\n          return validations.getIn(['connections', connectionId, 'error'], Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])([])).toJS();\n        },\n        isOperatorErrored: function isOperatorErrored(blockId) {\n          return _this16.isBlockErrored({\n            id: blockId\n          });\n        },\n        isInputErrored: function isInputErrored(blockId, slotId) {\n          return validations.getIn(['blocks', blockId, 'slots', 'input', slotId, 'error'], Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])([])).toJS();\n        },\n        isOutputErrored: function isOutputErrored(blockId, slotId) {\n          return validations.getIn(['blocks', blockId, 'slots', 'output', slotId, 'error'], Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])([])).toJS();\n        },\n        isStackErrored: function isStackErrored(blockId) {\n          return validations.getIn(['stacks', blockId, 'error'], Object(immutable__WEBPACK_IMPORTED_MODULE_7__[\"fromJS\"])([])).toJS();\n        },\n        validations: validations,\n        keyPaths: {\n          accordionLabel: ['label'],\n          accordionTitle: ['title'],\n          showAddButton: ['showAddButton'],\n          nestedAccordionTitle: ['name'],\n          nestedAccordionData: ['items'],\n          nestedAccordionType: ['type'],\n          nestedAccordionBlocks: ['items'],\n          groupName: ['group_name'],\n          parametersName: ['internal_name'],\n          blockName: ['label'],\n          blockInputDentLabel: ['label'],\n          blockOutputDentLabel: ['label'],\n          operatorInputDentLabel: ['label'],\n          operatorOutputDentLabel: ['label'],\n          operatorName: ['label'],\n          operatorLabel: ['label'],\n          operatorInputs: ['inputs'],\n          operatorOutputs: ['outputs'],\n          operatorMultipleInput: ['multipleInput'],\n          operatorMultipleOutput: ['multipleOutput'],\n          operatorIcon: ['iconName'],\n          description: ['description'],\n          createdBy: ['createdBy'],\n          lastModifiedBy: ['lastModifiedBy'],\n          lastModifiedOn: ['lastModifiedOn'],\n          createdOn: ['createdOn'],\n          artifactId: ['id'],\n          technology: ['technology'],\n          component_id: ['component_id'],\n          stackName: ['name'],\n          editable: ['editable'],\n          position: ['ui_param', 'position']\n        },\n        contextMenuItems: {\n          CODE: contextMenu,\n          METRIC: contextMenu,\n          LAYER: contextMenu,\n          BUFFER: contextMenu,\n          COST: contextMenu,\n          STACK: contextMenu,\n          GROUP: contextMenu,\n          OPTIMIZER: contextMenu\n        },\n        infoTabIndex: 0,\n        highlightChildren: this.getHighlightChildren(),\n        borderHighlightChildren: borderHighlightChildren,\n        deleteChild: function deleteChild(obj) {\n          return _this16.deleteChild(obj);\n        },\n        duplicateChild: function duplicateChild(child) {\n          return _this16.duplicateChild(_objectSpread({}, child, {\n            x1: null,\n            y1: null\n          }));\n        },\n        moveChild: this.moveChild,\n        dropChild: function dropChild(obj) {\n          return _this16.addChild(obj);\n        },\n        addConnectionToChild: this.addConnectionToChild,\n        rightPaneClasses: {\n          wrapper: classnames__WEBPACK_IMPORTED_MODULE_6___default()(_designerHelper_ModelDesigner_css__WEBPACK_IMPORTED_MODULE_22___default.a.rightPaneWrapper, _defineProperty({}, _designerHelper_ModelDesigner_css__WEBPACK_IMPORTED_MODULE_22___default.a.rightPaneWrapperCollapse, !showRightPaneTabContent))\n        },\n        unsetActiveChild: this.onChildUnselect,\n        editable: this.props.activeExpertAI.get('permission') !== 'View',\n        setActiveChild: this.onChildSelect,\n        rightPaneData: this.getRightPaneData(),\n        addIconClick: this.showPopup,\n        switchRightPaneTabs: this.switchRightPaneTabs,\n        onNodeInfoClick: this.onNodeInfoClick,\n        onNodeInfoClickHandleFromParent: true,\n        rightPaneActiveUid: this.state.rightPaneActiveUid,\n        clearParentState: function clearParentState() {\n          return dispatch(Object(_ModelDesigner_actions__WEBPACK_IMPORTED_MODULE_31__[\"clearBlocksOperatorsConnections\"])());\n        },\n        onBlockDoubleClick: this.onBlockDoubleClick,\n        dispatch: dispatch,\n        showExtraContextMenu: true,\n        getCustomContextMenuItems: this.getCustomContextMenuItems,\n        onRightPaneTabContentToggle: function onRightPaneTabContentToggle(visibility) {\n          if (activeChild.get('stackID')) {\n            _this16.builderRef.updateStateReducer(_this16.builderRef.state.reducer.set('showRightPane', visibility));\n          } else {\n            _this16.builderRef.updateState({\n              showRightPaneTabContent: visibility\n            });\n          }\n        },\n        getBlockCustomTopRightElement: function getBlockCustomTopRightElement(_ref18) {\n          var type = _ref18.type,\n              id = _ref18.id;\n\n          if (type === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"PaperChildrenTypes\"].GROUP && _this16.builderRef.state.reducer.getIn(['blocks', id, 'shared'])) {\n            return react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(\"div\", {\n              onMouseEnter: function onMouseEnter() {\n                clearTimeout(_this16.timer);\n\n                _this16.setState({\n                  showSharedWeightsTooltips: _defineProperty({}, id, true)\n                });\n              },\n              onMouseLeave: function onMouseLeave() {\n                _this16.timer = setTimeout(function () {\n                  _this16.setState({\n                    showSharedWeightsTooltips: _defineProperty({}, id, false)\n                  });\n                }, 500);\n              }\n            }, react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(\"span\", {\n              ref: function ref(node) {\n                _this16.sharedWeightsIconRefs[id] = node;\n              },\n              className: _designerHelper_ModelDesigner_css__WEBPACK_IMPORTED_MODULE_22___default.a.blockCustomTopRightElement\n            }, 'SW'), _this16.state.showSharedWeightsTooltips[id] && react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_rzt_eva__WEBPACK_IMPORTED_MODULE_0__[\"Tooltip\"], {\n              targetRef: _this16.sharedWeightsIconRefs[id],\n              tooltipPosition: \"right-center\",\n              autoAlign: false,\n              classes: {\n                textContent: _designerHelper_ModelDesigner_css__WEBPACK_IMPORTED_MODULE_22___default.a.error_wrapper,\n                arrow: _designerHelper_ModelDesigner_css__WEBPACK_IMPORTED_MODULE_22___default.a.error_arrow,\n                wrapper: _designerHelper_ModelDesigner_css__WEBPACK_IMPORTED_MODULE_22___default.a.tooltipWrapper\n              },\n              content: react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_10__[\"Fragment\"], null, react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(\"span\", {\n                className: _designerHelper_ModelDesigner_css__WEBPACK_IMPORTED_MODULE_22___default.a.tooltipWrapperTitle\n              }, \"This group shares weights and biases with these groups:\"), react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(\"ul\", null, _this16.builderRef.state.reducer.getIn(['blocks', id, 'sharesWith']).map(function (iItem) {\n                return react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(\"li\", {\n                  key: iItem\n                }, _this16.builderRef.state.reducer.getIn(['blocks', iItem, 'name']));\n              })))\n            }));\n          }\n\n          return null;\n        },\n        canDrag: this.canDrag,\n        inParentDragComponent: this.isInParentDragComponent,\n        unSavedChanges: this.onBuilderSaveStateChange\n      }), affectedEntitiesPopup.show && react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_designerHelper_components_AffectedEntitiesPopup_AffectedEntitiesPopup__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n        header: affectedEntitiesPopup.header,\n        entities: affectedModels,\n        columns: [{\n          key: 'modelName',\n          name: 'Model Name'\n        }, {\n          key: 'noOfInstances',\n          name: 'No. of instances',\n          Cell: function Cell(_ref19) {\n            var original = _ref19.original;\n            return react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(\"span\", {\n              className: _designerHelper_ModelDesigner_css__WEBPACK_IMPORTED_MODULE_22___default.a.rightAlign\n            }, original.noOfInstances);\n          }\n        }, {\n          key: 'createdBy',\n          name: 'Created By'\n        }, {\n          key: 'createdOn',\n          name: 'Created On',\n          Cell: function Cell(_ref20) {\n            var original = _ref20.original;\n            return original.createdOn && react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(\"span\", null, Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_5__[\"getDateWithAlphaFromISO\"])(original.createdOn));\n          }\n        }, {\n          key: 'modifiedBy',\n          name: 'Last Modified By'\n        }, {\n          key: 'modifiedOn',\n          name: 'Last Modified On',\n          Cell: function Cell(_ref21) {\n            var original = _ref21.original;\n            return original.modifiedOn && react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(\"span\", null, Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_5__[\"getDateWithAlphaFromISO\"])(original.modifiedOn));\n          }\n        }],\n        popupFooter: [react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n          onClick: function onClick() {\n            return _this16.setState({\n              affectedEntitiesPopup: {}\n            });\n          },\n          classes: {\n            button: _designerHelper_ModelDesigner_css__WEBPACK_IMPORTED_MODULE_22___default.a.popupButtons\n          },\n          secondary: true\n        }, \"Cancel\"), react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n          onClick: affectedEntitiesPopup.onConfirmButtonClick,\n          classes: {\n            button: _designerHelper_ModelDesigner_css__WEBPACK_IMPORTED_MODULE_22___default.a.popupButtons\n          }\n        }, affectedEntitiesPopup.confirmButtonText)]\n      }));\n    }\n  }]);\n\n  return ModelDesigner;\n}(_ModelClasses__WEBPACK_IMPORTED_MODULE_30__[\"default\"]), _defineProperty(_class2, \"propTypes\", {\n  nodes: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customPropTypes\"].ImmutableMap,\n  nodePaths: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customPropTypes\"].ImmutableMap,\n  blocks: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customPropTypes\"].ImmutableMap,\n  operators: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customPropTypes\"].ImmutableMap,\n  stacks: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customPropTypes\"].ImmutableMap,\n  pipeline: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customPropTypes\"].ImmutableMap,\n  connections: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customPropTypes\"].ImmutableMap,\n  scopes: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customPropTypes\"].ImmutableMap,\n  createBlockErrors: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customPropTypes\"].ImmutableMap,\n  dispatch: prop_types__WEBPACK_IMPORTED_MODULE_9___default.a.func,\n  routeProps: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"routePropType\"],\n  validations: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customPropTypes\"].ImmutableMap,\n  subBlockView: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customPropTypes\"].ImmutableMap,\n  loggedInUser: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customPropTypes\"].ImmutableMap,\n  history: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customPropTypes\"].Object,\n  match: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customPropTypes\"].Object,\n  affectedModels: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customPropTypes\"].ImmutableMap,\n  modelName: prop_types__WEBPACK_IMPORTED_MODULE_9___default.a.string,\n  errors: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customPropTypes\"].ImmutableList,\n  templates: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customPropTypes\"].ImmutableMap,\n  blockEditValues: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customPropTypes\"].ImmutableMap,\n  scopesLoading: prop_types__WEBPACK_IMPORTED_MODULE_9___default.a.bool,\n  popup: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customPropTypes\"].ImmutableMap\n}), _defineProperty(_class2, \"defaultProps\", {\n  nodes: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customDefaultProps\"].ImmutableMap,\n  nodePaths: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customDefaultProps\"].ImmutableMap,\n  pipeline: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customDefaultProps\"].ImmutableMap,\n  blocks: undefined,\n  scopes: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customDefaultProps\"].ImmutableMap,\n  createBlockErrors: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customDefaultProps\"].ImmutableMap,\n  operators: undefined,\n  stacks: undefined,\n  connections: undefined,\n  dispatch: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customDefaultProps\"].func,\n  routeProps: {},\n  validations: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customDefaultProps\"].ImmutableMap,\n  subBlockView: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customDefaultProps\"].ImmutableMap,\n  loggedInUser: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customDefaultProps\"].ImmutableMap,\n  history: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customDefaultProps\"].Object,\n  match: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customDefaultProps\"].Object,\n  affectedModels: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customDefaultProps\"].ImmutableMap,\n  modelName: '',\n  errors: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customDefaultProps\"].ImmutableList,\n  templates: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customDefaultProps\"].ImmutableMap,\n  blockEditValues: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customDefaultProps\"].ImmutableMap,\n  scopesLoading: false,\n  popup: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_4__[\"customDefaultProps\"].ImmutableMap\n}), _temp)) || _class);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_14__[\"connect\"])(_ModelDesigner_selector__WEBPACK_IMPORTED_MODULE_33__[\"ModelSelector\"])(ModelDesigner));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.js\n");

/***/ }),

/***/ "./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/CreateGroupTab/CreateGroupTab.css":
/*!*********************************************************************************************************!*\
  !*** ./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/CreateGroupTab/CreateGroupTab.css ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionButtonWrapper\":\"CreateGroupTab__actionButtonWrapper___3dU2x\",\"actionButton\":\"CreateGroupTab__actionButton___r_o7X\",\"createBtn\":\"CreateGroupTab__createBtn___PStRb\",\"formInputWrapper\":\"CreateGroupTab__formInputWrapper___jnOYi\",\"formInputLabel\":\"CreateGroupTab__formInputLabel___2XKYg\",\"formInputContainer\":\"CreateGroupTab__formInputContainer___1s1Uy\",\"formTextareaWrapper\":\"CreateGroupTab__formTextareaWrapper___4fCU8\",\"formTextareaContainer\":\"CreateGroupTab__formTextareaContainer___DYVzD\",\"formInputBox\":\"CreateGroupTab__formInputBox___2J0Z3\",\"formTextBox\":\"CreateGroupTab__formTextBox____R2fQ\"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHBzL01vZGVsL3NyYy9wYWdlcy9Nb2RlbFBhZ2UvcGFnZXMvTW9kZWxEZXNpZ25lci9jb21wb25lbnRzL0NyZWF0ZUdyb3VwVGFiL0NyZWF0ZUdyb3VwVGFiLmNzcz9iYTk0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0Esa0JBQWtCIiwiZmlsZSI6Ii4vYXBwcy9Nb2RlbC9zcmMvcGFnZXMvTW9kZWxQYWdlL3BhZ2VzL01vZGVsRGVzaWduZXIvY29tcG9uZW50cy9DcmVhdGVHcm91cFRhYi9DcmVhdGVHcm91cFRhYi5jc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wiYWN0aW9uQnV0dG9uV3JhcHBlclwiOlwiQ3JlYXRlR3JvdXBUYWJfX2FjdGlvbkJ1dHRvbldyYXBwZXJfX18zZFUyeFwiLFwiYWN0aW9uQnV0dG9uXCI6XCJDcmVhdGVHcm91cFRhYl9fYWN0aW9uQnV0dG9uX19fcl9vN1hcIixcImNyZWF0ZUJ0blwiOlwiQ3JlYXRlR3JvdXBUYWJfX2NyZWF0ZUJ0bl9fX1BTdFJiXCIsXCJmb3JtSW5wdXRXcmFwcGVyXCI6XCJDcmVhdGVHcm91cFRhYl9fZm9ybUlucHV0V3JhcHBlcl9fX2puT1lpXCIsXCJmb3JtSW5wdXRMYWJlbFwiOlwiQ3JlYXRlR3JvdXBUYWJfX2Zvcm1JbnB1dExhYmVsX19fMlhLWWdcIixcImZvcm1JbnB1dENvbnRhaW5lclwiOlwiQ3JlYXRlR3JvdXBUYWJfX2Zvcm1JbnB1dENvbnRhaW5lcl9fXzFzMVV5XCIsXCJmb3JtVGV4dGFyZWFXcmFwcGVyXCI6XCJDcmVhdGVHcm91cFRhYl9fZm9ybVRleHRhcmVhV3JhcHBlcl9fXzRmQ1U4XCIsXCJmb3JtVGV4dGFyZWFDb250YWluZXJcIjpcIkNyZWF0ZUdyb3VwVGFiX19mb3JtVGV4dGFyZWFDb250YWluZXJfX19EWVZ6RFwiLFwiZm9ybUlucHV0Qm94XCI6XCJDcmVhdGVHcm91cFRhYl9fZm9ybUlucHV0Qm94X19fMkowWjNcIixcImZvcm1UZXh0Qm94XCI6XCJDcmVhdGVHcm91cFRhYl9fZm9ybVRleHRCb3hfX19fUjJmUVwifTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/CreateGroupTab/CreateGroupTab.css\n");

/***/ }),

/***/ "./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/CreateGroupTab/CreateGroupTab.js":
/*!********************************************************************************************************!*\
  !*** ./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/CreateGroupTab/CreateGroupTab.js ***!
  \********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CreateGroupTab; });\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _commons_src_index_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../../../commons/src/index.components */ \"./commons/src/index.components.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _CreateGroupTab_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./CreateGroupTab.css */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/CreateGroupTab/CreateGroupTab.css\");\n/* harmony import */ var _CreateGroupTab_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_CreateGroupTab_css__WEBPACK_IMPORTED_MODULE_4__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\nvar CreateGroupTab =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateGroupTab, _Component);\n\n  function CreateGroupTab(props, context) {\n    var _this;\n\n    _classCallCheck(this, CreateGroupTab);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateGroupTab).call(this, props, context));\n    _this.state = {\n      name: props.name,\n      description: props.description\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CreateGroupTab, [{\n    key: \"onChange\",\n    value: function onChange(key, value) {\n      this.setState(_defineProperty({}, key, value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          onCreate = _this$props.onCreate,\n          onCancel = _this$props.onCancel;\n      var _this$state = this.state,\n          name = _this$state.name,\n          description = _this$state.description;\n      return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"div\", {\n        className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(_CreateGroupTab_css__WEBPACK_IMPORTED_MODULE_4___default.a.wrapper)\n      }, react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_1__[\"Input\"], {\n        label: \"Name\",\n        classes: {\n          formWrapper: _CreateGroupTab_css__WEBPACK_IMPORTED_MODULE_4___default.a.formInputWrapper,\n          label: _CreateGroupTab_css__WEBPACK_IMPORTED_MODULE_4___default.a.formInputLabel,\n          inputWrapper: _CreateGroupTab_css__WEBPACK_IMPORTED_MODULE_4___default.a.formInputContainer,\n          input: _CreateGroupTab_css__WEBPACK_IMPORTED_MODULE_4___default.a.formInputBox\n        },\n        value: name,\n        onBlur: function onBlur(e) {\n          return _this2.onChange('name', e.target.value);\n        }\n      }), react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_1__[\"Input\"], {\n        label: \"Description\",\n        type: \"textarea\",\n        classes: {\n          formWrapper: _CreateGroupTab_css__WEBPACK_IMPORTED_MODULE_4___default.a.formTextareaWrapper,\n          label: _CreateGroupTab_css__WEBPACK_IMPORTED_MODULE_4___default.a.formInputLabel,\n          inputWrapper: _CreateGroupTab_css__WEBPACK_IMPORTED_MODULE_4___default.a.formTextareaContainer,\n          textarea: classnames__WEBPACK_IMPORTED_MODULE_0___default()(_CreateGroupTab_css__WEBPACK_IMPORTED_MODULE_4___default.a.formInputBox, _CreateGroupTab_css__WEBPACK_IMPORTED_MODULE_4___default.a.formTextBox)\n        },\n        value: description,\n        onBlur: function onBlur(e) {\n          return _this2.onChange('description', e.target.value);\n        }\n      }), react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"div\", {\n        className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(_CreateGroupTab_css__WEBPACK_IMPORTED_MODULE_4___default.a.actionButtonWrapper)\n      }, react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_1__[\"Button\"], {\n        secondary: true,\n        className: _CreateGroupTab_css__WEBPACK_IMPORTED_MODULE_4___default.a.actionButton,\n        onClick: onCancel,\n        title: \"Cancel\"\n      }, \"Cancel\"), react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_1__[\"Button\"], {\n        className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(_CreateGroupTab_css__WEBPACK_IMPORTED_MODULE_4___default.a.createBtn),\n        onClick: function onClick() {\n          onCreate({\n            name: name,\n            description: description\n          });\n        },\n        title: \"Create\"\n      }, \"Create\")));\n    }\n  }]);\n\n  return CreateGroupTab;\n}(react__WEBPACK_IMPORTED_MODULE_3__[\"Component\"]);\n\n_defineProperty(CreateGroupTab, \"propTypes\", {\n  onCreate: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n  onCancel: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n  name: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.string,\n  description: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.string\n});\n\n_defineProperty(CreateGroupTab, \"defaultProps\", {\n  onCreate: function onCreate(f) {\n    return f;\n  },\n  onCancel: function onCancel(f) {\n    return f;\n  },\n  name: '',\n  description: ''\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHBzL01vZGVsL3NyYy9wYWdlcy9Nb2RlbFBhZ2UvcGFnZXMvTW9kZWxEZXNpZ25lci9jb21wb25lbnRzL0NyZWF0ZUdyb3VwVGFiL0NyZWF0ZUdyb3VwVGFiLmpzP2M1NzEiXSwibmFtZXMiOlsiQ3JlYXRlR3JvdXBUYWIiLCJwcm9wcyIsImNvbnRleHQiLCJzdGF0ZSIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsIm9uQ2hhbmdlIiwiYmluZCIsImtleSIsInZhbHVlIiwic2V0U3RhdGUiLCJvbkNyZWF0ZSIsIm9uQ2FuY2VsIiwiY2xhc3NOYW1lcyIsInN0eWxlcyIsIndyYXBwZXIiLCJmb3JtV3JhcHBlciIsImZvcm1JbnB1dFdyYXBwZXIiLCJsYWJlbCIsImZvcm1JbnB1dExhYmVsIiwiaW5wdXRXcmFwcGVyIiwiZm9ybUlucHV0Q29udGFpbmVyIiwiaW5wdXQiLCJmb3JtSW5wdXRCb3giLCJlIiwidGFyZ2V0IiwiZm9ybVRleHRhcmVhV3JhcHBlciIsImZvcm1UZXh0YXJlYUNvbnRhaW5lciIsInRleHRhcmVhIiwiZm9ybVRleHRCb3giLCJhY3Rpb25CdXR0b25XcmFwcGVyIiwiYWN0aW9uQnV0dG9uIiwiY3JlYXRlQnRuIiwiQ29tcG9uZW50IiwiUHJvcFR5cGVzIiwiZnVuYyIsInN0cmluZyIsImYiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztJQUVxQkEsYzs7Ozs7QUFlbkIsMEJBQVlDLEtBQVosRUFBbUJDLE9BQW5CLEVBQTRCO0FBQUE7O0FBQUE7O0FBQzFCLHdGQUFNRCxLQUFOLEVBQWFDLE9BQWI7QUFDQSxVQUFLQyxLQUFMLEdBQWE7QUFDWEMsVUFBSSxFQUFFSCxLQUFLLENBQUNHLElBREQ7QUFFWEMsaUJBQVcsRUFBRUosS0FBSyxDQUFDSTtBQUZSLEtBQWI7QUFJQSxVQUFLQyxRQUFMLEdBQWdCLE1BQUtBLFFBQUwsQ0FBY0MsSUFBZCx1REFBaEI7QUFOMEI7QUFPM0I7Ozs7NkJBRVFDLEcsRUFBS0MsSyxFQUFPO0FBQ25CLFdBQUtDLFFBQUwscUJBQWlCRixHQUFqQixFQUF1QkMsS0FBdkI7QUFDRDs7OzZCQUVRO0FBQUE7O0FBQUEsd0JBQ3dCLEtBQUtSLEtBRDdCO0FBQUEsVUFDQ1UsUUFERCxlQUNDQSxRQUREO0FBQUEsVUFDV0MsUUFEWCxlQUNXQSxRQURYO0FBQUEsd0JBRXVCLEtBQUtULEtBRjVCO0FBQUEsVUFFQ0MsSUFGRCxlQUVDQSxJQUZEO0FBQUEsVUFFT0MsV0FGUCxlQUVPQSxXQUZQO0FBR1AsYUFDRTtBQUFLLGlCQUFTLEVBQUVRLGlEQUFVLENBQUNDLDBEQUFNLENBQUNDLE9BQVI7QUFBMUIsU0FDRSwyREFBQyxtRUFBRDtBQUNFLGFBQUssRUFBQyxNQURSO0FBRUUsZUFBTyxFQUFFO0FBQ1BDLHFCQUFXLEVBQUVGLDBEQUFNLENBQUNHLGdCQURiO0FBRVBDLGVBQUssRUFBRUosMERBQU0sQ0FBQ0ssY0FGUDtBQUdQQyxzQkFBWSxFQUFFTiwwREFBTSxDQUFDTyxrQkFIZDtBQUlQQyxlQUFLLEVBQUVSLDBEQUFNLENBQUNTO0FBSlAsU0FGWDtBQVFFLGFBQUssRUFBRW5CLElBUlQ7QUFTRSxjQUFNLEVBQUUsZ0JBQUFvQixDQUFDO0FBQUEsaUJBQUksTUFBSSxDQUFDbEIsUUFBTCxDQUFjLE1BQWQsRUFBc0JrQixDQUFDLENBQUNDLE1BQUYsQ0FBU2hCLEtBQS9CLENBQUo7QUFBQTtBQVRYLFFBREYsRUFZRSwyREFBQyxtRUFBRDtBQUNFLGFBQUssRUFBQyxhQURSO0FBRUUsWUFBSSxFQUFDLFVBRlA7QUFHRSxlQUFPLEVBQUU7QUFDUE8scUJBQVcsRUFBRUYsMERBQU0sQ0FBQ1ksbUJBRGI7QUFFUFIsZUFBSyxFQUFFSiwwREFBTSxDQUFDSyxjQUZQO0FBR1BDLHNCQUFZLEVBQUVOLDBEQUFNLENBQUNhLHFCQUhkO0FBSVBDLGtCQUFRLEVBQUVmLGlEQUFVLENBQUNDLDBEQUFNLENBQUNTLFlBQVIsRUFBc0JULDBEQUFNLENBQUNlLFdBQTdCO0FBSmIsU0FIWDtBQVNFLGFBQUssRUFBRXhCLFdBVFQ7QUFVRSxjQUFNLEVBQUUsZ0JBQUFtQixDQUFDO0FBQUEsaUJBQUksTUFBSSxDQUFDbEIsUUFBTCxDQUFjLGFBQWQsRUFBNkJrQixDQUFDLENBQUNDLE1BQUYsQ0FBU2hCLEtBQXRDLENBQUo7QUFBQTtBQVZYLFFBWkYsRUF3QkU7QUFBSyxpQkFBUyxFQUFFSSxpREFBVSxDQUFDQywwREFBTSxDQUFDZ0IsbUJBQVI7QUFBMUIsU0FDRSwyREFBQyxvRUFBRDtBQUNFLGlCQUFTLE1BRFg7QUFFRSxpQkFBUyxFQUFFaEIsMERBQU0sQ0FBQ2lCLFlBRnBCO0FBR0UsZUFBTyxFQUFFbkIsUUFIWDtBQUlFLGFBQUssRUFBQztBQUpSLGtCQURGLEVBU0UsMkRBQUMsb0VBQUQ7QUFDRSxpQkFBUyxFQUFFQyxpREFBVSxDQUFDQywwREFBTSxDQUFDa0IsU0FBUixDQUR2QjtBQUVFLGVBQU8sRUFBRSxtQkFBTTtBQUNickIsa0JBQVEsQ0FBQztBQUFFUCxnQkFBSSxFQUFKQSxJQUFGO0FBQVFDLHVCQUFXLEVBQVhBO0FBQVIsV0FBRCxDQUFSO0FBQ0QsU0FKSDtBQUtFLGFBQUssRUFBQztBQUxSLGtCQVRGLENBeEJGLENBREY7QUE4Q0Q7Ozs7RUE3RXlDNEIsK0M7O2dCQUF2QmpDLGMsZUFDQTtBQUNqQlcsVUFBUSxFQUFFdUIsaURBQVMsQ0FBQ0MsSUFESDtBQUVqQnZCLFVBQVEsRUFBRXNCLGlEQUFTLENBQUNDLElBRkg7QUFHakIvQixNQUFJLEVBQUU4QixpREFBUyxDQUFDRSxNQUhDO0FBSWpCL0IsYUFBVyxFQUFFNkIsaURBQVMsQ0FBQ0U7QUFKTixDOztnQkFEQXBDLGMsa0JBUUc7QUFDcEJXLFVBQVEsRUFBRSxrQkFBQTBCLENBQUM7QUFBQSxXQUFJQSxDQUFKO0FBQUEsR0FEUztBQUVwQnpCLFVBQVEsRUFBRSxrQkFBQXlCLENBQUM7QUFBQSxXQUFJQSxDQUFKO0FBQUEsR0FGUztBQUdwQmpDLE1BQUksRUFBRSxFQUhjO0FBSXBCQyxhQUFXLEVBQUU7QUFKTyxDIiwiZmlsZSI6Ii4vYXBwcy9Nb2RlbC9zcmMvcGFnZXMvTW9kZWxQYWdlL3BhZ2VzL01vZGVsRGVzaWduZXIvY29tcG9uZW50cy9DcmVhdGVHcm91cFRhYi9DcmVhdGVHcm91cFRhYi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuXG5pbXBvcnQgeyBCdXR0b24sIElucHV0IH0gZnJvbSAnQkJDb21wb25lbnRzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuL0NyZWF0ZUdyb3VwVGFiLmNzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENyZWF0ZUdyb3VwVGFiIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBvbkNyZWF0ZTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25DYW5jZWw6IFByb3BUeXBlcy5mdW5jLFxuICAgIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZGVzY3JpcHRpb246IFByb3BUeXBlcy5zdHJpbmcsXG4gIH07XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBvbkNyZWF0ZTogZiA9PiBmLFxuICAgIG9uQ2FuY2VsOiBmID0+IGYsXG4gICAgbmFtZTogJycsXG4gICAgZGVzY3JpcHRpb246ICcnLFxuICB9O1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzLCBjb250ZXh0KSB7XG4gICAgc3VwZXIocHJvcHMsIGNvbnRleHQpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBuYW1lOiBwcm9wcy5uYW1lLFxuICAgICAgZGVzY3JpcHRpb246IHByb3BzLmRlc2NyaXB0aW9uLFxuICAgIH07XG4gICAgdGhpcy5vbkNoYW5nZSA9IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzKTtcbiAgfVxuXG4gIG9uQ2hhbmdlKGtleSwgdmFsdWUpIHtcbiAgICB0aGlzLnNldFN0YXRlKHsgW2tleV06IHZhbHVlIH0pO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgb25DcmVhdGUsIG9uQ2FuY2VsIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHsgbmFtZSwgZGVzY3JpcHRpb24gfSA9IHRoaXMuc3RhdGU7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWVzKHN0eWxlcy53cmFwcGVyKX0+XG4gICAgICAgIDxJbnB1dFxuICAgICAgICAgIGxhYmVsPVwiTmFtZVwiXG4gICAgICAgICAgY2xhc3Nlcz17e1xuICAgICAgICAgICAgZm9ybVdyYXBwZXI6IHN0eWxlcy5mb3JtSW5wdXRXcmFwcGVyLFxuICAgICAgICAgICAgbGFiZWw6IHN0eWxlcy5mb3JtSW5wdXRMYWJlbCxcbiAgICAgICAgICAgIGlucHV0V3JhcHBlcjogc3R5bGVzLmZvcm1JbnB1dENvbnRhaW5lcixcbiAgICAgICAgICAgIGlucHV0OiBzdHlsZXMuZm9ybUlucHV0Qm94LFxuICAgICAgICAgIH19XG4gICAgICAgICAgdmFsdWU9e25hbWV9XG4gICAgICAgICAgb25CbHVyPXtlID0+IHRoaXMub25DaGFuZ2UoJ25hbWUnLCBlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgIC8+XG4gICAgICAgIDxJbnB1dFxuICAgICAgICAgIGxhYmVsPVwiRGVzY3JpcHRpb25cIlxuICAgICAgICAgIHR5cGU9XCJ0ZXh0YXJlYVwiXG4gICAgICAgICAgY2xhc3Nlcz17e1xuICAgICAgICAgICAgZm9ybVdyYXBwZXI6IHN0eWxlcy5mb3JtVGV4dGFyZWFXcmFwcGVyLFxuICAgICAgICAgICAgbGFiZWw6IHN0eWxlcy5mb3JtSW5wdXRMYWJlbCxcbiAgICAgICAgICAgIGlucHV0V3JhcHBlcjogc3R5bGVzLmZvcm1UZXh0YXJlYUNvbnRhaW5lcixcbiAgICAgICAgICAgIHRleHRhcmVhOiBjbGFzc05hbWVzKHN0eWxlcy5mb3JtSW5wdXRCb3gsIHN0eWxlcy5mb3JtVGV4dEJveCksXG4gICAgICAgICAgfX1cbiAgICAgICAgICB2YWx1ZT17ZGVzY3JpcHRpb259XG4gICAgICAgICAgb25CbHVyPXtlID0+IHRoaXMub25DaGFuZ2UoJ2Rlc2NyaXB0aW9uJywgZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAvPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhzdHlsZXMuYWN0aW9uQnV0dG9uV3JhcHBlcil9PlxuICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgIHNlY29uZGFyeVxuICAgICAgICAgICAgY2xhc3NOYW1lPXtzdHlsZXMuYWN0aW9uQnV0dG9ufVxuICAgICAgICAgICAgb25DbGljaz17b25DYW5jZWx9XG4gICAgICAgICAgICB0aXRsZT1cIkNhbmNlbFwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgQ2FuY2VsXG4gICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKHN0eWxlcy5jcmVhdGVCdG4pfVxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICBvbkNyZWF0ZSh7IG5hbWUsIGRlc2NyaXB0aW9uIH0pO1xuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIHRpdGxlPVwiQ3JlYXRlXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICBDcmVhdGVcbiAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/CreateGroupTab/CreateGroupTab.js\n");

/***/ }),

/***/ "./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/CreateStackTab/CreateStackTab.css":
/*!*********************************************************************************************************!*\
  !*** ./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/CreateStackTab/CreateStackTab.css ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionButtonWrapper\":\"CreateStackTab__actionButtonWrapper___1joeB\",\"actionButton\":\"CreateStackTab__actionButton___1eJ3-\",\"createBtn\":\"CreateStackTab__createBtn___2X2Pd\",\"formInputWrapper\":\"CreateStackTab__formInputWrapper___2pbMt\",\"formInputLabel\":\"CreateStackTab__formInputLabel___sE3u_\",\"formInputContainer\":\"CreateStackTab__formInputContainer___2S6RI\",\"formTextareaWrapper\":\"CreateStackTab__formTextareaWrapper___2p8-_\",\"formTextareaContainer\":\"CreateStackTab__formTextareaContainer___lt0ko\",\"formInputBox\":\"CreateStackTab__formInputBox___493ll\",\"formTextBox\":\"CreateStackTab__formTextBox___3UnBG\"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHBzL01vZGVsL3NyYy9wYWdlcy9Nb2RlbFBhZ2UvcGFnZXMvTW9kZWxEZXNpZ25lci9jb21wb25lbnRzL0NyZWF0ZVN0YWNrVGFiL0NyZWF0ZVN0YWNrVGFiLmNzcz9hNWQ2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0Esa0JBQWtCIiwiZmlsZSI6Ii4vYXBwcy9Nb2RlbC9zcmMvcGFnZXMvTW9kZWxQYWdlL3BhZ2VzL01vZGVsRGVzaWduZXIvY29tcG9uZW50cy9DcmVhdGVTdGFja1RhYi9DcmVhdGVTdGFja1RhYi5jc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wiYWN0aW9uQnV0dG9uV3JhcHBlclwiOlwiQ3JlYXRlU3RhY2tUYWJfX2FjdGlvbkJ1dHRvbldyYXBwZXJfX18xam9lQlwiLFwiYWN0aW9uQnV0dG9uXCI6XCJDcmVhdGVTdGFja1RhYl9fYWN0aW9uQnV0dG9uX19fMWVKMy1cIixcImNyZWF0ZUJ0blwiOlwiQ3JlYXRlU3RhY2tUYWJfX2NyZWF0ZUJ0bl9fXzJYMlBkXCIsXCJmb3JtSW5wdXRXcmFwcGVyXCI6XCJDcmVhdGVTdGFja1RhYl9fZm9ybUlucHV0V3JhcHBlcl9fXzJwYk10XCIsXCJmb3JtSW5wdXRMYWJlbFwiOlwiQ3JlYXRlU3RhY2tUYWJfX2Zvcm1JbnB1dExhYmVsX19fc0UzdV9cIixcImZvcm1JbnB1dENvbnRhaW5lclwiOlwiQ3JlYXRlU3RhY2tUYWJfX2Zvcm1JbnB1dENvbnRhaW5lcl9fXzJTNlJJXCIsXCJmb3JtVGV4dGFyZWFXcmFwcGVyXCI6XCJDcmVhdGVTdGFja1RhYl9fZm9ybVRleHRhcmVhV3JhcHBlcl9fXzJwOC1fXCIsXCJmb3JtVGV4dGFyZWFDb250YWluZXJcIjpcIkNyZWF0ZVN0YWNrVGFiX19mb3JtVGV4dGFyZWFDb250YWluZXJfX19sdDBrb1wiLFwiZm9ybUlucHV0Qm94XCI6XCJDcmVhdGVTdGFja1RhYl9fZm9ybUlucHV0Qm94X19fNDkzbGxcIixcImZvcm1UZXh0Qm94XCI6XCJDcmVhdGVTdGFja1RhYl9fZm9ybVRleHRCb3hfX18zVW5CR1wifTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/CreateStackTab/CreateStackTab.css\n");

/***/ }),

/***/ "./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/CreateStackTab/CreateStackTab.js":
/*!********************************************************************************************************!*\
  !*** ./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/CreateStackTab/CreateStackTab.js ***!
  \********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CreateStackTab; });\n/* harmony import */ var _commons_src_index_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../../../commons/src/index.components */ \"./commons/src/index.components.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../ModelDesigner.constants */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.constants.js\");\n/* harmony import */ var _CreateStackTab_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./CreateStackTab.css */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/CreateStackTab/CreateStackTab.css\");\n/* harmony import */ var _CreateStackTab_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_CreateStackTab_css__WEBPACK_IMPORTED_MODULE_5__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\nvar types = [{\n  label: 'Horizontal',\n  value: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"stackTypes\"].HORIZONTAL\n}, {\n  label: 'Vertical',\n  value: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"stackTypes\"].VERTICAL\n}];\n\nvar CreateStackTab =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateStackTab, _Component);\n\n  function CreateStackTab() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateStackTab);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateStackTab)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      name: '',\n      description: '',\n      type: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"stackTypes\"].HORIZONTAL\n    });\n\n    return _this;\n  }\n\n  _createClass(CreateStackTab, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          onCreate = _this$props.onCreate,\n          onCancel = _this$props.onCancel;\n      var _this$state = this.state,\n          name = _this$state.name,\n          description = _this$state.description,\n          type = _this$state.type;\n      return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"div\", {\n        className: classnames__WEBPACK_IMPORTED_MODULE_1___default()(_CreateStackTab_css__WEBPACK_IMPORTED_MODULE_5___default.a.wrapper)\n      }, react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_0__[\"ModelDesignerLabeledComponent\"], {\n        label: \"Type\"\n      }, react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_0__[\"RadioButton\"], {\n        data: types,\n        selected: type,\n        name: \"type\",\n        onChange: function onChange(e) {\n          var value = e.target.value;\n\n          if (value !== type) {\n            _this2.setState({\n              type: value\n            });\n          }\n        }\n      })), react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_0__[\"Input\"], {\n        label: \"Name\",\n        classes: {\n          formWrapper: _CreateStackTab_css__WEBPACK_IMPORTED_MODULE_5___default.a.formInputWrapper,\n          label: _CreateStackTab_css__WEBPACK_IMPORTED_MODULE_5___default.a.formInputLabel,\n          inputWrapper: _CreateStackTab_css__WEBPACK_IMPORTED_MODULE_5___default.a.formInputContainer,\n          input: _CreateStackTab_css__WEBPACK_IMPORTED_MODULE_5___default.a.formInputBox\n        },\n        value: name,\n        onBlur: function onBlur(e, value) {\n          if (value !== name) {\n            _this2.setState({\n              name: value\n            });\n          }\n        }\n      }), react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_0__[\"Input\"], {\n        label: \"Description\",\n        type: \"textarea\",\n        classes: {\n          formWrapper: _CreateStackTab_css__WEBPACK_IMPORTED_MODULE_5___default.a.formTextareaWrapper,\n          label: _CreateStackTab_css__WEBPACK_IMPORTED_MODULE_5___default.a.formInputLabel,\n          inputWrapper: _CreateStackTab_css__WEBPACK_IMPORTED_MODULE_5___default.a.formTextareaContainer,\n          textarea: classnames__WEBPACK_IMPORTED_MODULE_1___default()(_CreateStackTab_css__WEBPACK_IMPORTED_MODULE_5___default.a.formInputBox, _CreateStackTab_css__WEBPACK_IMPORTED_MODULE_5___default.a.formTextBox)\n        },\n        value: description,\n        onBlur: function onBlur(e, value) {\n          if (value !== description) {\n            _this2.setState({\n              description: value\n            });\n          }\n        }\n      }), react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"div\", {\n        className: classnames__WEBPACK_IMPORTED_MODULE_1___default()(_CreateStackTab_css__WEBPACK_IMPORTED_MODULE_5___default.a.actionButtonWrapper)\n      }, react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_0__[\"Button\"], {\n        secondary: true,\n        className: _CreateStackTab_css__WEBPACK_IMPORTED_MODULE_5___default.a.actionButton,\n        onClick: onCancel,\n        title: \"Cancel\"\n      }, \"Cancel\"), react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_0__[\"Button\"], {\n        className: classnames__WEBPACK_IMPORTED_MODULE_1___default()(_CreateStackTab_css__WEBPACK_IMPORTED_MODULE_5___default.a.createBtn),\n        onClick: function onClick() {\n          onCreate({\n            name: name,\n            description: description,\n            type: type\n          });\n        },\n        title: \"Create\"\n      }, \"Create\")));\n    }\n  }]);\n\n  return CreateStackTab;\n}(react__WEBPACK_IMPORTED_MODULE_3__[\"Component\"]);\n\n_defineProperty(CreateStackTab, \"propTypes\", {\n  onCreate: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n  onCancel: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func\n});\n\n_defineProperty(CreateStackTab, \"defaultProps\", {\n  onCreate: function onCreate(f) {\n    return f;\n  },\n  onCancel: function onCancel(f) {\n    return f;\n  }\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/CreateStackTab/CreateStackTab.js\n");

/***/ }),

/***/ "./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/ScopesTab/ScopesTab.css":
/*!***********************************************************************************************!*\
  !*** ./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/ScopesTab/ScopesTab.css ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\nmodule.exports = {\"scopesContainer\":\"ScopesTab__scopesContainer___2ADI9\",\"pillsContainer\":\"ScopesTab__pillsContainer___2AAHz\",\"scopesWrapper\":\"ScopesTab__scopesWrapper___3oy5n\",\"labeledComponentWrapper\":\"ScopesTab__labeledComponentWrapper___od_rL\",\"pillsCloseIcon\":\"ScopesTab__pillsCloseIcon___38Cfq\",\"inputListWrapper\":\"ScopesTab__inputListWrapper___1W5Ah\",\"emptyMsgWrapper\":\"ScopesTab__emptyMsgWrapper___2zd4Q\"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHBzL01vZGVsL3NyYy9wYWdlcy9Nb2RlbFBhZ2UvcGFnZXMvTW9kZWxEZXNpZ25lci9jb21wb25lbnRzL1Njb3Blc1RhYi9TY29wZXNUYWIuY3NzP2RkYjQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQkFBa0IiLCJmaWxlIjoiLi9hcHBzL01vZGVsL3NyYy9wYWdlcy9Nb2RlbFBhZ2UvcGFnZXMvTW9kZWxEZXNpZ25lci9jb21wb25lbnRzL1Njb3Blc1RhYi9TY29wZXNUYWIuY3NzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcInNjb3Blc0NvbnRhaW5lclwiOlwiU2NvcGVzVGFiX19zY29wZXNDb250YWluZXJfX18yQURJOVwiLFwicGlsbHNDb250YWluZXJcIjpcIlNjb3Blc1RhYl9fcGlsbHNDb250YWluZXJfX18yQUFIelwiLFwic2NvcGVzV3JhcHBlclwiOlwiU2NvcGVzVGFiX19zY29wZXNXcmFwcGVyX19fM295NW5cIixcImxhYmVsZWRDb21wb25lbnRXcmFwcGVyXCI6XCJTY29wZXNUYWJfX2xhYmVsZWRDb21wb25lbnRXcmFwcGVyX19fb2RfckxcIixcInBpbGxzQ2xvc2VJY29uXCI6XCJTY29wZXNUYWJfX3BpbGxzQ2xvc2VJY29uX19fMzhDZnFcIixcImlucHV0TGlzdFdyYXBwZXJcIjpcIlNjb3Blc1RhYl9faW5wdXRMaXN0V3JhcHBlcl9fXzFXNUFoXCIsXCJlbXB0eU1zZ1dyYXBwZXJcIjpcIlNjb3Blc1RhYl9fZW1wdHlNc2dXcmFwcGVyX19fMnpkNFFcIn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/ScopesTab/ScopesTab.css\n");

/***/ }),

/***/ "./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/ScopesTab/ScopesTab.js":
/*!**********************************************************************************************!*\
  !*** ./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/ScopesTab/ScopesTab.js ***!
  \**********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _commons_src_index_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../../../commons/src/index.components */ \"./commons/src/index.components.js\");\n/* harmony import */ var _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../../../commons/src/index.constants */ \"./commons/src/index.constants.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _ScopesTab_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ScopesTab.css */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/ScopesTab/ScopesTab.css\");\n/* harmony import */ var _ScopesTab_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_ScopesTab_css__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\nvar ScopesTab = function ScopesTab(_ref) {\n  var onInputChange = _ref.onInputChange,\n      data = _ref.data,\n      scopes = _ref.scopes,\n      onScopeSelect = _ref.onScopeSelect,\n      displayList = _ref.displayList,\n      removeScope = _ref.removeScope,\n      onEnterKey = _ref.onEnterKey,\n      loading = _ref.loading,\n      readOnly = _ref.readOnly;\n  return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"div\", {\n    className: _ScopesTab_css__WEBPACK_IMPORTED_MODULE_4___default.a.scopesWrapper\n  }, loading && react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_0__[\"Loader\"], null), react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_0__[\"InputList\"], {\n    disabled: readOnly,\n    listData: scopes,\n    onSelectItem: onScopeSelect,\n    onInputChange: onInputChange,\n    label: \"Enter scope\",\n    displayList: displayList,\n    onEnterKey: onEnterKey,\n    classes: {\n      inputListWrapper: _ScopesTab_css__WEBPACK_IMPORTED_MODULE_4___default.a.inputListWrapper,\n      componentWrapper: _ScopesTab_css__WEBPACK_IMPORTED_MODULE_4___default.a.labeledComponentWrapper\n    }\n  }), react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"div\", {\n    className: _ScopesTab_css__WEBPACK_IMPORTED_MODULE_4___default.a.scopesContainer\n  }, data && data.size > 0 ? data.map(function (scope, index) {\n    return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_0__[\"Pills\"], {\n      label: scope,\n      onClick: function onClick() {\n        return removeScope({\n          scope: scope,\n          index: index\n        });\n      },\n      classes: {\n        pillsContainer: _ScopesTab_css__WEBPACK_IMPORTED_MODULE_4___default.a.pillsContainer,\n        pillsCloseIcon: _ScopesTab_css__WEBPACK_IMPORTED_MODULE_4___default.a.pillsCloseIcon\n      }\n    });\n  }) : react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"div\", {\n    className: _ScopesTab_css__WEBPACK_IMPORTED_MODULE_4___default.a.emptyMsgWrapper\n  }, \"Add scopes to this layer using the above input field\")));\n};\n\nScopesTab.propTypes = {\n  data: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"customPropTypes\"].ImmutableMap,\n  onInputChange: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n  scopes: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.shape([]),\n  onScopeSelect: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n  removeScope: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n  onEnterKey: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n  displayList: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\n  loading: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\n  readOnly: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool\n};\nScopesTab.defaultProps = {\n  data: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_1__[\"customDefaultProps\"].ImmutableMap,\n  onInputChange: function onInputChange(f) {\n    return f;\n  },\n  scopes: [],\n  onScopeSelect: function onScopeSelect(f) {\n    return f;\n  },\n  removeScope: function removeScope(f) {\n    return f;\n  },\n  onEnterKey: function onEnterKey(f) {\n    return f;\n  },\n  displayList: false,\n  loading: false,\n  readOnly: false\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (ScopesTab);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHBzL01vZGVsL3NyYy9wYWdlcy9Nb2RlbFBhZ2UvcGFnZXMvTW9kZWxEZXNpZ25lci9jb21wb25lbnRzL1Njb3Blc1RhYi9TY29wZXNUYWIuanM/ZWJlNSJdLCJuYW1lcyI6WyJTY29wZXNUYWIiLCJvbklucHV0Q2hhbmdlIiwiZGF0YSIsInNjb3BlcyIsIm9uU2NvcGVTZWxlY3QiLCJkaXNwbGF5TGlzdCIsInJlbW92ZVNjb3BlIiwib25FbnRlcktleSIsImxvYWRpbmciLCJyZWFkT25seSIsInN0eWxlcyIsInNjb3Blc1dyYXBwZXIiLCJpbnB1dExpc3RXcmFwcGVyIiwiY29tcG9uZW50V3JhcHBlciIsImxhYmVsZWRDb21wb25lbnRXcmFwcGVyIiwic2NvcGVzQ29udGFpbmVyIiwic2l6ZSIsIm1hcCIsInNjb3BlIiwiaW5kZXgiLCJwaWxsc0NvbnRhaW5lciIsInBpbGxzQ2xvc2VJY29uIiwiZW1wdHlNc2dXcmFwcGVyIiwicHJvcFR5cGVzIiwiY3VzdG9tUHJvcFR5cGVzIiwiSW1tdXRhYmxlTWFwIiwiUHJvcFR5cGVzIiwiZnVuYyIsInNoYXBlIiwiYm9vbCIsImRlZmF1bHRQcm9wcyIsImN1c3RvbURlZmF1bHRQcm9wcyIsImYiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBTUEsU0FBUyxHQUFHLFNBQVpBLFNBQVk7QUFBQSxNQUNoQkMsYUFEZ0IsUUFDaEJBLGFBRGdCO0FBQUEsTUFDREMsSUFEQyxRQUNEQSxJQURDO0FBQUEsTUFDS0MsTUFETCxRQUNLQSxNQURMO0FBQUEsTUFDYUMsYUFEYixRQUNhQSxhQURiO0FBQUEsTUFDNEJDLFdBRDVCLFFBQzRCQSxXQUQ1QjtBQUFBLE1BQ3lDQyxXQUR6QyxRQUN5Q0EsV0FEekM7QUFBQSxNQUNzREMsVUFEdEQsUUFDc0RBLFVBRHREO0FBQUEsTUFDa0VDLE9BRGxFLFFBQ2tFQSxPQURsRTtBQUFBLE1BRWhCQyxRQUZnQixRQUVoQkEsUUFGZ0I7QUFBQSxTQUloQjtBQUFLLGFBQVMsRUFBRUMscURBQU0sQ0FBQ0M7QUFBdkIsS0FDR0gsT0FBTyxJQUFJLDJEQUFDLG9FQUFELE9BRGQsRUFFRSwyREFBQyx1RUFBRDtBQUNFLFlBQVEsRUFBRUMsUUFEWjtBQUVFLFlBQVEsRUFBRU4sTUFGWjtBQUdFLGdCQUFZLEVBQUVDLGFBSGhCO0FBSUUsaUJBQWEsRUFBRUgsYUFKakI7QUFLRSxTQUFLLEVBQUMsYUFMUjtBQU1FLGVBQVcsRUFBRUksV0FOZjtBQU9FLGNBQVUsRUFBRUUsVUFQZDtBQVFFLFdBQU8sRUFBRTtBQUNQSyxzQkFBZ0IsRUFBRUYscURBQU0sQ0FBQ0UsZ0JBRGxCO0FBRVBDLHNCQUFnQixFQUFFSCxxREFBTSxDQUFDSTtBQUZsQjtBQVJYLElBRkYsRUFlRTtBQUFLLGFBQVMsRUFBRUoscURBQU0sQ0FBQ0s7QUFBdkIsS0FDR2IsSUFBSSxJQUFJQSxJQUFJLENBQUNjLElBQUwsR0FBWSxDQUFwQixHQUF3QmQsSUFBSSxDQUFDZSxHQUFMLENBQVMsVUFBQ0MsS0FBRCxFQUFRQyxLQUFSO0FBQUEsV0FDaEMsMkRBQUMsbUVBQUQ7QUFDRSxXQUFLLEVBQUVELEtBRFQ7QUFFRSxhQUFPLEVBQUU7QUFBQSxlQUFNWixXQUFXLENBQUM7QUFBRVksZUFBSyxFQUFMQSxLQUFGO0FBQVNDLGVBQUssRUFBTEE7QUFBVCxTQUFELENBQWpCO0FBQUEsT0FGWDtBQUdFLGFBQU8sRUFBRTtBQUFFQyxzQkFBYyxFQUFFVixxREFBTSxDQUFDVSxjQUF6QjtBQUF5Q0Msc0JBQWMsRUFBRVgscURBQU0sQ0FBQ1c7QUFBaEU7QUFIWCxNQURnQztBQUFBLEdBQVQsQ0FBeEIsR0FPQztBQUFLLGFBQVMsRUFBRVgscURBQU0sQ0FBQ1k7QUFBdkIsNERBUkosQ0FmRixDQUpnQjtBQUFBLENBQWxCOztBQW1DQXRCLFNBQVMsQ0FBQ3VCLFNBQVYsR0FBc0I7QUFDcEJyQixNQUFJLEVBQUVzQiw0RUFBZSxDQUFDQyxZQURGO0FBRXBCeEIsZUFBYSxFQUFFeUIsaURBQVMsQ0FBQ0MsSUFGTDtBQUdwQnhCLFFBQU0sRUFBRXVCLGlEQUFTLENBQUNFLEtBQVYsQ0FBZ0IsRUFBaEIsQ0FIWTtBQUlwQnhCLGVBQWEsRUFBRXNCLGlEQUFTLENBQUNDLElBSkw7QUFLcEJyQixhQUFXLEVBQUVvQixpREFBUyxDQUFDQyxJQUxIO0FBTXBCcEIsWUFBVSxFQUFFbUIsaURBQVMsQ0FBQ0MsSUFORjtBQU9wQnRCLGFBQVcsRUFBRXFCLGlEQUFTLENBQUNHLElBUEg7QUFRcEJyQixTQUFPLEVBQUVrQixpREFBUyxDQUFDRyxJQVJDO0FBU3BCcEIsVUFBUSxFQUFFaUIsaURBQVMsQ0FBQ0c7QUFUQSxDQUF0QjtBQVlBN0IsU0FBUyxDQUFDOEIsWUFBVixHQUF5QjtBQUN2QjVCLE1BQUksRUFBRTZCLCtFQUFrQixDQUFDTixZQURGO0FBRXZCeEIsZUFBYSxFQUFFLHVCQUFBK0IsQ0FBQztBQUFBLFdBQUlBLENBQUo7QUFBQSxHQUZPO0FBR3ZCN0IsUUFBTSxFQUFFLEVBSGU7QUFJdkJDLGVBQWEsRUFBRSx1QkFBQTRCLENBQUM7QUFBQSxXQUFJQSxDQUFKO0FBQUEsR0FKTztBQUt2QjFCLGFBQVcsRUFBRSxxQkFBQTBCLENBQUM7QUFBQSxXQUFJQSxDQUFKO0FBQUEsR0FMUztBQU12QnpCLFlBQVUsRUFBRSxvQkFBQXlCLENBQUM7QUFBQSxXQUFJQSxDQUFKO0FBQUEsR0FOVTtBQU92QjNCLGFBQVcsRUFBRSxLQVBVO0FBUXZCRyxTQUFPLEVBQUUsS0FSYztBQVN2QkMsVUFBUSxFQUFFO0FBVGEsQ0FBekI7QUFZZVQsd0VBQWYiLCJmaWxlIjoiLi9hcHBzL01vZGVsL3NyYy9wYWdlcy9Nb2RlbFBhZ2UvcGFnZXMvTW9kZWxEZXNpZ25lci9jb21wb25lbnRzL1Njb3Blc1RhYi9TY29wZXNUYWIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dExpc3QsIExvYWRlciwgUGlsbHMgfSBmcm9tICdCQkNvbXBvbmVudHMnO1xuXG5pbXBvcnQgeyBjdXN0b21EZWZhdWx0UHJvcHMsIGN1c3RvbVByb3BUeXBlcyB9IGZyb20gJ0JCQ29uc3RhbnRzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuL1Njb3Blc1RhYi5jc3MnO1xuXG5jb25zdCBTY29wZXNUYWIgPSAoe1xuICBvbklucHV0Q2hhbmdlLCBkYXRhLCBzY29wZXMsIG9uU2NvcGVTZWxlY3QsIGRpc3BsYXlMaXN0LCByZW1vdmVTY29wZSwgb25FbnRlcktleSwgbG9hZGluZyxcbiAgcmVhZE9ubHksXG59KSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuc2NvcGVzV3JhcHBlcn0+XG4gICAge2xvYWRpbmcgJiYgPExvYWRlciAvPn1cbiAgICA8SW5wdXRMaXN0XG4gICAgICBkaXNhYmxlZD17cmVhZE9ubHl9XG4gICAgICBsaXN0RGF0YT17c2NvcGVzfVxuICAgICAgb25TZWxlY3RJdGVtPXtvblNjb3BlU2VsZWN0fVxuICAgICAgb25JbnB1dENoYW5nZT17b25JbnB1dENoYW5nZX1cbiAgICAgIGxhYmVsPVwiRW50ZXIgc2NvcGVcIlxuICAgICAgZGlzcGxheUxpc3Q9e2Rpc3BsYXlMaXN0fVxuICAgICAgb25FbnRlcktleT17b25FbnRlcktleX1cbiAgICAgIGNsYXNzZXM9e3tcbiAgICAgICAgaW5wdXRMaXN0V3JhcHBlcjogc3R5bGVzLmlucHV0TGlzdFdyYXBwZXIsXG4gICAgICAgIGNvbXBvbmVudFdyYXBwZXI6IHN0eWxlcy5sYWJlbGVkQ29tcG9uZW50V3JhcHBlcixcbiAgICAgIH19XG4gICAgLz5cbiAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnNjb3Blc0NvbnRhaW5lcn0+XG4gICAgICB7ZGF0YSAmJiBkYXRhLnNpemUgPiAwID8gZGF0YS5tYXAoKHNjb3BlLCBpbmRleCkgPT4gKFxuICAgICAgICA8UGlsbHNcbiAgICAgICAgICBsYWJlbD17c2NvcGV9XG4gICAgICAgICAgb25DbGljaz17KCkgPT4gcmVtb3ZlU2NvcGUoeyBzY29wZSwgaW5kZXggfSl9XG4gICAgICAgICAgY2xhc3Nlcz17eyBwaWxsc0NvbnRhaW5lcjogc3R5bGVzLnBpbGxzQ29udGFpbmVyLCBwaWxsc0Nsb3NlSWNvbjogc3R5bGVzLnBpbGxzQ2xvc2VJY29uIH19XG4gICAgICAgIC8+XG4gICAgICApKSA6IChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5lbXB0eU1zZ1dyYXBwZXJ9PlxuICAgICAgICAgIEFkZCBzY29wZXMgdG8gdGhpcyBsYXllciB1c2luZyB0aGUgYWJvdmUgaW5wdXQgZmllbGRcbiAgICAgICAgPC9kaXY+XG4gICAgICApfVxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbik7XG5cblNjb3Blc1RhYi5wcm9wVHlwZXMgPSB7XG4gIGRhdGE6IGN1c3RvbVByb3BUeXBlcy5JbW11dGFibGVNYXAsXG4gIG9uSW5wdXRDaGFuZ2U6IFByb3BUeXBlcy5mdW5jLFxuICBzY29wZXM6IFByb3BUeXBlcy5zaGFwZShbXSksXG4gIG9uU2NvcGVTZWxlY3Q6IFByb3BUeXBlcy5mdW5jLFxuICByZW1vdmVTY29wZTogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uRW50ZXJLZXk6IFByb3BUeXBlcy5mdW5jLFxuICBkaXNwbGF5TGlzdDogUHJvcFR5cGVzLmJvb2wsXG4gIGxvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICByZWFkT25seTogUHJvcFR5cGVzLmJvb2wsXG59O1xuXG5TY29wZXNUYWIuZGVmYXVsdFByb3BzID0ge1xuICBkYXRhOiBjdXN0b21EZWZhdWx0UHJvcHMuSW1tdXRhYmxlTWFwLFxuICBvbklucHV0Q2hhbmdlOiBmID0+IGYsXG4gIHNjb3BlczogW10sXG4gIG9uU2NvcGVTZWxlY3Q6IGYgPT4gZixcbiAgcmVtb3ZlU2NvcGU6IGYgPT4gZixcbiAgb25FbnRlcktleTogZiA9PiBmLFxuICBkaXNwbGF5TGlzdDogZmFsc2UsXG4gIGxvYWRpbmc6IGZhbHNlLFxuICByZWFkT25seTogZmFsc2UsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBTY29wZXNUYWI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/ScopesTab/ScopesTab.js\n");

/***/ }),

/***/ "./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/StackDetailsTab/StackDetailsTab.css":
/*!***********************************************************************************************************!*\
  !*** ./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/StackDetailsTab/StackDetailsTab.css ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"StackDetailsTab__wrapper___2aClB\",\"actionButtonWrapper\":\"StackDetailsTab__actionButtonWrapper___1khe4\",\"actionButton\":\"StackDetailsTab__actionButton___1y6ja\",\"createBtn\":\"StackDetailsTab__createBtn___2JuxB\",\"formInputWrapper\":\"StackDetailsTab__formInputWrapper___3t4O2\",\"formInputLabel\":\"StackDetailsTab__formInputLabel___pRuw4\",\"formInputContainer\":\"StackDetailsTab__formInputContainer___1gOBz\",\"formInputNumberContainer\":\"StackDetailsTab__formInputNumberContainer___2E2q0\",\"formTextareaWrapper\":\"StackDetailsTab__formTextareaWrapper___3Zmsw\",\"formTextareaContainer\":\"StackDetailsTab__formTextareaContainer___1KjeX\",\"formInputBox\":\"StackDetailsTab__formInputBox___3LYfF\",\"formInputBoxError\":\"StackDetailsTab__formInputBoxError___vZHbU\",\"labeledComponentWrapper\":\"StackDetailsTab__labeledComponentWrapper___22Ldi\",\"inputWrapper\":\"StackDetailsTab__inputWrapper___2mjzS\",\"descriptionLabel\":\"StackDetailsTab__descriptionLabel___cld7G\",\"description\":\"StackDetailsTab__description___3ep1N\",\"group_heading_stack\":\"StackDetailsTab__group_heading_stack___Ei8zV\",\"split_dimensions_label\":\"StackDetailsTab__split_dimensions_label___Ac5U6\",\"camelCase\":\"StackDetailsTab__camelCase___3woe-\",\"descriptionContent\":\"StackDetailsTab__descriptionContent___35BJb\",\"errorIcon\":\"StackDetailsTab__errorIcon___3xRGP\",\"tooltipWrapper\":\"StackDetailsTab__tooltipWrapper___1jm_w\",\"tooltipTextContent\":\"StackDetailsTab__tooltipTextContent___2U2wO\",\"error\":\"StackDetailsTab__error___8BbDJ\",\"errorMsgWrapper\":\"StackDetailsTab__errorMsgWrapper___1fGwh\"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHBzL01vZGVsL3NyYy9wYWdlcy9Nb2RlbFBhZ2UvcGFnZXMvTW9kZWxEZXNpZ25lci9jb21wb25lbnRzL1N0YWNrRGV0YWlsc1RhYi9TdGFja0RldGFpbHNUYWIuY3NzP2I0N2YiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQkFBa0IiLCJmaWxlIjoiLi9hcHBzL01vZGVsL3NyYy9wYWdlcy9Nb2RlbFBhZ2UvcGFnZXMvTW9kZWxEZXNpZ25lci9jb21wb25lbnRzL1N0YWNrRGV0YWlsc1RhYi9TdGFja0RldGFpbHNUYWIuY3NzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcIndyYXBwZXJcIjpcIlN0YWNrRGV0YWlsc1RhYl9fd3JhcHBlcl9fXzJhQ2xCXCIsXCJhY3Rpb25CdXR0b25XcmFwcGVyXCI6XCJTdGFja0RldGFpbHNUYWJfX2FjdGlvbkJ1dHRvbldyYXBwZXJfX18xa2hlNFwiLFwiYWN0aW9uQnV0dG9uXCI6XCJTdGFja0RldGFpbHNUYWJfX2FjdGlvbkJ1dHRvbl9fXzF5NmphXCIsXCJjcmVhdGVCdG5cIjpcIlN0YWNrRGV0YWlsc1RhYl9fY3JlYXRlQnRuX19fMkp1eEJcIixcImZvcm1JbnB1dFdyYXBwZXJcIjpcIlN0YWNrRGV0YWlsc1RhYl9fZm9ybUlucHV0V3JhcHBlcl9fXzN0NE8yXCIsXCJmb3JtSW5wdXRMYWJlbFwiOlwiU3RhY2tEZXRhaWxzVGFiX19mb3JtSW5wdXRMYWJlbF9fX3BSdXc0XCIsXCJmb3JtSW5wdXRDb250YWluZXJcIjpcIlN0YWNrRGV0YWlsc1RhYl9fZm9ybUlucHV0Q29udGFpbmVyX19fMWdPQnpcIixcImZvcm1JbnB1dE51bWJlckNvbnRhaW5lclwiOlwiU3RhY2tEZXRhaWxzVGFiX19mb3JtSW5wdXROdW1iZXJDb250YWluZXJfX18yRTJxMFwiLFwiZm9ybVRleHRhcmVhV3JhcHBlclwiOlwiU3RhY2tEZXRhaWxzVGFiX19mb3JtVGV4dGFyZWFXcmFwcGVyX19fM1ptc3dcIixcImZvcm1UZXh0YXJlYUNvbnRhaW5lclwiOlwiU3RhY2tEZXRhaWxzVGFiX19mb3JtVGV4dGFyZWFDb250YWluZXJfX18xS2plWFwiLFwiZm9ybUlucHV0Qm94XCI6XCJTdGFja0RldGFpbHNUYWJfX2Zvcm1JbnB1dEJveF9fXzNMWWZGXCIsXCJmb3JtSW5wdXRCb3hFcnJvclwiOlwiU3RhY2tEZXRhaWxzVGFiX19mb3JtSW5wdXRCb3hFcnJvcl9fX3ZaSGJVXCIsXCJsYWJlbGVkQ29tcG9uZW50V3JhcHBlclwiOlwiU3RhY2tEZXRhaWxzVGFiX19sYWJlbGVkQ29tcG9uZW50V3JhcHBlcl9fXzIyTGRpXCIsXCJpbnB1dFdyYXBwZXJcIjpcIlN0YWNrRGV0YWlsc1RhYl9faW5wdXRXcmFwcGVyX19fMm1qelNcIixcImRlc2NyaXB0aW9uTGFiZWxcIjpcIlN0YWNrRGV0YWlsc1RhYl9fZGVzY3JpcHRpb25MYWJlbF9fX2NsZDdHXCIsXCJkZXNjcmlwdGlvblwiOlwiU3RhY2tEZXRhaWxzVGFiX19kZXNjcmlwdGlvbl9fXzNlcDFOXCIsXCJncm91cF9oZWFkaW5nX3N0YWNrXCI6XCJTdGFja0RldGFpbHNUYWJfX2dyb3VwX2hlYWRpbmdfc3RhY2tfX19FaTh6VlwiLFwic3BsaXRfZGltZW5zaW9uc19sYWJlbFwiOlwiU3RhY2tEZXRhaWxzVGFiX19zcGxpdF9kaW1lbnNpb25zX2xhYmVsX19fQWM1VTZcIixcImNhbWVsQ2FzZVwiOlwiU3RhY2tEZXRhaWxzVGFiX19jYW1lbENhc2VfX18zd29lLVwiLFwiZGVzY3JpcHRpb25Db250ZW50XCI6XCJTdGFja0RldGFpbHNUYWJfX2Rlc2NyaXB0aW9uQ29udGVudF9fXzM1QkpiXCIsXCJlcnJvckljb25cIjpcIlN0YWNrRGV0YWlsc1RhYl9fZXJyb3JJY29uX19fM3hSR1BcIixcInRvb2x0aXBXcmFwcGVyXCI6XCJTdGFja0RldGFpbHNUYWJfX3Rvb2x0aXBXcmFwcGVyX19fMWptX3dcIixcInRvb2x0aXBUZXh0Q29udGVudFwiOlwiU3RhY2tEZXRhaWxzVGFiX190b29sdGlwVGV4dENvbnRlbnRfX18yVTJ3T1wiLFwiZXJyb3JcIjpcIlN0YWNrRGV0YWlsc1RhYl9fZXJyb3JfX184QmJESlwiLFwiZXJyb3JNc2dXcmFwcGVyXCI6XCJTdGFja0RldGFpbHNUYWJfX2Vycm9yTXNnV3JhcHBlcl9fXzFmR3doXCJ9OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/StackDetailsTab/StackDetailsTab.css\n");

/***/ }),

/***/ "./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/StackDetailsTab/StackDetailsTab.js":
/*!**********************************************************************************************************!*\
  !*** ./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/StackDetailsTab/StackDetailsTab.js ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StackDetailsTab; });\n/* harmony import */ var _rzt_eva__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @rzt/eva */ \"./node_modules/@rzt/eva/build/index.js\");\n/* harmony import */ var _rzt_eva__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_rzt_eva__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _commons_src_index_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../../../commons/src/index.components */ \"./commons/src/index.components.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _ModelsList_ModelsListPage_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../ModelsList/ModelsListPage.constants */ \"./apps/Model/src/pages/ModelsList/ModelsListPage.constants.js\");\n/* harmony import */ var _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../ModelDesigner.constants */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.constants.js\");\n/* harmony import */ var _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./StackDetailsTab.css */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/StackDetailsTab/StackDetailsTab.css\");\n/* harmony import */ var _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\nvar fallbackValue = '--';\n\nvar StackDetailsTab =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StackDetailsTab, _Component);\n\n  function StackDetailsTab(props) {\n    var _this;\n\n    _classCallCheck(this, StackDetailsTab);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StackDetailsTab).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      instanceNameError: '',\n      hover: false\n    });\n\n    _this.inputTextRef = '';\n    return _this;\n  }\n\n  _createClass(StackDetailsTab, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          name = _this$props.name,\n          iteration = _this$props.iteration,\n          type = _this$props.type,\n          stackName = _this$props.stackName,\n          description = _this$props.description,\n          onUpdate = _this$props.onUpdate,\n          splitDimensions = _this$props.splitDimensions,\n          splits = _this$props.splits,\n          concatDimensions = _this$props.concatDimensions;\n      return react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"div\", {\n        className: classnames__WEBPACK_IMPORTED_MODULE_2___default()(_StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.wrapper)\n      }, react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"div\", {\n        ref: function ref(inputRef) {\n          _this2.inputTextRef = inputRef;\n        },\n        onMouseEnter: function onMouseEnter() {\n          return _this2.setState({\n            hover: true\n          });\n        },\n        onMouseLeave: function onMouseLeave() {\n          return _this2.setState({\n            hover: false\n          });\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_1__[\"ModelDesignerLabeledComponent\"], {\n        label: \"Instance Name\",\n        classes: {\n          labeledComponentWrapper: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.labeledComponentWrapper,\n          inputWrapper: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.inputWrapper\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_1__[\"Input\"], {\n        noValidation: true,\n        classes: {\n          formWrapper: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputWrapper,\n          label: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputLabel,\n          inputWrapper: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputContainer,\n          input: classnames__WEBPACK_IMPORTED_MODULE_2___default()(_defineProperty({}, _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.error, this.state.instanceNameError), _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputBox, _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputBoxError),\n          errorIcon: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.errorIcon,\n          tooltipWrapper: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.tooltipWrapper,\n          tooltipTextContent: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.tooltipTextContent\n        },\n        value: name,\n        onBlur: function onBlur(e, value) {\n          var correctVal = value.trim();\n\n          if (correctVal !== name) {\n            if (_ModelsList_ModelsListPage_constants__WEBPACK_IMPORTED_MODULE_5__[\"MODEL_NAME_REGEX\"].regex.test(correctVal)) {\n              _this2.setState({\n                instanceNameError: ''\n              });\n\n              onUpdate('name', value);\n            } else {\n              _this2.setState({\n                instanceNameError: _ModelsList_ModelsListPage_constants__WEBPACK_IMPORTED_MODULE_5__[\"MODEL_NAME_REGEX\"].message\n              });\n            }\n          } else if (_this2.state.instanceNameError) {\n            _this2.setState({\n              instanceNameError: ''\n            });\n          }\n        }\n      }), this.state.hover && this.state.instanceNameError && react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_rzt_eva__WEBPACK_IMPORTED_MODULE_0__[\"Tooltip\"], {\n        targetRef: this.inputTextRef,\n        tooltipPosition: \"bottom-left\",\n        autoAlign: false,\n        content: react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"div\", {\n          className: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.errorMsgWrapper\n        }, this.state.instanceNameError),\n        classes: {\n          wrapper: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.tooltipWrapper,\n          arrow: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.tooltipArrow,\n          textContent: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.tooltipTextContent\n        }\n      }))), type === _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"stackTypes\"].HORIZONTAL && react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_1__[\"Input\"], {\n        label: \"Iteration\",\n        type: \"number\",\n        onKeyDown: function onKeyDown(e) {\n          if (e.keyCode === 190) {\n            e.preventDefault();\n          }\n        },\n        title: \"Must be an integer number\",\n        classes: {\n          formWrapper: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputWrapper,\n          label: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputLabel,\n          inputWrapper: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputContainer,\n          input: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputBox\n        },\n        value: iteration,\n        onBlur: function onBlur(e, value) {\n          var correctValue = +value.replace(/\\./g, '');\n\n          if (correctValue && correctValue !== iteration) {\n            onUpdate('iteration', correctValue);\n          }\n        }\n      }), type === _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_6__[\"stackTypes\"].VERTICAL && react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(VerticalStackConfig, {\n        splitDimensions: splitDimensions,\n        splits: splits,\n        onUpdate: onUpdate,\n        concatDimensions: concatDimensions\n      }), react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_1__[\"ModelDesignerLabeledComponent\"], {\n        label: \"Type\",\n        classes: {\n          labeledComponentWrapper: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.labeledComponentWrapper\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"span\", {\n        className: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.camelCase\n      }, type ? \"Stack (\".concat(type.toLowerCase(), \")\") : fallbackValue)), react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_1__[\"ModelDesignerLabeledComponent\"], {\n        label: \"Name\",\n        classes: {\n          labeledComponentWrapper: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.labeledComponentWrapper\n        }\n      }, stackName || fallbackValue), react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_1__[\"ModelDesignerLabeledComponent\"], {\n        label: \"Description\",\n        classes: {\n          label: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.descriptionLabel,\n          labeledComponentWrapper: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.labeledComponentWrapper,\n          componentWrapper: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.description\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"span\", {\n        className: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.descriptionContent\n      }, description || fallbackValue)));\n    }\n  }]);\n\n  return StackDetailsTab;\n}(react__WEBPACK_IMPORTED_MODULE_4__[\"Component\"]);\n\n_defineProperty(StackDetailsTab, \"propTypes\", {\n  name: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string,\n  splitDimensions: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.number,\n  splits: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.number,\n  concatDimensions: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.number,\n  iteration: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.number,\n  type: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string,\n  stackName: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string,\n  description: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string,\n  onUpdate: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.func\n});\n\n_defineProperty(StackDetailsTab, \"defaultProps\", {\n  name: '',\n  iteration: null,\n  splitDimensions: null,\n  splits: null,\n  concatDimensions: null,\n  type: '',\n  stackName: '',\n  description: '',\n  onUpdate: function onUpdate(f) {\n    return f;\n  }\n});\n\n\n\nvar VerticalStackConfig = function VerticalStackConfig(_ref) {\n  var splitDimensions = _ref.splitDimensions,\n      splits = _ref.splits,\n      onUpdate = _ref.onUpdate,\n      concatDimensions = _ref.concatDimensions;\n  return react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4__[\"Fragment\"], null, react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"div\", {\n    className: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.group_heading_stack\n  }, \"Input\"), react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_1__[\"ModelDesignerLabeledComponent\"], {\n    label: react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"span\", {\n      className: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.split_dimensions_label\n    }, \"Split Dimensions\"),\n    classes: {\n      labeledComponentWrapper: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.labeledComponentWrapper\n    }\n  }, react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_1__[\"Input\"], {\n    type: \"number\",\n    classes: {\n      formWrapper: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputWrapper,\n      label: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputLabel,\n      inputWrapper: classnames__WEBPACK_IMPORTED_MODULE_2___default()(_StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputContainer, _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputNumberContainer),\n      input: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputBox\n    },\n    value: splitDimensions,\n    onBlur: function onBlur(e, value) {\n      var correctValue = value === '' ? null : +value;\n\n      if (correctValue !== splitDimensions) {\n        onUpdate('split_dimensions', correctValue);\n      }\n    }\n  })), react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_1__[\"ModelDesignerLabeledComponent\"], {\n    label: \"Splits\",\n    classes: {\n      labeledComponentWrapper: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.labeledComponentWrapper\n    }\n  }, react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_1__[\"Input\"], {\n    type: \"number\",\n    classes: {\n      formWrapper: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputWrapper,\n      label: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputLabel,\n      inputWrapper: classnames__WEBPACK_IMPORTED_MODULE_2___default()(_StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputContainer, _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputNumberContainer),\n      input: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputBox\n    },\n    value: splits,\n    onBlur: function onBlur(e, value) {\n      var correctValue = value === '' ? null : +value;\n\n      if (correctValue !== splits) {\n        onUpdate('splits', correctValue);\n      }\n    }\n  })), react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"div\", {\n    className: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.group_heading_stack\n  }, \"Outputs\"), react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_1__[\"ModelDesignerLabeledComponent\"], {\n    label: \"Concat Dimensions\",\n    classes: {\n      labeledComponentWrapper: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.labeledComponentWrapper\n    }\n  }, react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_commons_src_index_components__WEBPACK_IMPORTED_MODULE_1__[\"Input\"], {\n    type: \"number\",\n    classes: {\n      formWrapper: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputWrapper,\n      label: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputLabel,\n      inputWrapper: classnames__WEBPACK_IMPORTED_MODULE_2___default()(_StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputContainer, _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputNumberContainer),\n      input: _StackDetailsTab_css__WEBPACK_IMPORTED_MODULE_7___default.a.formInputBox\n    },\n    value: concatDimensions,\n    onBlur: function onBlur(e, value) {\n      var correctValue = value === '' ? null : +value;\n\n      if (correctValue !== concatDimensions) {\n        onUpdate('concat_dimensions', correctValue);\n      }\n    }\n  })));\n};\n\nVerticalStackConfig.propTypes = {\n  splitDimensions: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.number,\n  splits: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.number,\n  concatDimensions: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.number,\n  onUpdate: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.func\n};\nVerticalStackConfig.defaultProps = {\n  splitDimensions: null,\n  splits: null,\n  concatDimensions: null,\n  onUpdate: function onUpdate(f) {\n    return f;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/StackDetailsTab/StackDetailsTab.js\n");

/***/ }),

/***/ "./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/StackList/StackList.css":
/*!***********************************************************************************************!*\
  !*** ./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/StackList/StackList.css ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\nmodule.exports = {\"listWrapper\":\"StackList__listWrapper___RmImf\",\"stack_list\":\"StackList__stack_list___3dhuj\",\"stack_list_item\":\"StackList__stack_list_item___j4bTD\",\"active\":\"StackList__active___nju89\"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHBzL01vZGVsL3NyYy9wYWdlcy9Nb2RlbFBhZ2UvcGFnZXMvTW9kZWxEZXNpZ25lci9jb21wb25lbnRzL1N0YWNrTGlzdC9TdGFja0xpc3QuY3NzP2FkOGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQkFBa0IiLCJmaWxlIjoiLi9hcHBzL01vZGVsL3NyYy9wYWdlcy9Nb2RlbFBhZ2UvcGFnZXMvTW9kZWxEZXNpZ25lci9jb21wb25lbnRzL1N0YWNrTGlzdC9TdGFja0xpc3QuY3NzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcImxpc3RXcmFwcGVyXCI6XCJTdGFja0xpc3RfX2xpc3RXcmFwcGVyX19fUm1JbWZcIixcInN0YWNrX2xpc3RcIjpcIlN0YWNrTGlzdF9fc3RhY2tfbGlzdF9fXzNkaHVqXCIsXCJzdGFja19saXN0X2l0ZW1cIjpcIlN0YWNrTGlzdF9fc3RhY2tfbGlzdF9pdGVtX19fajRiVERcIixcImFjdGl2ZVwiOlwiU3RhY2tMaXN0X19hY3RpdmVfX19uanU4OVwifTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/StackList/StackList.css\n");

/***/ }),

/***/ "./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/StackList/StackList.js":
/*!**********************************************************************************************!*\
  !*** ./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/StackList/StackList.js ***!
  \**********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _rzt_eva__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @rzt/eva */ \"./node_modules/@rzt/eva/build/index.js\");\n/* harmony import */ var _rzt_eva__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_rzt_eva__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _StackList_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./StackList.css */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/StackList/StackList.css\");\n/* harmony import */ var _StackList_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_StackList_css__WEBPACK_IMPORTED_MODULE_3__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\nvar StackList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StackList, _React$Component);\n\n  function StackList(props) {\n    var _this;\n\n    _classCallCheck(this, StackList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StackList).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(StackList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          iterations = _this$props.iterations,\n          activeIndex = _this$props.activeIndex,\n          onClick = _this$props.onClick;\n      return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"div\", {\n        className: _StackList_css__WEBPACK_IMPORTED_MODULE_3___default.a.listWrapper\n      }, react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_rzt_eva__WEBPACK_IMPORTED_MODULE_0__[\"List\"], {\n        activeIndex: activeIndex,\n        activeClass: _StackList_css__WEBPACK_IMPORTED_MODULE_3___default.a.active,\n        customClasses: {\n          list: _StackList_css__WEBPACK_IMPORTED_MODULE_3___default.a.stack_list,\n          listItem: _StackList_css__WEBPACK_IMPORTED_MODULE_3___default.a.stack_list_item\n        },\n        onItemClick: function onItemClick(e, item, index) {\n          return onClick(index);\n        },\n        data: _toConsumableArray(Array(iterations)).map(function (i, index) {\n          return \"STACK \".concat(index + 1);\n        })\n      }));\n    }\n  }]);\n\n  return StackList;\n}(react__WEBPACK_IMPORTED_MODULE_2___default.a.Component);\n\n_defineProperty(StackList, \"defaultProps\", {\n  iterations: 0,\n  activeIndex: 0,\n  onClick: function onClick(f) {\n    return f;\n  }\n});\n\n_defineProperty(StackList, \"propTypes\", {\n  iterations: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,\n  activeIndex: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,\n  onClick: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (StackList);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHBzL01vZGVsL3NyYy9wYWdlcy9Nb2RlbFBhZ2UvcGFnZXMvTW9kZWxEZXNpZ25lci9jb21wb25lbnRzL1N0YWNrTGlzdC9TdGFja0xpc3QuanM/ZTAzZSJdLCJuYW1lcyI6WyJTdGFja0xpc3QiLCJwcm9wcyIsInN0YXRlIiwiaXRlcmF0aW9ucyIsImFjdGl2ZUluZGV4Iiwib25DbGljayIsInN0eWxlcyIsImxpc3RXcmFwcGVyIiwiYWN0aXZlIiwibGlzdCIsInN0YWNrX2xpc3QiLCJsaXN0SXRlbSIsInN0YWNrX2xpc3RfaXRlbSIsImUiLCJpdGVtIiwiaW5kZXgiLCJBcnJheSIsIm1hcCIsImkiLCJSZWFjdCIsIkNvbXBvbmVudCIsImYiLCJQcm9wVHlwZXMiLCJudW1iZXIiLCJmdW5jIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0lBRU1BLFM7Ozs7O0FBWUoscUJBQVlDLEtBQVosRUFBbUI7QUFBQTs7QUFBQTs7QUFDakIsbUZBQU1BLEtBQU47QUFDQSxVQUFLQyxLQUFMLEdBQWEsRUFBYjtBQUZpQjtBQUdsQjs7Ozs2QkFFUTtBQUFBLHdCQUNzQyxLQUFLRCxLQUQzQztBQUFBLFVBQ0NFLFVBREQsZUFDQ0EsVUFERDtBQUFBLFVBQ2FDLFdBRGIsZUFDYUEsV0FEYjtBQUFBLFVBQzBCQyxPQUQxQixlQUMwQkEsT0FEMUI7QUFFUCxhQUNFO0FBQUssaUJBQVMsRUFBRUMscURBQU0sQ0FBQ0M7QUFBdkIsU0FDRSwyREFBQyw2Q0FBRDtBQUNFLG1CQUFXLEVBQUVILFdBRGY7QUFFRSxtQkFBVyxFQUFFRSxxREFBTSxDQUFDRSxNQUZ0QjtBQUdFLHFCQUFhLEVBQUU7QUFDYkMsY0FBSSxFQUFFSCxxREFBTSxDQUFDSSxVQURBO0FBRWJDLGtCQUFRLEVBQUVMLHFEQUFNLENBQUNNO0FBRkosU0FIakI7QUFPRSxtQkFBVyxFQUFFLHFCQUFDQyxDQUFELEVBQUlDLElBQUosRUFBVUMsS0FBVjtBQUFBLGlCQUFvQlYsT0FBTyxDQUFDVSxLQUFELENBQTNCO0FBQUEsU0FQZjtBQVFFLFlBQUksRUFBRSxtQkFBSUMsS0FBSyxDQUFDYixVQUFELENBQVQsRUFBdUJjLEdBQXZCLENBQTJCLFVBQUNDLENBQUQsRUFBSUgsS0FBSjtBQUFBLGlDQUF1QkEsS0FBSyxHQUFHLENBQS9CO0FBQUEsU0FBM0I7QUFSUixRQURGLENBREY7QUFjRDs7OztFQWpDcUJJLDRDQUFLLENBQUNDLFM7O2dCQUF4QnBCLFMsa0JBQ2tCO0FBQ3BCRyxZQUFVLEVBQUUsQ0FEUTtBQUVwQkMsYUFBVyxFQUFFLENBRk87QUFHcEJDLFNBQU8sRUFBRSxpQkFBQWdCLENBQUM7QUFBQSxXQUFJQSxDQUFKO0FBQUE7QUFIVSxDOztnQkFEbEJyQixTLGVBTWU7QUFDakJHLFlBQVUsRUFBRW1CLGlEQUFTLENBQUNDLE1BREw7QUFFakJuQixhQUFXLEVBQUVrQixpREFBUyxDQUFDQyxNQUZOO0FBR2pCbEIsU0FBTyxFQUFFaUIsaURBQVMsQ0FBQ0U7QUFIRixDOztBQThCTnhCLHdFQUFmIiwiZmlsZSI6Ii4vYXBwcy9Nb2RlbC9zcmMvcGFnZXMvTW9kZWxQYWdlL3BhZ2VzL01vZGVsRGVzaWduZXIvY29tcG9uZW50cy9TdGFja0xpc3QvU3RhY2tMaXN0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTGlzdCB9IGZyb20gJ0ByenQvZXZhJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuL1N0YWNrTGlzdC5jc3MnO1xuXG5jbGFzcyBTdGFja0xpc3QgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGl0ZXJhdGlvbnM6IDAsXG4gICAgYWN0aXZlSW5kZXg6IDAsXG4gICAgb25DbGljazogZiA9PiBmLFxuICB9O1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIGl0ZXJhdGlvbnM6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgYWN0aXZlSW5kZXg6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgb25DbGljazogUHJvcFR5cGVzLmZ1bmMsXG4gIH07XG5cbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHt9O1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgaXRlcmF0aW9ucywgYWN0aXZlSW5kZXgsIG9uQ2xpY2sgfSA9IHRoaXMucHJvcHM7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMubGlzdFdyYXBwZXJ9PlxuICAgICAgICA8TGlzdFxuICAgICAgICAgIGFjdGl2ZUluZGV4PXthY3RpdmVJbmRleH1cbiAgICAgICAgICBhY3RpdmVDbGFzcz17c3R5bGVzLmFjdGl2ZX1cbiAgICAgICAgICBjdXN0b21DbGFzc2VzPXt7XG4gICAgICAgICAgICBsaXN0OiBzdHlsZXMuc3RhY2tfbGlzdCxcbiAgICAgICAgICAgIGxpc3RJdGVtOiBzdHlsZXMuc3RhY2tfbGlzdF9pdGVtLFxuICAgICAgICAgIH19XG4gICAgICAgICAgb25JdGVtQ2xpY2s9eyhlLCBpdGVtLCBpbmRleCkgPT4gb25DbGljayhpbmRleCl9XG4gICAgICAgICAgZGF0YT17Wy4uLkFycmF5KGl0ZXJhdGlvbnMpXS5tYXAoKGksIGluZGV4KSA9PiBgU1RBQ0sgJHtpbmRleCArIDF9YCl9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFN0YWNrTGlzdDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./apps/Model/src/pages/ModelPage/pages/ModelDesigner/components/StackList/StackList.js\n");

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIzMy41NWU4MDMzOTc3ZWMwYjliYjY2Yi5jaHVuay5qcyIsInNvdXJjZVJvb3QiOiIifQ==