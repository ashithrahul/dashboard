(this["webpackJsonp"] = this["webpackJsonp"] || []).push([[122],{

/***/ "./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.reducer.js":
/*!*************************************************************************************!*\
  !*** ./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.reducer.js ***!
  \*************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../commons/src/index.constants */ \"./commons/src/index.constants.js\");\n/* harmony import */ var _commons_src_index_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../commons/src/index.utils */ \"./commons/src/index.utils.js\");\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! immutable */ \"./node_modules/immutable/dist/immutable.js\");\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _ModelPage_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../ModelPage.constants */ \"./apps/Model/src/pages/ModelPage/ModelPage.constants.js\");\n/* harmony import */ var _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ModelDesigner.constants */ \"./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.constants.js\");\nvar _customBlockReducer, _migrateReducer, _objectSpread2;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\nvar addScopeToState = function addScopeToState(state, _ref) {\n  var blockId = _ref.blockId,\n      scope = _ref.scope;\n  var blockIds = state.getIn(['scopes', scope]);\n  if (blockIds && blockIds.includes(blockId)) return state;\n  if (blockIds && !blockIds.includes(blockId)) return state.setIn(['scopes', scope, blockIds.size], blockId);\n  return state.setIn(['scopes', scope], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([blockId]));\n};\n\nvar removeScopeFromState = function removeScopeFromState(state, _ref2) {\n  var blockId = _ref2.blockId,\n      scope = _ref2.scope;\n  var blockIds = state.getIn(['scopes', scope]) || Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([]);\n  var index = blockIds.indexOf(blockId);\n\n  if (index > -1) {\n    if (state.getIn(['scopes', scope]).size > 1) return state.deleteIn(['scopes', scope, index]);\n    return state.deleteIn(['scopes', scope]);\n  }\n\n  return state;\n};\n\nvar addCodeBlock = function addCodeBlock(state, _ref3) {\n  var item = _ref3.item,\n      blockType = _ref3.blockType;\n  var index = state.get('nodes').findIndex(function (iItem) {\n    return iItem.get('type') === blockType;\n  });\n  return state.setIn(['nodes', index, 'items', item.component_id], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(_objectSpread({}, item, {\n    grandParentLabel: state.getIn(['nodes', \"\".concat(index), 'label'])\n  }))).updateIn(['nodePaths'], function (paths) {\n    return paths.setIn([item.component_id], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([\"\".concat(index), 'items', item.component_id]));\n  });\n};\n\nvar initialBlock = Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])({\n  category: '',\n  codes: null,\n  description: '',\n  technology: '',\n  intellectual: false,\n  intellectualEditable: true,\n  groupName: '',\n  id: null,\n  inputs: [],\n  ip: false,\n  name: '',\n  outputs: [],\n  parameters: []\n});\nvar initialTemplate = Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])({\n  ioTypes: [],\n  parameterIOTypes: [],\n  codeTemplate: [],\n  handlers: [],\n  categories: [],\n  technologies: ['PYTHON'],\n  modes: []\n});\nvar initialState = Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])({\n  nodes: {},\n  nodePaths: {},\n  info: {},\n  scopes: {},\n  blockEdit: initialBlock,\n  blockErrors: {},\n  templates: initialTemplate,\n  affectedModels: {},\n  scopesLoading: false,\n  migrationPopup: {\n    builder: {\n      blocks: {},\n      connectionLists: {},\n      stacks: {},\n      operators: {},\n      selectedNode: {}\n    }\n  },\n  transferWeightsPopup: {\n    files: {},\n    file: '',\n    fileId: '',\n    blocks: [],\n    modelVariable: {},\n    blocksLoading: true,\n    errorLoadingBlocks: false,\n    filesLoading: false,\n    variablesLoading: false\n  }\n});\n\nvar duplicateScope = function duplicateScope(state, _ref4) {\n  var scopes = _ref4.scopes,\n      id = _ref4.id;\n  if (!scopes) return state;\n  var newState = state;\n  scopes.map(function (scope) {\n    var oldScopes = newState.getIn(['scopes', scope]);\n    if (oldScopes) newState = newState.setIn(['scopes', scope, oldScopes.size], id);\n    return scope;\n  });\n  return newState;\n};\n\nvar createStackSuccess = function createStackSuccess(TYPE) {\n  return function (State, payload) {\n    var item = payload.item;\n    var state = State;\n    var stacksIndex = state.get('nodes').findIndex(function (iItem) {\n      return iItem.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"][TYPE];\n    });\n\n    if (stacksIndex === -1) {\n      var id = _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"leftPaneStacksObj\"].id;\n      state = state.updateIn(['nodes'], function (nodes) {\n        return nodes.concat(Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([{\n          id: id,\n          type: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"][TYPE],\n          label: TYPE,\n          showAddButton: false,\n          order: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"leftPaneStacksObj\"].order,\n          items: {}\n        }]));\n      });\n      stacksIndex = state.get('nodes').size - 1;\n    }\n\n    if (!state.getIn(['nodes', \"\".concat(stacksIndex), 'items', item.group_name])) {\n      state = state.setIn(['nodes', \"\".concat(stacksIndex), 'items', item.group_name], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])({\n        isGroup: true,\n        id: item.group_name,\n        name: item.group_name,\n        type: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"][TYPE],\n        items: {}\n      }));\n    }\n\n    state = state.setIn(['nodes', \"\".concat(stacksIndex), 'items', item.group_name, 'items', item.component_id], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(_objectSpread({\n      editable: true\n    }, item, {\n      type: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"][TYPE],\n      label: item.name,\n      isGroup: true,\n      grandParentLabel: state.getIn(['nodes', \"\".concat(stacksIndex), 'label'])\n    })));\n    state = state.updateIn(['nodePaths'], function (paths) {\n      return paths.setIn([item.component_id], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([\"\".concat(stacksIndex), 'items', item.group_name, 'items', item.component_id]));\n    });\n    return state;\n  };\n};\n\nvar createGroupSuccess = function createGroupSuccess(TYPE) {\n  return function (State, payload) {\n    var item = payload.item;\n    var state = State;\n    var stacksIndex = state.get('nodes').findIndex(function (iItem) {\n      return iItem.get('type') === _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"][TYPE];\n    });\n\n    if (stacksIndex === -1) {\n      var id = _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"leftPaneGroupsObj\"].id;\n      state = state.updateIn(['nodes'], function (nodes) {\n        return nodes.concat(Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([{\n          id: id,\n          type: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"][TYPE],\n          label: TYPE,\n          showAddButton: false,\n          order: _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"leftPaneGroupsObj\"].order,\n          items: {}\n        }]));\n      });\n      stacksIndex = state.get('nodes').size - 1;\n    }\n\n    state = state.setIn(['nodes', \"\".concat(stacksIndex), 'items', item.component_id], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(_objectSpread({\n      editable: true\n    }, item, {\n      type: _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"][TYPE],\n      label: item.name,\n      isGroup: false,\n      grandParentLabel: state.getIn(['nodes', \"\".concat(stacksIndex), 'label'])\n    })));\n    state = state.updateIn(['nodePaths'], function (paths) {\n      return paths.setIn([item.component_id], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([\"\".concat(stacksIndex), 'items', item.component_id]));\n    });\n    return state;\n  };\n};\n\nvar migrationUiTransform = function migrationUiTransform(state, payload) {\n  var newState = state;\n  newState = newState.setIn(['migrationPopup', 'conflictList'], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(payload));\n  return newState;\n};\n\nvar updateNewVersionProperties = function updateNewVersionProperties(state, payload) {\n  var newVersionProperties = payload.newVersionProperties,\n      builderActiveChild = payload.builderActiveChild;\n  var newState = state;\n\n  if (newVersionProperties) {\n    newState = newState.setIn(['migrationPopup', 'activeChild'], payload.newVersionProperties);\n  }\n\n  if (builderActiveChild) {\n    newState = builderActiveChild.get('id') !== _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].OPERATOR ? newState.setIn(['migrationPopup', 'builder', 'blocks', builderActiveChild.get('id')], builderActiveChild) : newState.setIn(['migrationPopup', 'builder', 'operators', builderActiveChild.get('id')], builderActiveChild);\n  }\n\n  return newState;\n};\n\nvar hideLoader = function hideLoader(state) {\n  return state.setIn(['transferWeightsPopup', 'filesLoading'], false);\n};\n\nvar loadMySpaceFilesSuccess = function loadMySpaceFilesSuccess(state, payload) {\n  var categoryId = payload.categoryId,\n      files = payload.files,\n      pageNo = payload.pageNo,\n      size = payload.size,\n      totalRecords = payload.totalRecords;\n  var newState = state;\n  newState = newState.updateIn(['transferWeightsPopup', 'files', categoryId, 'mySpace'], function (mySpace) {\n    return pageNo === 1 ? Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(files) : (mySpace || Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([])).concat(Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(files));\n  });\n  newState = newState.setIn(['transferWeightsPopup', 'filesLoading'], false);\n  newState = newState.setIn(['transferWeightsPopup', 'mySpaceTableValue'], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])({\n    page: pageNo,\n    size: size,\n    total: totalRecords\n  }));\n  return newState;\n};\n\nvar loadCommunitySpaceFilesSuccess = function loadCommunitySpaceFilesSuccess(state, payload) {\n  var categoryId = payload.categoryId,\n      files = payload.files,\n      pageNo = payload.pageNo,\n      size = payload.size,\n      totalRecords = payload.totalRecords;\n  var newState = state;\n  newState = newState.updateIn(['transferWeightsPopup', 'files', categoryId, 'communitySpace'], function (communitySpace) {\n    return pageNo === 1 ? Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(files) : (communitySpace || Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])([])).concat(Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(files));\n  });\n  newState = newState.setIn(['transferWeightsPopup', 'filesLoading'], false);\n  newState = newState.setIn(['transferWeightsPopup', 'communitySpaceTableValue'], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])({\n    page: pageNo,\n    size: size,\n    total: totalRecords\n  }));\n  return newState;\n};\n\nvar customBlockReducer = (_customBlockReducer = {}, _defineProperty(_customBlockReducer, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_CUSTOM_CODE_RESET_EDIT_BLOCK_STATE\"], function (state) {\n  var newstate = state.setIn(['blockErrors'], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])({}));\n  return newstate.setIn(['blockEdit'], initialBlock);\n}), _defineProperty(_customBlockReducer, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_CUSTOM_CODE_GET_CODE_TEMPLATE_SUCCESS\"], function (state, payload) {\n  return state.setIn(['templates', 'codeTemplate'], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(payload));\n}), _defineProperty(_customBlockReducer, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_CUSTOM_CODE_GET_IO_TYPES_SUCCESS\"], function (state, payload) {\n  return state.setIn(['templates', 'ioTypes'], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(payload));\n}), _defineProperty(_customBlockReducer, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_CUSTOM_CODE_GET_PARAMETER_IO_TYPES_SUCCESS\"], function (state, payload) {\n  return state.setIn(['templates', 'parameterIOTypes'], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(payload));\n}), _defineProperty(_customBlockReducer, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_CUSTOM_CODE_GET_CATEGORIES_SUCCESS\"], function (state, _ref5) {\n  var categories = _ref5.categories,\n      category = _ref5.category;\n  var newState = state.setIn(['templates', 'categories'], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(categories));\n  return newState.setIn(['blockEdit', 'category'], category || '');\n}), _defineProperty(_customBlockReducer, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_CUSTOM_CODE_GET_TECHNOLOGIES_SUCCESS\"], function (state, payload) {\n  return state.setIn(['templates', 'technologies'], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(payload));\n}), _defineProperty(_customBlockReducer, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_SET_CUSTOM_BLOCK_EDIT_BLOCK_STATE\"], function (state, payload) {\n  return state.mergeIn(['blockEdit'], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(payload));\n}), _customBlockReducer);\nvar migrateReducer = (_migrateReducer = {}, _defineProperty(_migrateReducer, _ModelPage_constants__WEBPACK_IMPORTED_MODULE_3__[\"ACTION_GET_MIGRATION_POPUP_DATA_SUCCESS\"], migrationUiTransform), _defineProperty(_migrateReducer, _ModelPage_constants__WEBPACK_IMPORTED_MODULE_3__[\"ACTION_GET_NEW_BLUE_PRINT_SUCCESS\"], function (state, payload) {\n  return state.setIn(['migrationPopup', 'newBluePrint'], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(payload));\n}), _defineProperty(_migrateReducer, _ModelPage_constants__WEBPACK_IMPORTED_MODULE_3__[\"ACTION_UPDATE_NEW_VERSION_PROPERTIES\"], updateNewVersionProperties), _defineProperty(_migrateReducer, _ModelPage_constants__WEBPACK_IMPORTED_MODULE_3__[\"ACTION_CLEAR_MIGRATION_DATA\"], function (state) {\n  return state.setIn(['migrationPopup'], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])({}));\n}), _defineProperty(_migrateReducer, _ModelPage_constants__WEBPACK_IMPORTED_MODULE_3__[\"ACTION_GET_MIGRATION_MODEL_SUCCESS\"], function (state, payload) {\n  return state.setIn(['migrationPopup', 'builder'], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(payload));\n}), _migrateReducer);\n\nvar reducerFunctions = _objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_LEAVE_MODEL_DESIGNER_PAGE\"], function () {\n  return initialState;\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_LOAD_DESIGNER_NODES_SUCCESS\"], function (state, _ref6) {\n  var nodes = _ref6.nodes,\n      nodePaths = _ref6.nodePaths;\n  return state.merge(Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])({\n    nodes: nodes,\n    nodePaths: nodePaths\n  }));\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_LOAD_STACKS_SUCCESS\"], function (state, _ref7) {\n  var nodes = _ref7.nodes,\n      nodePaths = _ref7.nodePaths;\n  var stackIndex = state.get('nodes').size;\n  return state.updateIn(['nodes'], function (currentNodes) {\n    return currentNodes.concat(Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(nodes));\n  }).updateIn(['nodePaths'], function (nPaths) {\n    return nPaths.merge(Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(nodePaths).map(function (i) {\n      return i.setIn([0], stackIndex);\n    }));\n  });\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_GET_DESIGNER_MODEL_DETAILS_SUCCESS\"], function (state, payload) {\n  return state.set('info', payload);\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_UPDATE_HAS_ENTITY_INFO\"], function (state, payload) {\n  return state.setIn(['info', 'hasEntities'], payload.hasEntities);\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_UPDATE_VALIDATION_INFO\"], function (state, payload) {\n  return state.setIn(['info', 'validation'], payload.Validation).setIn(['info', 'errors'], payload.Errors);\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_LOAD_ALL_SCOPES\"], function (state) {\n  return state.set('scopesLoading', true);\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_LOAD_ALL_SCOPES_SUCCESS\"], function (state, payload) {\n  return state.merge(Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])({\n    scopes: payload,\n    scopesLoading: false\n  }));\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_LOAD_ALL_SCOPES_ERROR\"], function (state) {\n  return state.set('scopesLoading', false);\n}), _defineProperty(_objectSpread2, _commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"ACTION_DUPLICATE_CHILD\"], duplicateScope), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_ADD_SCOPE_TO_BLOCK_SUCCESS\"], addScopeToState), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_REMOVE_SCOPE_FROM_BLOCK_SUCCESS\"], removeScopeFromState), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_CREATE_CODE_BLOCK_SUCCESS\"], addCodeBlock), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_CLEAR_BLOCKS_OPERATORS_CONNECTIONS\"], function (state) {\n  return state.setIn(['info', 'blocks'], undefined).setIn(['info', 'operators'], undefined).setIn(['info', 'stacks'], undefined).setIn(['info', 'template', 'connections'], undefined);\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_CREATE_STACK_SUCCESS\"], createStackSuccess(_commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].STACK)), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_CREATE_GROUP_SUCCESS\"], createGroupSuccess(_commons_src_index_constants__WEBPACK_IMPORTED_MODULE_0__[\"PaperChildrenTypes\"].GROUP)), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_GET_AFFECTED_MODELS_SUCCESS\"], function (state, payload) {\n  return state.set('affectedModels', Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(payload));\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_GENERATE_VARIABLES_SHAPES_SUCCESS\"], function (state, payload) {\n  var newState = state.setIn(['transferWeightsPopup', 'file'], payload.fileName).setIn(['transferWeightsPopup', 'variablesLoading'], false).setIn(['transferWeightsPopup', 'fileId'], payload.fileId);\n  return newState.setIn(['transferWeightsPopup', 'modelVariable'], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(payload.additionalInfo || {}));\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_LOAD_TRANSFERRED_WEIGHTS\"], function (state) {\n  return state.setIn(['transferWeightsPopup', 'blocksLoading'], true);\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_LOAD_TRANSFERRED_WEIGHTS_LOADER\"], function (state) {\n  return state.setIn(['transferWeightsPopup', 'blocksLoading'], true);\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_LOAD_MY_SPACE_FILES\"], function (state) {\n  return state.setIn(['transferWeightsPopup', 'filesLoading'], true);\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_GENERATE_VARIABLES_SHAPES\"], function (state) {\n  return state.setIn(['transferWeightsPopup', 'variablesLoading'], true);\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_GENERATE_VARIABLES_SHAPES_ERROR\"], function (state) {\n  return state.setIn(['transferWeightsPopup', 'variablesLoading'], false);\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_LOAD_MY_SPACE_FILES_ERROR\"], hideLoader), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_LOAD_COMMUNITY_SPACE_FILES_ERROR\"], hideLoader), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_LOAD_COMMUNITY_SPACE_FILES\"], function (state) {\n  return state.setIn(['transferWeightsPopup', 'filesLoading'], true);\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_LOAD_TRANSFERRED_WEIGHTS_SUCCESS\"], function (state, payload) {\n  return state.mergeIn(['transferWeightsPopup'], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])({\n    blocks: payload,\n    blocksLoading: false,\n    errorLoadingBlocks: false\n  }));\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_LOAD_TRANSFERRED_WEIGHTS_ERROR\"], function (state) {\n  return state.setIn(['transferWeightsPopup', 'blocksLoading'], false).setIn(['transferWeightsPopup', 'errorLoadingBlocks'], true);\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_LOAD_WORKSPACE_FOLDERS_SUCCESS\"], function (state, payload) {\n  return state.setIn(['transferWeightsPopup', 'files'], Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(_defineProperty({}, Object(immutable__WEBPACK_IMPORTED_MODULE_2__[\"fromJS\"])(payload.foldersList).first().get('id'), {})));\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_LOAD_COMMUNITY_SPACE_FILES_SUCCESS\"], loadCommunitySpaceFilesSuccess), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_LOAD_MY_SPACE_FILES_SUCCESS\"], loadMySpaceFilesSuccess), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_DELETE_LEFT_PANE_NODE_ITEM_SUCCESS\"], function (state, payload) {\n  return state.deleteIn(['nodes'].concat(_toConsumableArray(state.getIn(['nodePaths', payload.componentId]))));\n}), _defineProperty(_objectSpread2, _ModelDesigner_constants__WEBPACK_IMPORTED_MODULE_4__[\"ACTION_CLEAR_TRANSFER_WEIGHTS_POPUP_DATA\"], function (state) {\n  return state.set('transferWeightsPopup', initialState.get('transferWeightsPopup'));\n}), _objectSpread2), customBlockReducer, migrateReducer);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_commons_src_index_utils__WEBPACK_IMPORTED_MODULE_1__[\"createReducerFromObject\"])(reducerFunctions, initialState));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./apps/Model/src/pages/ModelPage/pages/ModelDesigner/ModelDesigner.reducer.js\n");

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIxMjIuNTVlODAzMzk3N2VjMGI5YmI2NmIuY2h1bmsuanMiLCJzb3VyY2VSb290IjoiIn0=